[2022-11-29 02:07:52,413] CRITICAL - GPU detected
[2022-11-29 02:07:52,415] INFO - Getting video script.
[2022-11-29 02:07:52,427] INFO - message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
[2022-11-29 02:07:52,427] DEBUG - api_version=None data='{"model": "text-davinci-002", "prompt": "Write a list of unique and interesting keywords relating to theory of computer science programming concepts:\\n\\n-", "temperature": 1, "max_tokens": 128, "top_p": 1, "frequency_penalty": 0, "presence_penalty": 0, "n": 1, "stop": "", "echo": false}' message='Post details'
[2022-11-29 02:07:52,427] DEBUG - Converted retries value: 2 -> Retry(total=2, connect=None, read=None, redirect=None, status=None)
[2022-11-29 02:07:52,430] DEBUG - Starting new HTTPS connection (1): api.openai.com:443
[2022-11-29 02:07:55,243] DEBUG - https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 507
[2022-11-29 02:07:55,243] INFO - message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=2391 request_id=09a52b46e6e7be3f014cb71e61593157 response_code=200
[2022-11-29 02:07:55,246] INFO - message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
[2022-11-29 02:07:55,246] DEBUG - api_version=None data='{"model": "text-davinci-002", "prompt": "Write a list of 5 interesting beginner topics on where computational complexity theory is used in the context of theory of computer science programming concepts:\\n\\n-", "temperature": 0.7, "max_tokens": 256, "top_p": 1, "frequency_penalty": 0, "presence_penalty": 0, "n": 1, "stop": "", "echo": false}' message='Post details'
[2022-11-29 02:07:56,824] DEBUG - https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 393
[2022-11-29 02:07:56,825] INFO - message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1434 request_id=1356dc95645f0e5753c4518c819e1352 response_code=200
[2022-11-29 02:07:56,825] INFO - message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
[2022-11-29 02:07:56,825] DEBUG - api_version=None data='{"model": "text-davinci-002", "prompt": "Write a short, unique and interesting title relating to the theory of The knapsack problem in the form of a video essay title without involving numbers:", "temperature": 1, "max_tokens": 20, "top_p": 1, "frequency_penalty": 0, "presence_penalty": 0, "n": 1, "stop": "", "echo": false}' message='Post details'
[2022-11-29 02:07:58,083] DEBUG - https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 318
[2022-11-29 02:07:58,083] INFO - message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1113 request_id=a38c7d1382439c9b7ce2359e925c7cba response_code=200
[2022-11-29 02:07:58,125] DEBUG - Keyword computational complexity theory, Topics ['P vs. NP problem', 'The travelling salesman problem', 'The knapsack problem', 'The satisfiability problem', 'The graph coloring problem'], Topic The hidden cost of convenience: the knapsack problem
[2022-11-29 02:07:58,125] INFO - topic The hidden cost of convenience: the knapsack problem
[2022-11-29 02:07:58,125] INFO - message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
[2022-11-29 02:07:58,125] DEBUG - api_version=None data='{"model": "text-davinci-002", "prompt": "Write a list of beginner topics relating to what is The hidden cost of convenience: the knapsack problem in the context of theory of computer science programming concepts:\\n\\n-", "temperature": 0, "max_tokens": 256, "top_p": 1, "frequency_penalty": 0, "presence_penalty": 0, "n": 1, "stop": "", "echo": false}' message='Post details'
[2022-11-29 02:08:00,732] DEBUG - https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 512
[2022-11-29 02:08:00,732] INFO - message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=2462 request_id=a34a702704ccd16b8542f3f49f385a18 response_code=200
[2022-11-29 02:08:00,732] DEBUG - topic: The hidden cost of convenience: the knapsack problem, sub topics What is the knapsack problem?
-What are the constraints of the problem?
-What is the objective function?
-What are some possible solutions to the problem?
-What is the time complexity of the problem?
-What is the space complexity of the problem?
[2022-11-29 02:08:00,732] INFO - subtopics ['What is the knapsack problem?', 'What are the constraints of the problem?', 'What is the objective function?', 'What are some possible solutions to the problem?', 'What is the time complexity of the problem?', 'What is the space complexity of the problem?']
[2022-11-29 02:08:00,732] DEBUG - getting summary for topic
[2022-11-29 02:08:00,732] INFO - message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
[2022-11-29 02:08:00,732] DEBUG - api_version=None data='{"model": "text-curie-001", "prompt": "Write a summary for the following topic in the form of a youtube description in the context of theory of computer science programming concepts:\\n\\ntopic: The hidden cost of convenience: the knapsack problem\\n\\nsummary:", "temperature": 0, "max_tokens": 256, "top_p": 1, "frequency_penalty": 0, "presence_penalty": 0, "n": 1, "stop": "", "echo": false}' message='Post details'
[2022-11-29 02:08:01,961] DEBUG - https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 811
[2022-11-29 02:08:01,961] INFO - message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1078 request_id=a0f3b16b14a45197f38980fdcdb0f7de response_code=200
[2022-11-29 02:08:01,961] INFO - summary In this video, we explore the hidden cost of convenience in computer programming. The knapsack problem is a classic problem in computer science that asks how to pack the most items into the smallest space. We show how the problem can be solved efficiently using a technique called divide and conquer, but the problem becomes more difficult as the number of items increases. We discuss the trade-offs involved in solving the problem quickly, and show how the problem can be used to illustrate the importance of efficiency in computer programming.
[2022-11-29 02:08:01,962] INFO - message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
[2022-11-29 02:08:01,962] DEBUG - api_version=None data='{"model": "text-curie-001", "prompt": "Expand greatly upon the topic of The hidden cost of convenience the knapsack problem in the context of theory of computer science programming concepts summarised for a 9th grader:\\n\\n1. What is the knapsack problem?\\n\\n", "temperature": 1, "max_tokens": 128, "top_p": 1, "frequency_penalty": 0, "presence_penalty": 0, "n": 1, "stop": ["\\n2.", "\\n\\n2.", "\\n\\n\\n2."], "echo": false}' message='Post details'
[2022-11-29 02:08:02,882] DEBUG - https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 526
[2022-11-29 02:08:02,882] INFO - message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=767 request_id=ca2ee21928b444832f5578b2019baa9c response_code=200
[2022-11-29 02:08:02,882] DEBUG - passage length 263
[2022-11-29 02:08:02,882] INFO - message='Request to OpenAI API' method=post path=https://api.openai.com/v1/edits
[2022-11-29 02:08:02,882] DEBUG - api_version=None data='{"model": "text-davinci-edit-001", "input": "The knapsack problem is a problem in mathematical problem solving where a person is given a bag of items to take a certain distance and they have to decide what to take. The problem can be solved algorithmically, but it can also be solved through trial and error.", "instruction": "Replace all non-characters with their spoken counterpart. And fix grammar. And also change all numbered lists to comma seperated lists", "temperature": 0.7, "top_p": 1}' message='Post details'
[2022-11-29 02:08:06,616] DEBUG - https://api.openai.com:443 "POST /v1/edits HTTP/1.1" 200 411
[2022-11-29 02:08:06,617] INFO - message='OpenAI API response' path=https://api.openai.com/v1/edits processing_ms=3592 request_id=0712433a40fdaeab7bd8492ee913da94 response_code=200
[2022-11-29 02:08:06,617] INFO - message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
[2022-11-29 02:08:06,617] DEBUG - api_version=None data='{"model": "text-curie-001", "prompt": "Expand greatly upon the topic of The hidden cost of convenience the knapsack problem in the context of theory of computer science programming concepts summarised for a 9th grader:\\n\\n1. What is the knapsack problem?\\n\\nThe knapsack problem is a problem in mathematical problem solving where a person is given a bag of items to take a certain distance and they have to decide what to take.\\nThe problem can be solved algorithmically, but it can also be solved through trial and error.\\n\\n2. What are the constraints of the problem?\\n\\n", "temperature": 1, "max_tokens": 128, "top_p": 1, "frequency_penalty": 0, "presence_penalty": 0, "n": 1, "stop": ["\\n3.", "\\n\\n3.", "\\n\\n\\n3."], "echo": false}' message='Post details'
[2022-11-29 02:08:07,075] DEBUG - https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 385
[2022-11-29 02:08:07,075] INFO - message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=308 request_id=a8f633a7e08a58d8cc8df5be60f4766a response_code=200
[2022-11-29 02:08:07,076] DEBUG - passage length 121
[2022-11-29 02:08:07,076] INFO - message='Request to OpenAI API' method=post path=https://api.openai.com/v1/edits
[2022-11-29 02:08:07,076] DEBUG - api_version=None data='{"model": "text-davinci-edit-001", "input": "The constraints of the problem are the max weight that can be carried and the total amount of weight that can be carried.", "instruction": "Replace all non-characters with their spoken counterpart. And fix grammar. And also change all numbered lists to comma seperated lists", "temperature": 0.7, "top_p": 1}' message='Post details'
[2022-11-29 02:08:08,759] DEBUG - https://api.openai.com:443 "POST /v1/edits HTTP/1.1" 200 271
[2022-11-29 02:08:08,760] INFO - message='OpenAI API response' path=https://api.openai.com/v1/edits processing_ms=1541 request_id=c3778ac39099873614e7a6e9843b49ca response_code=200
[2022-11-29 02:08:08,760] INFO - message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
[2022-11-29 02:08:08,760] DEBUG - api_version=None data='{"model": "text-curie-001", "prompt": "Expand greatly upon the topic of The hidden cost of convenience the knapsack problem in the context of theory of computer science programming concepts summarised for a 9th grader:\\n\\n1. What is the knapsack problem?\\n\\nThe knapsack problem is a problem in mathematical problem solving where a person is given a bag of items to take a certain distance and they have to decide what to take.\\nThe problem can be solved algorithmically, but it can also be solved through trial and error.\\n\\n2. What are the constraints of the problem?\\n\\nThe constraints of the problem are the maximum weight that can be carried and the total amount of weight that can be carried.\\n\\n3. What is the objective function?\\n\\n", "temperature": 1, "max_tokens": 128, "top_p": 1, "frequency_penalty": 0, "presence_penalty": 0, "n": 1, "stop": ["\\n4.", "\\n\\n4.", "\\n\\n\\n4."], "echo": false}' message='Post details'
[2022-11-29 02:08:09,360] DEBUG - https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 340
[2022-11-29 02:08:09,360] INFO - message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=443 request_id=a58aa7693ef3ac26fa6929519350da3e response_code=200
[2022-11-29 02:08:09,361] DEBUG - passage length 78
[2022-11-29 02:08:09,361] INFO - message='Request to OpenAI API' method=post path=https://api.openai.com/v1/edits
[2022-11-29 02:08:09,361] DEBUG - api_version=None data='{"model": "text-davinci-edit-001", "input": "The objective function is the variable that the person is trying to solve for.", "instruction": "Replace all non-characters with their spoken counterpart. And fix grammar. And also change all numbered lists to comma seperated lists", "temperature": 0.7, "top_p": 1}' message='Post details'
[2022-11-29 02:08:11,773] DEBUG - https://api.openai.com:443 "POST /v1/edits HTTP/1.1" 200 471
[2022-11-29 02:08:11,774] INFO - message='OpenAI API response' path=https://api.openai.com/v1/edits processing_ms=2250 request_id=2e537107544e3b214f1f66711e51af53 response_code=200
[2022-11-29 02:08:11,774] INFO - message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
[2022-11-29 02:08:11,774] DEBUG - api_version=None data='{"model": "text-curie-001", "prompt": "Expand greatly upon the topic of The hidden cost of convenience the knapsack problem in the context of theory of computer science programming concepts summarised for a 9th grader:\\n\\n1. What is the knapsack problem?\\n\\nThe knapsack problem is a problem in mathematical problem solving where a person is given a bag of items to take a certain distance and they have to decide what to take.\\nThe problem can be solved algorithmically, but it can also be solved through trial and error.\\n\\n2. What are the constraints of the problem?\\n\\nThe constraints of the problem are the maximum weight that can be carried and the total amount of weight that can be carried.\\n\\n3. What is the objective function?\\n\\nThe objective function is the variable that the person is trying to solve for in an optimization problem.\\nFor example, in the problem \\"maximize profits\\", the objective function is the profits.\\nIn the problem \\"minimize cost\\" the objective function is the cost.\\nIn a graph, the objective function is shown on the yaxis.\\n\\n4. What are some possible solutions to the problem?\\n\\n", "temperature": 1, "max_tokens": 128, "top_p": 1, "frequency_penalty": 0, "presence_penalty": 0, "n": 1, "stop": ["\\n5.", "\\n\\n5.", "\\n\\n\\n5."], "echo": false}' message='Post details'
[2022-11-29 02:08:12,368] DEBUG - https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 444
[2022-11-29 02:08:12,369] INFO - message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=442 request_id=a3ee7ecc571bca6ce88131666c04ba34 response_code=200
[2022-11-29 02:08:12,369] DEBUG - passage length 179
[2022-11-29 02:08:12,369] INFO - message='Request to OpenAI API' method=post path=https://api.openai.com/v1/edits
[2022-11-29 02:08:12,369] DEBUG - api_version=None data='{"model": "text-davinci-edit-001", "input": "There are many possible solutions to the problem, depending on the constraints that are set. Some solutions may include going without something, putting something back, or trades.", "instruction": "Replace all non-characters with their spoken counterpart. And fix grammar. And also change all numbered lists to comma seperated lists", "temperature": 0.7, "top_p": 1}' message='Post details'
[2022-11-29 02:08:17,311] DEBUG - https://api.openai.com:443 "POST /v1/edits HTTP/1.1" 200 327
[2022-11-29 02:08:17,311] INFO - message='OpenAI API response' path=https://api.openai.com/v1/edits processing_ms=4799 request_id=d658019437434cf8711f76a8058a258f response_code=200
[2022-11-29 02:08:17,312] INFO - message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
[2022-11-29 02:08:17,312] DEBUG - api_version=None data='{"model": "text-curie-001", "prompt": "Expand greatly upon the topic of The hidden cost of convenience the knapsack problem in the context of theory of computer science programming concepts summarised for a 9th grader:\\n\\n1. What is the knapsack problem?\\n\\nThe knapsack problem is a problem in mathematical problem solving where a person is given a bag of items to take a certain distance and they have to decide what to take.\\nThe problem can be solved algorithmically, but it can also be solved through trial and error.\\n\\n2. What are the constraints of the problem?\\n\\nThe constraints of the problem are the maximum weight that can be carried and the total amount of weight that can be carried.\\n\\n3. What is the objective function?\\n\\nThe objective function is the variable that the person is trying to solve for in an optimization problem.\\nFor example, in the problem \\"maximize profits\\", the objective function is the profits.\\nIn the problem \\"minimize cost\\" the objective function is the cost.\\nIn a graph, the objective function is shown on the yaxis.\\n\\n4. What are some possible solutions to the problem?\\n\\nThere are many possible solutions to the problem, depending on the constraints that are set.\\nSome solutions may include going without something, putting something back, or trades.\\n\\n5. What is the time complexity of the problem?\\n\\n", "temperature": 1, "max_tokens": 128, "top_p": 1, "frequency_penalty": 0, "presence_penalty": 0, "n": 1, "stop": ["\\n6.", "\\n\\n6.", "\\n\\n\\n6."], "echo": false}' message='Post details'
[2022-11-29 02:08:18,010] DEBUG - https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 480
[2022-11-29 02:08:18,011] INFO - message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=548 request_id=302c19fc3680533ef0f188bc43824ab9 response_code=200
[2022-11-29 02:08:18,011] DEBUG - passage length 215
[2022-11-29 02:08:18,011] INFO - message='Request to OpenAI API' method=post path=https://api.openai.com/v1/edits
[2022-11-29 02:08:18,011] DEBUG - api_version=None data='{"model": "text-davinci-edit-001", "input": "The time complexity of the problem is the number of possible solutions that can be generated in a given amount of time. The time complexity of the knapsack problem is O(n), where n is the number of items in the bag.", "instruction": "Replace all non-characters with their spoken counterpart. And fix grammar. And also change all numbered lists to comma seperated lists", "temperature": 0.7, "top_p": 1}' message='Post details'
[2022-11-29 02:08:26,994] DEBUG - https://api.openai.com:443 "POST /v1/edits HTTP/1.1" 200 362
[2022-11-29 02:08:26,995] INFO - message='OpenAI API response' path=https://api.openai.com/v1/edits processing_ms=8835 request_id=e27802578c6e8cb9f9153789d6f9c405 response_code=200
[2022-11-29 02:08:26,995] INFO - message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
[2022-11-29 02:08:26,995] DEBUG - api_version=None data='{"model": "text-curie-001", "prompt": "Expand greatly upon the topic of The hidden cost of convenience the knapsack problem in the context of theory of computer science programming concepts summarised for a 9th grader:\\n\\n1. What is the knapsack problem?\\n\\nThe knapsack problem is a problem in mathematical problem solving where a person is given a bag of items to take a certain distance and they have to decide what to take.\\nThe problem can be solved algorithmically, but it can also be solved through trial and error.\\n\\n2. What are the constraints of the problem?\\n\\nThe constraints of the problem are the maximum weight that can be carried and the total amount of weight that can be carried.\\n\\n3. What is the objective function?\\n\\nThe objective function is the variable that the person is trying to solve for in an optimization problem.\\nFor example, in the problem \\"maximize profits\\", the objective function is the profits.\\nIn the problem \\"minimize cost\\" the objective function is the cost.\\nIn a graph, the objective function is shown on the yaxis.\\n\\n4. What are some possible solutions to the problem?\\n\\nThere are many possible solutions to the problem, depending on the constraints that are set.\\nSome solutions may include going without something, putting something back, or trades.\\n\\n5. What is the time complexity of the problem?\\n\\nThe time complexity of the problem is the number of possible solutions that can be generated in a given amount of time. The time complexity of the knapsack problem is O(N), where N is the number of items in the bag.\\n\\n6. What is the space complexity of the problem?\\n\\n", "temperature": 1, "max_tokens": 128, "top_p": 1, "frequency_penalty": 0, "presence_penalty": 0, "n": 1, "stop": ["\\n7.", "\\n\\n7.", "\\n\\n\\n7."], "echo": false}' message='Post details'
[2022-11-29 02:08:27,645] DEBUG - https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 482
[2022-11-29 02:08:27,645] INFO - message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=493 request_id=a891fedbbff6cbf81466517273a21ed4 response_code=200
[2022-11-29 02:08:27,646] DEBUG - passage length 218
[2022-11-29 02:08:27,646] INFO - message='Request to OpenAI API' method=post path=https://api.openai.com/v1/edits
[2022-11-29 02:08:27,646] DEBUG - api_version=None data='{"model": "text-davinci-edit-001", "input": "The space complexity of the problem is the number of possible solutions that can be generated in a given amount of space. The space complexity of the knapsack problem is O(N), where N is the number of items in the bag.", "instruction": "Replace all non-characters with their spoken counterpart. And fix grammar. And also change all numbered lists to comma seperated lists", "temperature": 0.7, "top_p": 1}' message='Post details'
[2022-11-29 02:08:31,803] DEBUG - https://api.openai.com:443 "POST /v1/edits HTTP/1.1" 200 367
[2022-11-29 02:08:31,804] INFO - message='OpenAI API response' path=https://api.openai.com/v1/edits processing_ms=4015 request_id=b302f6631f81925628f8329740b60100 response_code=200
[2022-11-29 02:08:31,805] DEBUG - Starting new HTTPS connection (1): www.googleapis.com:443
[2022-11-29 02:08:31,966] DEBUG - https://www.googleapis.com:443 "GET /youtube/v3/playlists?part=id&id=UC_x5XG1OV2P6uZZ5FSM9Ttw&key=AIzaSyDfv2ISoNjVh2oX2JRJUQ1loS-voHH3GlI&maxResults=2 HTTP/1.1" 200 None
[2022-11-29 02:08:31,968] DEBUG - Starting new HTTPS connection (1): www.googleapis.com:443
[2022-11-29 02:08:32,371] DEBUG - https://www.googleapis.com:443 "GET /youtube/v3/search?part=snippet&type=video&maxResults=50&order=relevance&key=AIzaSyDfv2ISoNjVh2oX2JRJUQ1loS-voHH3GlI&q=What%20is%20the%20knapsack%20problem?%20in%20theory%20of%20computer%20science%20programming%20concepts&publishedAfter=2000-01-01T00:00:00Z&publishedBefore=3000-01-01T00:00:00Z HTTP/1.1" 200 None
[2022-11-29 02:08:32,376] DEBUG - Starting new HTTPS connection (1): www.googleapis.com:443
[2022-11-29 02:08:32,447] DEBUG - https://www.googleapis.com:443 "GET /youtube/v3/videos?key=AIzaSyDfv2ISoNjVh2oX2JRJUQ1loS-voHH3GlI&fields=items(snippet(description,tags))&part=snippet&id=gA0I_tFBCTE HTTP/1.1" 200 None
[2022-11-29 02:08:32,450] DEBUG - Starting new HTTPS connection (1): www.googleapis.com:443
[2022-11-29 02:08:32,509] DEBUG - https://www.googleapis.com:443 "GET /youtube/v3/videos?key=AIzaSyDfv2ISoNjVh2oX2JRJUQ1loS-voHH3GlI&fields=items(snippet(description,tags))&part=snippet&id=CG7AYoFLN2o HTTP/1.1" 200 None
[2022-11-29 02:08:32,511] DEBUG - Starting new HTTPS connection (1): www.googleapis.com:443
[2022-11-29 02:08:32,572] DEBUG - https://www.googleapis.com:443 "GET /youtube/v3/videos?key=AIzaSyDfv2ISoNjVh2oX2JRJUQ1loS-voHH3GlI&fields=items(snippet(description,tags))&part=snippet&id=7SGzWtEUUL8 HTTP/1.1" 200 None
[2022-11-29 02:08:32,574] DEBUG - Starting new HTTPS connection (1): www.googleapis.com:443
[2022-11-29 02:08:32,636] DEBUG - https://www.googleapis.com:443 "GET /youtube/v3/videos?key=AIzaSyDfv2ISoNjVh2oX2JRJUQ1loS-voHH3GlI&fields=items(snippet(description,tags))&part=snippet&id=PfkBS9qIMRE HTTP/1.1" 200 None
[2022-11-29 02:08:32,638] DEBUG - Starting new HTTPS connection (1): www.googleapis.com:443
[2022-11-29 02:08:32,694] DEBUG - https://www.googleapis.com:443 "GET /youtube/v3/videos?key=AIzaSyDfv2ISoNjVh2oX2JRJUQ1loS-voHH3GlI&fields=items(snippet(description,tags))&part=snippet&id=K5dq9emfr-8 HTTP/1.1" 200 None
[2022-11-29 02:08:32,696] DEBUG - Starting new HTTPS connection (1): www.googleapis.com:443
[2022-11-29 02:08:32,749] DEBUG - https://www.googleapis.com:443 "GET /youtube/v3/videos?key=AIzaSyDfv2ISoNjVh2oX2JRJUQ1loS-voHH3GlI&fields=items(snippet(description,tags))&part=snippet&id=5C7JT8cVHDU HTTP/1.1" 200 None
[2022-11-29 02:08:32,752] DEBUG - Starting new HTTPS connection (1): www.googleapis.com:443
[2022-11-29 02:08:32,797] DEBUG - https://www.googleapis.com:443 "GET /youtube/v3/videos?key=AIzaSyDfv2ISoNjVh2oX2JRJUQ1loS-voHH3GlI&fields=items(snippet(description,tags))&part=snippet&id=uQj5UNhCPuo HTTP/1.1" 200 None
[2022-11-29 02:08:32,801] DEBUG - Starting new HTTPS connection (1): www.googleapis.com:443
[2022-11-29 02:08:32,869] DEBUG - https://www.googleapis.com:443 "GET /youtube/v3/videos?key=AIzaSyDfv2ISoNjVh2oX2JRJUQ1loS-voHH3GlI&fields=items(snippet(description,tags))&part=snippet&id=GyDTT3PxFP4 HTTP/1.1" 200 None
[2022-11-29 02:08:32,871] DEBUG - Starting new HTTPS connection (1): www.googleapis.com:443
[2022-11-29 02:08:32,922] DEBUG - https://www.googleapis.com:443 "GET /youtube/v3/videos?key=AIzaSyDfv2ISoNjVh2oX2JRJUQ1loS-voHH3GlI&fields=items(snippet(description,tags))&part=snippet&id=oTTzNMHM05I HTTP/1.1" 200 None
[2022-11-29 02:08:32,924] DEBUG - Starting new HTTPS connection (1): www.googleapis.com:443
[2022-11-29 02:08:32,992] DEBUG - https://www.googleapis.com:443 "GET /youtube/v3/videos?key=AIzaSyDfv2ISoNjVh2oX2JRJUQ1loS-voHH3GlI&fields=items(snippet(description,tags))&part=snippet&id=yjRrpPejmb4 HTTP/1.1" 200 None
[2022-11-29 02:08:32,994] DEBUG - Starting new HTTPS connection (1): www.googleapis.com:443
[2022-11-29 02:08:33,050] DEBUG - https://www.googleapis.com:443 "GET /youtube/v3/videos?key=AIzaSyDfv2ISoNjVh2oX2JRJUQ1loS-voHH3GlI&fields=items(snippet(description,tags))&part=snippet&id=NOg1mv99-_w HTTP/1.1" 200 None
[2022-11-29 02:08:33,052] DEBUG - Starting new HTTPS connection (1): www.googleapis.com:443
[2022-11-29 02:08:33,124] DEBUG - https://www.googleapis.com:443 "GET /youtube/v3/videos?key=AIzaSyDfv2ISoNjVh2oX2JRJUQ1loS-voHH3GlI&fields=items(snippet(description,tags))&part=snippet&id=qDi0KYmuU1Q HTTP/1.1" 200 None
[2022-11-29 02:08:33,127] DEBUG - Starting new HTTPS connection (1): www.googleapis.com:443
[2022-11-29 02:08:33,182] DEBUG - https://www.googleapis.com:443 "GET /youtube/v3/videos?key=AIzaSyDfv2ISoNjVh2oX2JRJUQ1loS-voHH3GlI&fields=items(snippet(description,tags))&part=snippet&id=DGOwuk55xa0 HTTP/1.1" 200 None
[2022-11-29 02:08:33,185] DEBUG - Starting new HTTPS connection (1): www.googleapis.com:443
[2022-11-29 02:08:33,246] DEBUG - https://www.googleapis.com:443 "GET /youtube/v3/videos?key=AIzaSyDfv2ISoNjVh2oX2JRJUQ1loS-voHH3GlI&fields=items(snippet(description,tags))&part=snippet&id=gToNkZVOzII HTTP/1.1" 200 None
[2022-11-29 02:08:33,249] DEBUG - Starting new HTTPS connection (1): www.googleapis.com:443
[2022-11-29 02:08:33,302] DEBUG - https://www.googleapis.com:443 "GET /youtube/v3/videos?key=AIzaSyDfv2ISoNjVh2oX2JRJUQ1loS-voHH3GlI&fields=items(snippet(description,tags))&part=snippet&id=S05sPEm9T3w HTTP/1.1" 200 None
[2022-11-29 02:08:33,305] DEBUG - Starting new HTTPS connection (1): www.googleapis.com:443
[2022-11-29 02:08:33,365] DEBUG - https://www.googleapis.com:443 "GET /youtube/v3/videos?key=AIzaSyDfv2ISoNjVh2oX2JRJUQ1loS-voHH3GlI&fields=items(snippet(description,tags))&part=snippet&id=IwDuaAyrEAs HTTP/1.1" 200 None
[2022-11-29 02:08:33,367] DEBUG - Starting new HTTPS connection (1): www.googleapis.com:443
[2022-11-29 02:08:33,418] DEBUG - https://www.googleapis.com:443 "GET /youtube/v3/videos?key=AIzaSyDfv2ISoNjVh2oX2JRJUQ1loS-voHH3GlI&fields=items(snippet(description,tags))&part=snippet&id=opXBR00z_QM HTTP/1.1" 200 None
[2022-11-29 02:08:33,422] DEBUG - Starting new HTTPS connection (1): www.googleapis.com:443
[2022-11-29 02:08:33,485] DEBUG - https://www.googleapis.com:443 "GET /youtube/v3/videos?key=AIzaSyDfv2ISoNjVh2oX2JRJUQ1loS-voHH3GlI&fields=items(snippet(description,tags))&part=snippet&id=BDEz9pk8lsU HTTP/1.1" 200 None
[2022-11-29 02:08:33,488] DEBUG - Starting new HTTPS connection (1): www.googleapis.com:443
[2022-11-29 02:08:33,557] DEBUG - https://www.googleapis.com:443 "GET /youtube/v3/videos?key=AIzaSyDfv2ISoNjVh2oX2JRJUQ1loS-voHH3GlI&fields=items(snippet(description,tags))&part=snippet&id=Qv3wOkWsro0 HTTP/1.1" 200 None
[2022-11-29 02:08:33,560] DEBUG - Starting new HTTPS connection (1): www.googleapis.com:443
[2022-11-29 02:08:33,622] DEBUG - https://www.googleapis.com:443 "GET /youtube/v3/videos?key=AIzaSyDfv2ISoNjVh2oX2JRJUQ1loS-voHH3GlI&fields=items(snippet(description,tags))&part=snippet&id=W_3vCAE38Ys HTTP/1.1" 200 None
[2022-11-29 02:08:33,624] DEBUG - Starting new HTTPS connection (1): www.googleapis.com:443
[2022-11-29 02:08:33,676] DEBUG - https://www.googleapis.com:443 "GET /youtube/v3/videos?key=AIzaSyDfv2ISoNjVh2oX2JRJUQ1loS-voHH3GlI&fields=items(snippet(description,tags))&part=snippet&id=nLmhmB6NzcM HTTP/1.1" 200 None
[2022-11-29 02:08:33,678] DEBUG - Starting new HTTPS connection (1): www.googleapis.com:443
[2022-11-29 02:08:33,737] DEBUG - https://www.googleapis.com:443 "GET /youtube/v3/videos?key=AIzaSyDfv2ISoNjVh2oX2JRJUQ1loS-voHH3GlI&fields=items(snippet(description,tags))&part=snippet&id=le8tpXQyYcM HTTP/1.1" 200 None
[2022-11-29 02:08:33,740] DEBUG - Starting new HTTPS connection (1): www.googleapis.com:443
[2022-11-29 02:08:33,801] DEBUG - https://www.googleapis.com:443 "GET /youtube/v3/videos?key=AIzaSyDfv2ISoNjVh2oX2JRJUQ1loS-voHH3GlI&fields=items(snippet(description,tags))&part=snippet&id=ZaMM6MqYIAg HTTP/1.1" 200 None
[2022-11-29 02:08:33,803] DEBUG - Starting new HTTPS connection (1): www.googleapis.com:443
[2022-11-29 02:08:33,861] DEBUG - https://www.googleapis.com:443 "GET /youtube/v3/videos?key=AIzaSyDfv2ISoNjVh2oX2JRJUQ1loS-voHH3GlI&fields=items(snippet(description,tags))&part=snippet&id=1pmBjIZ20pE HTTP/1.1" 200 None
[2022-11-29 02:08:33,863] DEBUG - Starting new HTTPS connection (1): www.googleapis.com:443
[2022-11-29 02:08:33,935] DEBUG - https://www.googleapis.com:443 "GET /youtube/v3/videos?key=AIzaSyDfv2ISoNjVh2oX2JRJUQ1loS-voHH3GlI&fields=items(snippet(description,tags))&part=snippet&id=yT5AHL_MGas HTTP/1.1" 200 None
[2022-11-29 02:08:33,936] DEBUG - Hashtags ['#python', '#machinelearning', '#geneticalgorithms', '#knapsackproblem', '#dynamicprogramming', '#coderscamp', '#whiteboardexplanation', '#bottomupdynamic', '#codinginterview']
[2022-11-29 02:08:33,937] DEBUG - Top Hashtags ['#python', '#machinelearning', '#geneticalgorithms', '#knapsackproblem', '#dynamicprogramming']
[2022-11-29 02:08:33,937] DEBUG - Tags ['0612', '0612 tv', 'nerdfirst', 'nerdfirstnet', 'nerdfirst.net', 'knapsack problem', 'recursion', 'dynamic programming', 'algorithms', 'data structure', 'computer science', 'university', 'college', 'python', 'knapsack problem', 'greedy algorithms', 'dynamic programming', 'python tutorial', 'computer science', 'dynamic programming', 'knapsack problem', 'knapsack problem', 'knapsack algorithm', 'fractional knapsack problem', '0 1 knapsack problem', 'dynamic programming', 'jayanti khatri', "jenny's lecture", 'data structure', 'data structures and algorithms', 'ugc net computer science', 'algorithms', 'ugc net syllabus', 'knapsack problem using dynamic programming', 'dynamic programming examples', 'algorithm in data structure', 'advanced data structures', 'jennys lectures', 'gate computer science preparation', 'study material', 'engineering', 'c programming', 'it', 'cse', 'what are genetic algorithms', 'genetic algorithms applications', 'genetic algorithms explained', 'genetic algorithms', 'genetic algorithm explained', 'knapsack problem genetic algorithm', 'genetic algorithm natural selection', 'genetic algorithms example', 'genetic algorithm tutorial', 'genetic algorithm course', 'genetic algorithm', 'genetic algorithm example', 'what is genetic algorithm', 'genetic algorithm optimization', 'fitness function in genetic algorithm', 'evolutionary algorithm', 'knapsack problem', 'algorithms', 'algorithm', 'greedy method', 'knapsack problem', 'greedy knapsack', 'greedy knapsack problem', 'abdul bari', 'bari', 'gate', 'knapsack problem algorithm with example', 'knapsack problem algorithm dynamic programming', '0/1 knapsack problem using dynamic programming', '0/1 knapsack problem using dynamic programming algorithm', '0/1 knapsack problem using dynamic programming example', '0/1 knapsack problem using dynamic programming numerical', '0/1 knapsack problem dynamic programming', '0/1 knapsack problem example with solution', '0/1 knapsack problem example', 'knapsack problem using dynamic programming', 'knapsack problem using dynamic', 'knapsack problem algorithm', 'knapsack problem algorithm dynamic programming', '0/1 knapsack problem using dynamic programming', '0/1 knapsack problem using dynamic programming algorithm', '0/1 knapsack problem dynamic programming', '0/1 knapsack problem explanation', 'knapsack problem', 'knapsack', 'knapsack problem', 'fractional knapsack', 'fractional knapsack problem', 'backtracking', 'inside code', 'knapsack greedy', 'fractional knapsack greedy', 'python', 'mit', 'mit ocw', 'ocw', 'introduction to programming', 'python programming tutorial', 'python tutorial youtube', 'tutorial', 'python tutorial', 'python programming', 'introduction to programming using python', 'introduction to programming concepts', 'traveling salesman problem using dynamic programming', 'travelling salesman problem algorithm', 'travelling salesman problem dynamic programming', 'travelling salesman problem using dynamic programming algorithm', 'traveling salesman problem in daa', 'traveling salesman problem in english', 'dynamic programming traveling salesman problem', '#uclouvain', 'oscar', 'pierre schaus', 'constraint programming', 'challenging scheduling', 'traffic-engineering problems', 'ecole polytechnique de louvain', 'universite catholique de louvain', 'icteam', 'knapsack', '80286', 'dynamic programming', 'algorithms', 'algorithm', 'dynamic programming', '0/1 knap sack', '0/1 knapsack', '0/1 knapsack problem', 'tabulation method', 'abdul bari', 'bari', 'gate', 'computer', 'programming', 'python', 'science', 'computation', 'problem', 'solving', 'recursion', 'binary', 'search', 'classes', 'inheritance', 'libraries', 'algorithms', 'optimization', 'problems', 'modules', 'simulation', 'big-o-notation', 'control', 'flow', 'exceptions', 'building', 'computational', 'models', 'software', 'engineering', 'optimization', 'education', 'engineering']
[2022-11-29 02:08:33,937] DEBUG - Top Tags ['knapsack problem', 'dynamic programming', 'algorithms', 'python', 'engineering', 'recursion', 'data structure', 'computer science', 'python tutorial', 'fractional knapsack problem', 'knapsack problem using dynamic programming', 'algorithm']
