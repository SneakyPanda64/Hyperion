[2022-11-18 00:31:23,518] INFO - Getting video script.
[2022-11-18 00:31:23,530] INFO - message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
[2022-11-18 00:31:23,530] DEBUG - api_version=None data='{"model": "text-davinci-002", "prompt": "Write a list of unique and interesting keywords relating to basic computer science:\\n\\n-", "temperature": 1, "max_tokens": 128, "top_p": 1, "frequency_penalty": 0, "presence_penalty": 0, "n": 1, "stop": "", "echo": false}' message='Post details'
[2022-11-18 00:31:23,530] DEBUG - Converted retries value: 2 -> Retry(total=2, connect=None, read=None, redirect=None, status=None)
[2022-11-18 00:31:23,534] DEBUG - Starting new HTTPS connection (1): api.openai.com:443
[2022-11-18 00:31:25,809] DEBUG - https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 442
[2022-11-18 00:31:25,810] INFO - message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1887 request_id=cd6a3cd2a6b8dd1d17233437992bbfae response_code=200
[2022-11-18 00:31:25,814] INFO - message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
[2022-11-18 00:31:25,814] DEBUG - api_version=None data='{"model": "text-curie-001", "prompt": "Write a list of 5 interesting beginner topics on where functional programming is used in the context of computer science:\\n-", "temperature": 0.7, "max_tokens": 256, "top_p": 1, "frequency_penalty": 0, "presence_penalty": 0, "n": 1, "stop": "", "echo": false}' message='Post details'
[2022-11-18 00:31:26,190] DEBUG - https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 303
[2022-11-18 00:31:26,192] INFO - message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=231 request_id=7aa185fb514d7f05c04a34f11605c670 response_code=200
[2022-11-18 00:31:26,192] INFO - message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
[2022-11-18 00:31:26,192] DEBUG - api_version=None data='{"model": "text-davinci-002", "prompt": "Write a short, unique and interesting title relating to the theory of Haskell in the form of a video essay title without involving numbers:", "temperature": 1, "max_tokens": 20, "top_p": 1, "frequency_penalty": 0, "presence_penalty": 0, "n": 1, "stop": "", "echo": false}' message='Post details'
[2022-11-18 00:31:27,160] DEBUG - https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 311
[2022-11-18 00:31:27,160] INFO - message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=828 request_id=de9e0f57cefcb77e64f297ad9a01d043 response_code=200
[2022-11-18 00:31:27,199] DEBUG - Keyword functional programming, Topics ['Lisp', 'Haskell', 'Erlang', ' Clojure', ' Scala'], Topic Haskell: A Functional Language for the Future
[2022-11-18 00:31:27,199] INFO - message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
[2022-11-18 00:31:27,199] DEBUG - api_version=None data='{"model": "text-davinci-002", "prompt": "Write a list of beginner topics relating to what is Haskell: A Functional Language for the Future in the context of computer science:\\n\\n", "temperature": 0, "max_tokens": 256, "top_p": 1, "frequency_penalty": 0, "presence_penalty": 0, "n": 1, "stop": "", "echo": false}' message='Post details'
[2022-11-18 00:31:32,580] DEBUG - https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 713
[2022-11-18 00:31:32,581] INFO - message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=5241 request_id=8b632fe6db6b9a5449e8f977e1b8fbf0 response_code=200
[2022-11-18 00:31:32,581] DEBUG - topic: Haskell: A Functional Language for the Future, sub topics 
-What is a functional programming language?
-What are the benefits of functional programming?
-What makes Haskell unique among functional programming languages?
-What are some of the features of Haskell?
-What are some of the drawbacks of Haskell?
-How is Haskell used in the real world?
-What are some of the projects that use Haskell?
-What are some of the companies that use Haskell?
-What are some of the challenges of learning Haskell?
[2022-11-18 00:31:32,581] DEBUG - getting summary for topic
[2022-11-18 00:31:32,581] INFO - message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
[2022-11-18 00:31:32,581] DEBUG - api_version=None data='{"model": "text-curie-001", "prompt": "Write a summary for the following topic in the form of a youtube description in the context of computer science:\\n\\ntopic: Haskell: A Functional Language for the Future\\n\\nsummary:", "temperature": 0, "max_tokens": 256, "top_p": 1, "frequency_penalty": 0, "presence_penalty": 0, "n": 1, "stop": "", "echo": false}' message='Post details'
[2022-11-18 00:31:33,069] DEBUG - https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 410
[2022-11-18 00:31:33,069] INFO - message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=341 request_id=b3f16dda7a2cf1330b1b92a6f8bf98a5 response_code=200
[2022-11-18 00:31:33,069] INFO - message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
[2022-11-18 00:31:33,070] DEBUG - api_version=None data='{"model": "text-davinci-002", "prompt": "Expand greatly upon the topic of Haskell: A Functional Language for the Future in the context of computer science summarised for a 9th grader:\\n\\n1. What is a functional programming language?\\n\\n", "temperature": 1, "max_tokens": 128, "top_p": 1, "frequency_penalty": 0, "presence_penalty": 0, "n": 1, "stop": ["2.", "1."], "echo": false}' message='Post details'
[2022-11-18 00:31:35,238] DEBUG - https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 486
[2022-11-18 00:31:35,239] INFO - message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=2030 request_id=e4fa2fe1c7e67d7645c85a0c604d9d3f response_code=200
[2022-11-18 00:31:35,239] INFO - message='Request to OpenAI API' method=post path=https://api.openai.com/v1/edits
[2022-11-18 00:31:35,239] DEBUG - api_version=None data='{"model": "text-davinci-edit-001", "input": "Functional programming languages are those which allow functions to be treated as first-class citizens. That is, they can be passed as arguments to other functions, returned from functions, and assigned to variables.", "instruction": "Replace all non-characters with their spoken counterpart. And fix grammar.", "temperature": 0, "top_p": 1}' message='Post details'
[2022-11-18 00:31:37,352] DEBUG - https://api.openai.com:443 "POST /v1/edits HTTP/1.1" 200 363
[2022-11-18 00:31:37,352] INFO - message='OpenAI API response' path=https://api.openai.com/v1/edits processing_ms=1972 request_id=c342434d45c42464d88fc302d8b401e5 response_code=200
[2022-11-18 00:31:37,352] INFO - message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
[2022-11-18 00:31:37,353] DEBUG - api_version=None data='{"model": "text-davinci-002", "prompt": "Expand greatly upon the topic of Haskell: A Functional Language for the Future in the context of computer science summarised for a 9th grader:\\n\\n1. What is a functional programming language?\\n\\nFunctional programming languages are those which allow functions to be treated as firstclass citizens. That is, they can be passed as arguments to other functions, returned from functions, and assigned to variables.\\n\\n2. What are the benefits of functional programming?\\n\\n", "temperature": 1, "max_tokens": 128, "top_p": 1, "frequency_penalty": 0, "presence_penalty": 0, "n": 1, "stop": ["3.", "2."], "echo": false}' message='Post details'
[2022-11-18 00:31:41,887] DEBUG - https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 699
[2022-11-18 00:31:41,888] INFO - message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=4384 request_id=6bb3d21dad3a75c2b006e1d59348548f response_code=200
[2022-11-18 00:31:41,888] INFO - message='Request to OpenAI API' method=post path=https://api.openai.com/v1/edits
[2022-11-18 00:31:41,888] DEBUG - api_version=None data='{"model": "text-davinci-edit-001", "input": "There are a number of benefits to using a functional programming language. These include:\\n\\nimproved code readability and maintainability, as functional programming languages tend to use simpler syntax;\\n\\nbetter support for parallelism and concurrency, as functional programming languages are often easier to reason about;\\n\\nand improved performance, as functional programming languages often make it easier to optimize code.", "instruction": "Replace all non-characters with their spoken counterpart. And fix grammar.", "temperature": 0, "top_p": 1}' message='Post details'
[2022-11-18 00:31:49,083] DEBUG - https://api.openai.com:443 "POST /v1/edits HTTP/1.1" 200 988
[2022-11-18 00:31:49,084] INFO - message='OpenAI API response' path=https://api.openai.com/v1/edits processing_ms=7058 request_id=4e55bc464898ac1fdf7302f2bee1b06a response_code=200
[2022-11-18 00:31:49,084] INFO - message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
[2022-11-18 00:31:49,084] DEBUG - api_version=None data='{"model": "text-davinci-002", "prompt": "Expand greatly upon the topic of Haskell: A Functional Language for the Future in the context of computer science summarised for a 9th grader:\\n\\n1. What is a functional programming language?\\n\\nFunctional programming languages are those which allow functions to be treated as firstclass citizens. That is, they can be passed as arguments to other functions, returned from functions, and assigned to variables.\\n\\n2. What are the benefits of functional programming?\\n\\nThere are a number of benefits to using a functional programming language. These include improved code readability and maintainability, as functional programming languages tend to use simpler syntax; better support for parallelism and concurrency, as functional programming languages are often easier to reason about; and improved performance, as functional programming languages often make it easier to optimize code.\\n\\nThere are a number of benefits to using a functional programming language. These include improved code readability and maintainability, as functional programming languages tend to use simpler syntax; better support for parallelism and concurrency, as functional programming languages are often easier to reason about; and improved performance, as functional programming languages often make it easier to optimize code.\\n\\n3. What makes Haskell unique among functional programming languages?\\n\\n", "temperature": 1, "max_tokens": 128, "top_p": 1, "frequency_penalty": 0, "presence_penalty": 0, "n": 1, "stop": ["4.", "3."], "echo": false}' message='Post details'
[2022-11-18 00:31:52,380] DEBUG - https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 772
[2022-11-18 00:31:52,382] INFO - message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=3156 request_id=83c7537dfb8a4bb86fd1c0925f2a6777 response_code=200
[2022-11-18 00:31:52,382] INFO - message='Request to OpenAI API' method=post path=https://api.openai.com/v1/edits
[2022-11-18 00:31:52,382] DEBUG - api_version=None data='{"model": "text-davinci-edit-001", "input": "Haskell is a unique functional programming language in a number of ways. Firstly, it is a pure functional programming language, which means that all code is written in a purely functional style. This makes Haskell code more reliable and easier to reason about. Secondly, Haskell has a strong type system, which means that code is less likely to contain errors. Finally, Haskell is a lazy language, which means that code is not executed until it is needed. This can lead to more efficient code execution.", "instruction": "Replace all non-characters with their spoken counterpart. And fix grammar.", "temperature": 0, "top_p": 1}' message='Post details'
[2022-11-18 00:31:57,674] DEBUG - https://api.openai.com:443 "POST /v1/edits HTTP/1.1" 200 652
[2022-11-18 00:31:57,674] INFO - message='OpenAI API response' path=https://api.openai.com/v1/edits processing_ms=5149 request_id=c266b8a71320abca003b61c0ca6a042a response_code=200
[2022-11-18 00:31:57,674] INFO - message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
[2022-11-18 00:31:57,674] DEBUG - api_version=None data='{"model": "text-davinci-002", "prompt": "Expand greatly upon the topic of Haskell: A Functional Language for the Future in the context of computer science summarised for a 9th grader:\\n\\n1. What is a functional programming language?\\n\\nFunctional programming languages are those which allow functions to be treated as firstclass citizens. That is, they can be passed as arguments to other functions, returned from functions, and assigned to variables.\\n\\n2. What are the benefits of functional programming?\\n\\nThere are a number of benefits to using a functional programming language. These include improved code readability and maintainability, as functional programming languages tend to use simpler syntax; better support for parallelism and concurrency, as functional programming languages are often easier to reason about; and improved performance, as functional programming languages often make it easier to optimize code.\\n\\nThere are a number of benefits to using a functional programming language. These include improved code readability and maintainability, as functional programming languages tend to use simpler syntax; better support for parallelism and concurrency, as functional programming languages are often easier to reason about; and improved performance, as functional programming languages often make it easier to optimize code.\\n\\n3. What makes Haskell unique among functional programming languages?\\n\\nHaskell is a unique functional programming language in a number of ways. Firstly, it is a pure functional programming language, which means that all code is written in a purely functional style. This makes Haskell code more reliable and easier to reason about. Secondly, Haskell has a strong type system, which means that code is less likely to contain errors. Finally, Haskell is a lazy language, which means that code is not executed until it is needed. This can lead to more efficient code execution.\\n\\n4. What are some of the features of Haskell?\\n\\n", "temperature": 1, "max_tokens": 128, "top_p": 1, "frequency_penalty": 0, "presence_penalty": 0, "n": 1, "stop": ["5.", "4."], "echo": false}' message='Post details'
[2022-11-18 00:32:00,788] DEBUG - https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 869
[2022-11-18 00:32:00,789] INFO - message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=2974 request_id=ad749b97f034faba9e8375ef98f7ce5f response_code=200
[2022-11-18 00:32:00,789] INFO - message='Request to OpenAI API' method=post path=https://api.openai.com/v1/edits
[2022-11-18 00:32:00,790] DEBUG - api_version=None data='{"model": "text-davinci-edit-001", "input": "Some of the features of Haskell include:\\n\\n- Haskell is a pure functional programming language, which means that all code is written in a purely functional style. This makes Haskell code more reliable and easier to reason about.\\n\\n- Haskell has a strong type system, which means that code is less likely to contain errors.\\n\\n- Haskell is a lazy language, which means that code is not executed until it is needed. This can lead to more efficient code execution.\\n\\n- Haskell supports a number of advanced features such as advanced type system features, functional patterns, and monadic programming.", "instruction": "Replace all non-characters with their spoken counterpart. And fix grammar.", "temperature": 0, "top_p": 1}' message='Post details'
[2022-11-18 00:32:09,957] DEBUG - https://api.openai.com:443 "POST /v1/edits HTTP/1.1" 200 752
[2022-11-18 00:32:09,957] INFO - message='OpenAI API response' path=https://api.openai.com/v1/edits processing_ms=9028 request_id=949b2413d64dda1ce2537a8e36a4922b response_code=200
[2022-11-18 00:32:09,957] INFO - message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
[2022-11-18 00:32:09,957] DEBUG - api_version=None data='{"model": "text-davinci-002", "prompt": "Expand greatly upon the topic of Haskell: A Functional Language for the Future in the context of computer science summarised for a 9th grader:\\n\\n1. What is a functional programming language?\\n\\nFunctional programming languages are those which allow functions to be treated as firstclass citizens. That is, they can be passed as arguments to other functions, returned from functions, and assigned to variables.\\n\\n2. What are the benefits of functional programming?\\n\\nThere are a number of benefits to using a functional programming language. These include improved code readability and maintainability, as functional programming languages tend to use simpler syntax; better support for parallelism and concurrency, as functional programming languages are often easier to reason about; and improved performance, as functional programming languages often make it easier to optimize code.\\n\\nThere are a number of benefits to using a functional programming language. These include improved code readability and maintainability, as functional programming languages tend to use simpler syntax; better support for parallelism and concurrency, as functional programming languages are often easier to reason about; and improved performance, as functional programming languages often make it easier to optimize code.\\n\\n3. What makes Haskell unique among functional programming languages?\\n\\nHaskell is a unique functional programming language in a number of ways. Firstly, it is a pure functional programming language, which means that all code is written in a purely functional style. This makes Haskell code more reliable and easier to reason about. Secondly, Haskell has a strong type system, which means that code is less likely to contain errors. Finally, Haskell is a lazy language, which means that code is not executed until it is needed. This can lead to more efficient code execution.\\n\\n4. What are some of the features of Haskell?\\n\\nSome of the features of Haskell include:\\n\\n Haskell is a pure functional programming language, which means that all code is written in a purely functional style. This makes Haskell code more reliable and easier to reason about. \\n\\n Haskell has a strong type system, which means that code is less likely to contain errors. \\n\\n Haskell is a lazy language, which means that code is not executed until it is needed. This can lead to more efficient code execution. \\n\\n Haskell supports a number of advanced features such as advanced type system features, functional patterns, and monadic programming.\\n\\n5. What are some of the drawbacks of Haskell?\\n\\n", "temperature": 1, "max_tokens": 128, "top_p": 1, "frequency_penalty": 0, "presence_penalty": 0, "n": 1, "stop": ["6.", "5."], "echo": false}' message='Post details'
[2022-11-18 00:32:12,952] DEBUG - https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 536
[2022-11-18 00:32:12,952] INFO - message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=2853 request_id=79ed5168f868a4ab38d6c26c106d7bc0 response_code=200
[2022-11-18 00:32:12,952] INFO - message='Request to OpenAI API' method=post path=https://api.openai.com/v1/edits
[2022-11-18 00:32:12,952] DEBUG - api_version=None data='{"model": "text-davinci-edit-001", "input": "Some of the drawbacks of Haskell include:\\n\\n Haskell can be difficult to learn for programmers who are new to functional programming. \\n\\n Haskell can be difficult to read for programmers who are not familiar with the syntax. \\n\\n Haskell code can be difficult to debug.", "instruction": "Replace all non-characters with their spoken counterpart. And fix grammar.", "temperature": 0, "top_p": 1}' message='Post details'
[2022-11-18 00:32:13,062] DEBUG - https://api.openai.com:443 "POST /v1/edits HTTP/1.1" 429 347
[2022-11-18 00:32:13,062] INFO - message='OpenAI API response' path=https://api.openai.com/v1/edits processing_ms=None request_id=0d4361552593c5c169f62edf433a131f response_code=429
[2022-11-18 00:32:13,062] INFO - error_code=None error_message='Rate limit reached for default-text-davinci-edit-001 in organization org-xTzTe98H3pdIt4U4fWax4sr2 on requests per min. Limit: 20.000000 / min. Current: 24.000000 / min. Contact support@openai.com if you continue to have issues.' error_param=None error_type=requests message='OpenAI API error received' stream_error=False
[2022-11-18 00:32:13,062] DEBUG - [Edit/Openai] Rate limited retrying in 7s
[2022-11-18 00:32:20,065] INFO - message='Request to OpenAI API' method=post path=https://api.openai.com/v1/edits
[2022-11-18 00:32:20,065] DEBUG - api_version=None data='{"model": "text-davinci-edit-001", "input": "Some of the drawbacks of Haskell include:\\n\\n Haskell can be difficult to learn for programmers who are new to functional programming. \\n\\n Haskell can be difficult to read for programmers who are not familiar with the syntax. \\n\\n Haskell code can be difficult to debug.", "instruction": "Replace all non-characters with their spoken counterpart. And fix grammar.", "temperature": 0, "top_p": 1}' message='Post details'
[2022-11-18 00:32:24,618] DEBUG - https://api.openai.com:443 "POST /v1/edits HTTP/1.1" 200 412
[2022-11-18 00:32:24,618] INFO - message='OpenAI API response' path=https://api.openai.com/v1/edits processing_ms=4412 request_id=eeff012c5bfeab6cf0cc34049bef080b response_code=200
[2022-11-18 00:32:24,618] INFO - message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
[2022-11-18 00:32:24,618] DEBUG - api_version=None data='{"model": "text-davinci-002", "prompt": "Expand greatly upon the topic of Haskell: A Functional Language for the Future in the context of computer science summarised for a 9th grader:\\n\\n1. What is a functional programming language?\\n\\nFunctional programming languages are those which allow functions to be treated as firstclass citizens. That is, they can be passed as arguments to other functions, returned from functions, and assigned to variables.\\n\\n2. What are the benefits of functional programming?\\n\\nThere are a number of benefits to using a functional programming language. These include improved code readability and maintainability, as functional programming languages tend to use simpler syntax; better support for parallelism and concurrency, as functional programming languages are often easier to reason about; and improved performance, as functional programming languages often make it easier to optimize code.\\n\\nThere are a number of benefits to using a functional programming language. These include improved code readability and maintainability, as functional programming languages tend to use simpler syntax; better support for parallelism and concurrency, as functional programming languages are often easier to reason about; and improved performance, as functional programming languages often make it easier to optimize code.\\n\\n3. What makes Haskell unique among functional programming languages?\\n\\nHaskell is a unique functional programming language in a number of ways. Firstly, it is a pure functional programming language, which means that all code is written in a purely functional style. This makes Haskell code more reliable and easier to reason about. Secondly, Haskell has a strong type system, which means that code is less likely to contain errors. Finally, Haskell is a lazy language, which means that code is not executed until it is needed. This can lead to more efficient code execution.\\n\\n4. What are some of the features of Haskell?\\n\\nSome of the features of Haskell include:\\n\\n Haskell is a pure functional programming language, which means that all code is written in a purely functional style. This makes Haskell code more reliable and easier to reason about. \\n\\n Haskell has a strong type system, which means that code is less likely to contain errors. \\n\\n Haskell is a lazy language, which means that code is not executed until it is needed. This can lead to more efficient code execution. \\n\\n Haskell supports a number of advanced features such as advanced type system features, functional patterns, and monadic programming.\\n\\n5. What are some of the drawbacks of Haskell?\\n\\nSome of the drawbacks of Haskell include\\n\\n Haskell can be difficult to learn for programmers who are new to functional programming\\n\\n Haskell can be difficult to read for programmers who are not familiar with the syntax\\n\\n Haskell code can be difficult to debug\\n\\n6. How is Haskell used in the real world?\\n\\n", "temperature": 1, "max_tokens": 128, "top_p": 1, "frequency_penalty": 0, "presence_penalty": 0, "n": 1, "stop": ["7.", "6."], "echo": false}' message='Post details'
[2022-11-18 00:32:26,195] DEBUG - https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 563
[2022-11-18 00:32:26,195] INFO - message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1436 request_id=bb0a976dff05c173d4d24d1e03d0c7d1 response_code=200
[2022-11-18 00:32:26,195] INFO - message='Request to OpenAI API' method=post path=https://api.openai.com/v1/edits
[2022-11-18 00:32:26,195] DEBUG - api_version=None data='{"model": "text-davinci-edit-001", "input": "Haskell is used in a number of ways in the real world. For example, it is used by companies such as Facebook, Google, and Microsoft for a variety of tasks including data analysis, web development, and software engineering. Additionally, Haskell is used in a number of research projects in academia.", "instruction": "Replace all non-characters with their spoken counterpart. And fix grammar.", "temperature": 0, "top_p": 1}' message='Post details'
[2022-11-18 00:32:30,265] DEBUG - https://api.openai.com:443 "POST /v1/edits HTTP/1.1" 200 446
[2022-11-18 00:32:30,266] INFO - message='OpenAI API response' path=https://api.openai.com/v1/edits processing_ms=3930 request_id=77c9586cebd880d6799ebc50c33072c3 response_code=200
[2022-11-18 00:32:30,266] INFO - message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
[2022-11-18 00:32:30,266] DEBUG - api_version=None data='{"model": "text-davinci-002", "prompt": "Expand greatly upon the topic of Haskell: A Functional Language for the Future in the context of computer science summarised for a 9th grader:\\n\\n1. What is a functional programming language?\\n\\nFunctional programming languages are those which allow functions to be treated as firstclass citizens. That is, they can be passed as arguments to other functions, returned from functions, and assigned to variables.\\n\\n2. What are the benefits of functional programming?\\n\\nThere are a number of benefits to using a functional programming language. These include improved code readability and maintainability, as functional programming languages tend to use simpler syntax; better support for parallelism and concurrency, as functional programming languages are often easier to reason about; and improved performance, as functional programming languages often make it easier to optimize code.\\n\\nThere are a number of benefits to using a functional programming language. These include improved code readability and maintainability, as functional programming languages tend to use simpler syntax; better support for parallelism and concurrency, as functional programming languages are often easier to reason about; and improved performance, as functional programming languages often make it easier to optimize code.\\n\\n3. What makes Haskell unique among functional programming languages?\\n\\nHaskell is a unique functional programming language in a number of ways. Firstly, it is a pure functional programming language, which means that all code is written in a purely functional style. This makes Haskell code more reliable and easier to reason about. Secondly, Haskell has a strong type system, which means that code is less likely to contain errors. Finally, Haskell is a lazy language, which means that code is not executed until it is needed. This can lead to more efficient code execution.\\n\\n4. What are some of the features of Haskell?\\n\\nSome of the features of Haskell include:\\n\\n Haskell is a pure functional programming language, which means that all code is written in a purely functional style. This makes Haskell code more reliable and easier to reason about. \\n\\n Haskell has a strong type system, which means that code is less likely to contain errors. \\n\\n Haskell is a lazy language, which means that code is not executed until it is needed. This can lead to more efficient code execution. \\n\\n Haskell supports a number of advanced features such as advanced type system features, functional patterns, and monadic programming.\\n\\n5. What are some of the drawbacks of Haskell?\\n\\nSome of the drawbacks of Haskell include\\n\\n Haskell can be difficult to learn for programmers who are new to functional programming\\n\\n Haskell can be difficult to read for programmers who are not familiar with the syntax\\n\\n Haskell code can be difficult to debug\\n\\n6. How is Haskell used in the real world?\\n\\nHaskell is used in a number of ways in the real world. For example, it is used by companies such as Facebook, Google, and Microsoft for a variety of tasks including data analysis, web development, and software engineering. Additionally, Haskell is used in a number of research projects in academia.\\n\\n7. What are some of the projects that use Haskell?\\n\\n", "temperature": 1, "max_tokens": 128, "top_p": 1, "frequency_penalty": 0, "presence_penalty": 0, "n": 1, "stop": ["8.", "7."], "echo": false}' message='Post details'
[2022-11-18 00:32:33,193] DEBUG - https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 560
[2022-11-18 00:32:33,193] INFO - message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=2786 request_id=0773d73e95f5675fb34710386d0171b5 response_code=200
[2022-11-18 00:32:33,193] INFO - message='Request to OpenAI API' method=post path=https://api.openai.com/v1/edits
[2022-11-18 00:32:33,193] DEBUG - api_version=None data='{"model": "text-davinci-edit-001", "input": "Some of the projects that use Haskell include the Haskell Platform, a set of core libraries and tools that are widely used in the Haskell community; the Glasgow Haskell Compiler, the most widely used Haskell compiler; and the Cabal package manager, a tool for managing Haskell software packages.", "instruction": "Replace all non-characters with their spoken counterpart. And fix grammar.", "temperature": 0, "top_p": 1}' message='Post details'
[2022-11-18 00:32:35,755] DEBUG - https://api.openai.com:443 "POST /v1/edits HTTP/1.1" 200 443
[2022-11-18 00:32:35,755] INFO - message='OpenAI API response' path=https://api.openai.com/v1/edits processing_ms=2423 request_id=85353a0d366f62614f4bd148501105eb response_code=200
[2022-11-18 00:32:35,756] INFO - message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
[2022-11-18 00:32:35,756] DEBUG - api_version=None data='{"model": "text-davinci-002", "prompt": "Expand greatly upon the topic of Haskell: A Functional Language for the Future in the context of computer science summarised for a 9th grader:\\n\\n1. What is a functional programming language?\\n\\nFunctional programming languages are those which allow functions to be treated as firstclass citizens. That is, they can be passed as arguments to other functions, returned from functions, and assigned to variables.\\n\\n2. What are the benefits of functional programming?\\n\\nThere are a number of benefits to using a functional programming language. These include improved code readability and maintainability, as functional programming languages tend to use simpler syntax; better support for parallelism and concurrency, as functional programming languages are often easier to reason about; and improved performance, as functional programming languages often make it easier to optimize code.\\n\\nThere are a number of benefits to using a functional programming language. These include improved code readability and maintainability, as functional programming languages tend to use simpler syntax; better support for parallelism and concurrency, as functional programming languages are often easier to reason about; and improved performance, as functional programming languages often make it easier to optimize code.\\n\\n3. What makes Haskell unique among functional programming languages?\\n\\nHaskell is a unique functional programming language in a number of ways. Firstly, it is a pure functional programming language, which means that all code is written in a purely functional style. This makes Haskell code more reliable and easier to reason about. Secondly, Haskell has a strong type system, which means that code is less likely to contain errors. Finally, Haskell is a lazy language, which means that code is not executed until it is needed. This can lead to more efficient code execution.\\n\\n4. What are some of the features of Haskell?\\n\\nSome of the features of Haskell include:\\n\\n Haskell is a pure functional programming language, which means that all code is written in a purely functional style. This makes Haskell code more reliable and easier to reason about. \\n\\n Haskell has a strong type system, which means that code is less likely to contain errors. \\n\\n Haskell is a lazy language, which means that code is not executed until it is needed. This can lead to more efficient code execution. \\n\\n Haskell supports a number of advanced features such as advanced type system features, functional patterns, and monadic programming.\\n\\n5. What are some of the drawbacks of Haskell?\\n\\nSome of the drawbacks of Haskell include\\n\\n Haskell can be difficult to learn for programmers who are new to functional programming\\n\\n Haskell can be difficult to read for programmers who are not familiar with the syntax\\n\\n Haskell code can be difficult to debug\\n\\n6. How is Haskell used in the real world?\\n\\nHaskell is used in a number of ways in the real world. For example, it is used by companies such as Facebook, Google, and Microsoft for a variety of tasks including data analysis, web development, and software engineering. Additionally, Haskell is used in a number of research projects in academia.\\n\\n7. What are some of the projects that use Haskell?\\n\\nSome of the projects that use Haskell include the Haskell Platform, a set of core libraries and tools that are widely used in the Haskell community; the Glasgow Haskell Compiler, the most widely used Haskell compiler; and the Cabal package manager, a tool for managing Haskell software packages.\\n\\n8. What are some of the companies that use Haskell?\\n\\n", "temperature": 1, "max_tokens": 128, "top_p": 1, "frequency_penalty": 0, "presence_penalty": 0, "n": 1, "stop": ["9.", "8."], "echo": false}' message='Post details'
[2022-11-18 00:32:37,191] DEBUG - https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 347
[2022-11-18 00:32:37,191] INFO - message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1291 request_id=c0365a7963e7a56595f42297e2ef3de4 response_code=200
[2022-11-18 00:32:37,192] INFO - message='Request to OpenAI API' method=post path=https://api.openai.com/v1/edits
[2022-11-18 00:32:37,192] DEBUG - api_version=None data='{"model": "text-davinci-edit-001", "input": "Some of the companies that use Haskell include Facebook, Google, and Microsoft.", "instruction": "Replace all non-characters with their spoken counterpart. And fix grammar.", "temperature": 0, "top_p": 1}' message='Post details'
[2022-11-18 00:32:38,843] DEBUG - https://api.openai.com:443 "POST /v1/edits HTTP/1.1" 200 225
[2022-11-18 00:32:38,844] INFO - message='OpenAI API response' path=https://api.openai.com/v1/edits processing_ms=1513 request_id=96124b97224fe32aa1313820fd83d4ed response_code=200
[2022-11-18 00:32:38,844] INFO - message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
[2022-11-18 00:32:38,844] DEBUG - api_version=None data='{"model": "text-davinci-002", "prompt": "Expand greatly upon the topic of Haskell: A Functional Language for the Future in the context of computer science summarised for a 9th grader:\\n\\n1. What is a functional programming language?\\n\\nFunctional programming languages are those which allow functions to be treated as firstclass citizens. That is, they can be passed as arguments to other functions, returned from functions, and assigned to variables.\\n\\n2. What are the benefits of functional programming?\\n\\nThere are a number of benefits to using a functional programming language. These include improved code readability and maintainability, as functional programming languages tend to use simpler syntax; better support for parallelism and concurrency, as functional programming languages are often easier to reason about; and improved performance, as functional programming languages often make it easier to optimize code.\\n\\nThere are a number of benefits to using a functional programming language. These include improved code readability and maintainability, as functional programming languages tend to use simpler syntax; better support for parallelism and concurrency, as functional programming languages are often easier to reason about; and improved performance, as functional programming languages often make it easier to optimize code.\\n\\n3. What makes Haskell unique among functional programming languages?\\n\\nHaskell is a unique functional programming language in a number of ways. Firstly, it is a pure functional programming language, which means that all code is written in a purely functional style. This makes Haskell code more reliable and easier to reason about. Secondly, Haskell has a strong type system, which means that code is less likely to contain errors. Finally, Haskell is a lazy language, which means that code is not executed until it is needed. This can lead to more efficient code execution.\\n\\n4. What are some of the features of Haskell?\\n\\nSome of the features of Haskell include:\\n\\n Haskell is a pure functional programming language, which means that all code is written in a purely functional style. This makes Haskell code more reliable and easier to reason about. \\n\\n Haskell has a strong type system, which means that code is less likely to contain errors. \\n\\n Haskell is a lazy language, which means that code is not executed until it is needed. This can lead to more efficient code execution. \\n\\n Haskell supports a number of advanced features such as advanced type system features, functional patterns, and monadic programming.\\n\\n5. What are some of the drawbacks of Haskell?\\n\\nSome of the drawbacks of Haskell include\\n\\n Haskell can be difficult to learn for programmers who are new to functional programming\\n\\n Haskell can be difficult to read for programmers who are not familiar with the syntax\\n\\n Haskell code can be difficult to debug\\n\\n6. How is Haskell used in the real world?\\n\\nHaskell is used in a number of ways in the real world. For example, it is used by companies such as Facebook, Google, and Microsoft for a variety of tasks including data analysis, web development, and software engineering. Additionally, Haskell is used in a number of research projects in academia.\\n\\n7. What are some of the projects that use Haskell?\\n\\nSome of the projects that use Haskell include the Haskell Platform, a set of core libraries and tools that are widely used in the Haskell community; the Glasgow Haskell Compiler, the most widely used Haskell compiler; and the Cabal package manager, a tool for managing Haskell software packages.\\n\\n8. What are some of the companies that use Haskell?\\n\\nSome of the companies that use Haskell include Facebook, Google, and Microsoft.\\n\\n9. What are some of the challenges of learning Haskell?\\n\\n", "temperature": 1, "max_tokens": 128, "top_p": 1, "frequency_penalty": 0, "presence_penalty": 0, "n": 1, "stop": ["10.", "9."], "echo": false}' message='Post details'
[2022-11-18 00:32:41,001] DEBUG - https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 523
[2022-11-18 00:32:41,002] INFO - message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=2014 request_id=1c0c4c4c594ffa5ae8970034a18ed505 response_code=200
[2022-11-18 00:32:41,002] INFO - message='Request to OpenAI API' method=post path=https://api.openai.com/v1/edits
[2022-11-18 00:32:41,002] DEBUG - api_version=None data='{"model": "text-davinci-edit-001", "input": "Some of the challenges of learning Haskell include its steep learning curve and the fact that its syntax can be difficult to understand for programmers who are not familiar with functional programming. Additionally, Haskell code can be difficult to debug.", "instruction": "Replace all non-characters with their spoken counterpart. And fix grammar.", "temperature": 0, "top_p": 1}' message='Post details'
[2022-11-18 00:32:44,047] DEBUG - https://api.openai.com:443 "POST /v1/edits HTTP/1.1" 200 402
[2022-11-18 00:32:44,047] INFO - message='OpenAI API response' path=https://api.openai.com/v1/edits processing_ms=2906 request_id=c7af4f74126b2c708e93269b823efde0 response_code=200
[2022-11-18 00:32:44,048] DEBUG - Starting new HTTPS connection (1): www.googleapis.com:443
[2022-11-18 00:32:44,192] DEBUG - https://www.googleapis.com:443 "GET /youtube/v3/playlists?part=id&id=UC_x5XG1OV2P6uZZ5FSM9Ttw&key=AIzaSyDfv2ISoNjVh2oX2JRJUQ1loS-voHH3GlI&maxResults=2 HTTP/1.1" 200 None
[2022-11-18 00:32:44,196] DEBUG - Starting new HTTPS connection (1): www.googleapis.com:443
[2022-11-18 00:32:44,679] DEBUG - https://www.googleapis.com:443 "GET /youtube/v3/search?part=snippet&type=video&maxResults=50&order=relevance&key=AIzaSyDfv2ISoNjVh2oX2JRJUQ1loS-voHH3GlI&q=Haskell:%20A%20Functional%20Language%20for%20the%20Future&publishedAfter=2000-01-01T00:00:00Z&publishedBefore=3000-01-01T00:00:00Z HTTP/1.1" 200 None
[2022-11-18 00:32:44,686] DEBUG - Starting new HTTPS connection (1): www.googleapis.com:443
[2022-11-18 00:32:44,751] DEBUG - https://www.googleapis.com:443 "GET /youtube/v3/videos?key=AIzaSyDfv2ISoNjVh2oX2JRJUQ1loS-voHH3GlI&fields=items(snippet(description,tags))&part=snippet&id=SPwnfSmyAGI HTTP/1.1" 200 None
[2022-11-18 00:32:44,755] DEBUG - Starting new HTTPS connection (1): www.googleapis.com:443
[2022-11-18 00:32:44,816] DEBUG - https://www.googleapis.com:443 "GET /youtube/v3/videos?key=AIzaSyDfv2ISoNjVh2oX2JRJUQ1loS-voHH3GlI&fields=items(snippet(description,tags))&part=snippet&id=iSmkqocn0oQ HTTP/1.1" 200 None
[2022-11-18 00:32:44,818] DEBUG - Starting new HTTPS connection (1): www.googleapis.com:443
[2022-11-18 00:32:44,877] DEBUG - https://www.googleapis.com:443 "GET /youtube/v3/videos?key=AIzaSyDfv2ISoNjVh2oX2JRJUQ1loS-voHH3GlI&fields=items(snippet(description,tags))&part=snippet&id=5SD2j9k6E7c HTTP/1.1" 200 None
[2022-11-18 00:32:44,880] DEBUG - Starting new HTTPS connection (1): www.googleapis.com:443
[2022-11-18 00:32:44,948] DEBUG - https://www.googleapis.com:443 "GET /youtube/v3/videos?key=AIzaSyDfv2ISoNjVh2oX2JRJUQ1loS-voHH3GlI&fields=items(snippet(description,tags))&part=snippet&id=7ybv9lg77q8 HTTP/1.1" 200 None
[2022-11-18 00:32:44,950] DEBUG - Starting new HTTPS connection (1): www.googleapis.com:443
[2022-11-18 00:32:45,001] DEBUG - https://www.googleapis.com:443 "GET /youtube/v3/videos?key=AIzaSyDfv2ISoNjVh2oX2JRJUQ1loS-voHH3GlI&fields=items(snippet(description,tags))&part=snippet&id=WZ_0FSGeq2s HTTP/1.1" 200 None
[2022-11-18 00:32:45,004] DEBUG - Starting new HTTPS connection (1): www.googleapis.com:443
[2022-11-18 00:32:45,060] DEBUG - https://www.googleapis.com:443 "GET /youtube/v3/videos?key=AIzaSyDfv2ISoNjVh2oX2JRJUQ1loS-voHH3GlI&fields=items(snippet(description,tags))&part=snippet&id=4RuLzL_q0zs HTTP/1.1" 200 None
[2022-11-18 00:32:45,065] DEBUG - Starting new HTTPS connection (1): www.googleapis.com:443
[2022-11-18 00:32:45,144] DEBUG - https://www.googleapis.com:443 "GET /youtube/v3/videos?key=AIzaSyDfv2ISoNjVh2oX2JRJUQ1loS-voHH3GlI&fields=items(snippet(description,tags))&part=snippet&id=52aQzcKO5Pk HTTP/1.1" 200 None
[2022-11-18 00:32:45,147] DEBUG - Starting new HTTPS connection (1): www.googleapis.com:443
[2022-11-18 00:32:45,197] DEBUG - https://www.googleapis.com:443 "GET /youtube/v3/videos?key=AIzaSyDfv2ISoNjVh2oX2JRJUQ1loS-voHH3GlI&fields=items(snippet(description,tags))&part=snippet&id=uR_VzYxvbxg HTTP/1.1" 200 None
[2022-11-18 00:32:45,199] DEBUG - Starting new HTTPS connection (1): www.googleapis.com:443
[2022-11-18 00:32:45,247] DEBUG - https://www.googleapis.com:443 "GET /youtube/v3/videos?key=AIzaSyDfv2ISoNjVh2oX2JRJUQ1loS-voHH3GlI&fields=items(snippet(description,tags))&part=snippet&id=B9_xAixGlmk HTTP/1.1" 200 None
[2022-11-18 00:32:45,249] DEBUG - Starting new HTTPS connection (1): www.googleapis.com:443
[2022-11-18 00:32:45,303] DEBUG - https://www.googleapis.com:443 "GET /youtube/v3/videos?key=AIzaSyDfv2ISoNjVh2oX2JRJUQ1loS-voHH3GlI&fields=items(snippet(description,tags))&part=snippet&id=SqWDAo1Jnyc HTTP/1.1" 200 None
[2022-11-18 00:32:45,305] DEBUG - Starting new HTTPS connection (1): www.googleapis.com:443
[2022-11-18 00:32:45,370] DEBUG - https://www.googleapis.com:443 "GET /youtube/v3/videos?key=AIzaSyDfv2ISoNjVh2oX2JRJUQ1loS-voHH3GlI&fields=items(snippet(description,tags))&part=snippet&id=O2Kem_U8tSo HTTP/1.1" 200 None
[2022-11-18 00:32:45,372] DEBUG - Starting new HTTPS connection (1): www.googleapis.com:443
[2022-11-18 00:32:45,430] DEBUG - https://www.googleapis.com:443 "GET /youtube/v3/videos?key=AIzaSyDfv2ISoNjVh2oX2JRJUQ1loS-voHH3GlI&fields=items(snippet(description,tags))&part=snippet&id=KgzP4MeZgw8 HTTP/1.1" 200 None
[2022-11-18 00:32:45,434] DEBUG - Starting new HTTPS connection (1): www.googleapis.com:443
[2022-11-18 00:32:45,501] DEBUG - https://www.googleapis.com:443 "GET /youtube/v3/videos?key=AIzaSyDfv2ISoNjVh2oX2JRJUQ1loS-voHH3GlI&fields=items(snippet(description,tags))&part=snippet&id=kZ1P8cHN3pY HTTP/1.1" 200 None
[2022-11-18 00:32:45,503] DEBUG - Starting new HTTPS connection (1): www.googleapis.com:443
[2022-11-18 00:32:45,566] DEBUG - https://www.googleapis.com:443 "GET /youtube/v3/videos?key=AIzaSyDfv2ISoNjVh2oX2JRJUQ1loS-voHH3GlI&fields=items(snippet(description,tags))&part=snippet&id=gxFvRw4OwCA HTTP/1.1" 200 None
[2022-11-18 00:32:45,568] DEBUG - Starting new HTTPS connection (1): www.googleapis.com:443
[2022-11-18 00:32:45,611] DEBUG - https://www.googleapis.com:443 "GET /youtube/v3/videos?key=AIzaSyDfv2ISoNjVh2oX2JRJUQ1loS-voHH3GlI&fields=items(snippet(description,tags))&part=snippet&id=RqvCNb7fKsg HTTP/1.1" 200 None
[2022-11-18 00:32:45,612] DEBUG - Starting new HTTPS connection (1): www.googleapis.com:443
[2022-11-18 00:32:45,668] DEBUG - https://www.googleapis.com:443 "GET /youtube/v3/videos?key=AIzaSyDfv2ISoNjVh2oX2JRJUQ1loS-voHH3GlI&fields=items(snippet(description,tags))&part=snippet&id=ZPyVcnCabIU HTTP/1.1" 200 None
[2022-11-18 00:32:45,671] DEBUG - Starting new HTTPS connection (1): www.googleapis.com:443
[2022-11-18 00:32:45,731] DEBUG - https://www.googleapis.com:443 "GET /youtube/v3/videos?key=AIzaSyDfv2ISoNjVh2oX2JRJUQ1loS-voHH3GlI&fields=items(snippet(description,tags))&part=snippet&id=UogkQ67d0nY HTTP/1.1" 200 None
[2022-11-18 00:32:45,734] DEBUG - Starting new HTTPS connection (1): www.googleapis.com:443
[2022-11-18 00:32:45,797] DEBUG - https://www.googleapis.com:443 "GET /youtube/v3/videos?key=AIzaSyDfv2ISoNjVh2oX2JRJUQ1loS-voHH3GlI&fields=items(snippet(description,tags))&part=snippet&id=F4QCEShyWnY HTTP/1.1" 200 None
[2022-11-18 00:32:45,799] DEBUG - Starting new HTTPS connection (1): www.googleapis.com:443
[2022-11-18 00:32:45,864] DEBUG - https://www.googleapis.com:443 "GET /youtube/v3/videos?key=AIzaSyDfv2ISoNjVh2oX2JRJUQ1loS-voHH3GlI&fields=items(snippet(description,tags))&part=snippet&id=fyL2ftMUpeA HTTP/1.1" 200 None
[2022-11-18 00:32:45,866] DEBUG - Starting new HTTPS connection (1): www.googleapis.com:443
[2022-11-18 00:32:45,922] DEBUG - https://www.googleapis.com:443 "GET /youtube/v3/videos?key=AIzaSyDfv2ISoNjVh2oX2JRJUQ1loS-voHH3GlI&fields=items(snippet(description,tags))&part=snippet&id=TkBOozeNtiM HTTP/1.1" 200 None
[2022-11-18 00:32:45,924] DEBUG - Starting new HTTPS connection (1): www.googleapis.com:443
[2022-11-18 00:32:45,975] DEBUG - https://www.googleapis.com:443 "GET /youtube/v3/videos?key=AIzaSyDfv2ISoNjVh2oX2JRJUQ1loS-voHH3GlI&fields=items(snippet(description,tags))&part=snippet&id=4p6gNRgI_cc HTTP/1.1" 200 None
[2022-11-18 00:32:45,977] DEBUG - Starting new HTTPS connection (1): www.googleapis.com:443
[2022-11-18 00:32:46,042] DEBUG - https://www.googleapis.com:443 "GET /youtube/v3/videos?key=AIzaSyDfv2ISoNjVh2oX2JRJUQ1loS-voHH3GlI&fields=items(snippet(description,tags))&part=snippet&id=dAPL7MQGjyM HTTP/1.1" 200 None
[2022-11-18 00:32:46,044] DEBUG - Starting new HTTPS connection (1): www.googleapis.com:443
[2022-11-18 00:32:46,105] DEBUG - https://www.googleapis.com:443 "GET /youtube/v3/videos?key=AIzaSyDfv2ISoNjVh2oX2JRJUQ1loS-voHH3GlI&fields=items(snippet(description,tags))&part=snippet&id=wpV8WbpuAKY HTTP/1.1" 200 None
[2022-11-18 00:32:46,108] DEBUG - Starting new HTTPS connection (1): www.googleapis.com:443
[2022-11-18 00:32:46,161] DEBUG - https://www.googleapis.com:443 "GET /youtube/v3/videos?key=AIzaSyDfv2ISoNjVh2oX2JRJUQ1loS-voHH3GlI&fields=items(snippet(description,tags))&part=snippet&id=Qu6RIO02m1U HTTP/1.1" 200 None
[2022-11-18 00:32:46,164] DEBUG - Starting new HTTPS connection (1): www.googleapis.com:443
[2022-11-18 00:32:46,216] DEBUG - https://www.googleapis.com:443 "GET /youtube/v3/videos?key=AIzaSyDfv2ISoNjVh2oX2JRJUQ1loS-voHH3GlI&fields=items(snippet(description,tags))&part=snippet&id=2nLVRcDWKJw HTTP/1.1" 200 None
[2022-11-18 00:32:46,218] DEBUG - Hashtags ['#cardano', '#crypto', '#bitcoin', '#ethereum', '#blockchain', '#iohk']
[2022-11-18 00:32:46,218] DEBUG - Top Hashtags ['#cardano', '#crypto', '#bitcoin', '#ethereum', '#blockchain']
[2022-11-18 00:32:46,218] DEBUG - Tags ['haskell', 'useless', 'c#', 'linq', 'simon peyton jones', 'cardano', 'crypto', 'currency', 'cryptocurrency', 'blockchain', 'bitcoin', 'ethereum', 'ripple', 'xrp', 'btc', 'iohk', 'emurgo', 'money', 'gold', 'silver', 'john mcafee', 'craig wright', 'satoshi nakomoto', 'eos', 'crypto daily', 'datadash', 'jamie dimon', 'forex', 'stocks', 'futures', 'digital', 'asset', 'haskell', 'java', 'solidity', 'plutus', 'marlowe', 'shelley', 'stellar', 'ada', 'news', 'profit', 'business', 'markets', 'binance', 'university', 'investing', 'investment', 'trading', 'wealth', 'charles hoskinson', 'it', 'haskell', 'education', 'interview', 'software', 'functional programming', 'haskell tooling', 'ide', 'haddock', 'hie', 'haskell', 'symon peyton jones', 'erlang', 'haskell', 'functional programming', 'euc2016', 'erlang user conference', 'euc', '2016', 'microsoft research', 'podcast', 'functional programming', 'clojure', 'programming', 'programming', 'coding', 'development', 'learn', 'tutorial', 'examples', '#hangoutsonair', 'hangouts on air', '#hoa', 'haskell', 'logic', 'types', 'recursion', 'category', 'theory', 'math', 'curry', 'currying', 'function', 'functional', 'immutable', 'fp', 'functional programming', 'jane street', 'lambda days', 'functional programming (programming language paradigm)', 'adam szlachta', 'haskell (programming language)', 'haskell computer programming language science coding compiler interpreter high low level expressive', 'haskell', 'types', 'generative programs', 'smt', 'program synthesis', 'type systems', 'functional programming', 'array programming', 'scala', 'haskell', 'apl', 'bqn', 'clojure', 'ocaml', 'combinators', 'combinatory logic', 'trains', 'tacit programming', 'point free', 'point free programming', 'haskell', 'functional programming', 'ndc', 'ndc sydney', '2018', 'daniel chambers', 'functional programming', 'haskel', 'f#', 'javascript', 'programming', 'coding', 'javascript', 'computer science', 'software engineering', 'software', 'functional programming', 'programming', 'learncodeonline', 'functional programming', 'what is functional programming', 'haskell', 'tests', 'functional conf', 'functional programming', 'evie ciobanu', 'haskell', 'hackage', 'cabal', 'ghc']
[2022-11-18 00:32:46,218] DEBUG - Top Tags ['haskell', 'functional programming', 'programming', 'software', 'clojure', 'coding', 'types', 'javascript', 'useless', 'c#', 'linq', 'simon peyton jones', 'cardano', 'crypto', 'currency', 'cryptocurrency', 'blockchain', 'bitcoin', 'ethereum', 'ripple', 'xrp', 'btc', 'iohk', 'emurgo', 'money', 'gold']
[2022-11-18 00:32:57,912] DEBUG - processing 35 tts sections
[2022-11-18 00:32:57,912] DEBUG - Text-to-speech: What is a functional programming language?
[2022-11-18 00:32:57,912] DEBUG - [#1] Subsection: What is a functional programming language?
[2022-11-18 00:33:21,515] DEBUG - Text-to-speech: Functional programming languages are those which allow functions to be treated as firstclass citizens. That is, they can be passed as arguments to other functions, returned from functions, and assigned to variables.
[2022-11-18 00:33:21,515] DEBUG - [#1] Subsection: Functional programming languages are those which allow functions to be treated as firstclass citizens. That is, they can be passed as arguments to other functions, returned from functions, and assigned to variables.
[2022-11-18 00:33:53,206] DEBUG - [#2] Subsection: Functional programming languages are those which allow functions to be treated as firstclass citizens. That is, they can be passed as arguments to other functions, returned from functions, and assigned to variables.
[2022-11-18 00:34:26,926] DEBUG - Text-to-speech: What are the benefits of functional programming?
[2022-11-18 00:34:26,926] DEBUG - [#1] Subsection: What are the benefits of functional programming?
[2022-11-18 00:34:45,836] DEBUG - Text-to-speech: There are a number of benefits to using a functional programming language. These include improved code readability and maintainability, as functional programming languages tend to use simpler syntax; better support for parallelism and concurrency, as functional programming languages are often easier to reason about; and improved performance, as functional programming languages often make it easier to optimize code.

There are a number of benefits to using a functional programming language. These include improved code readability and maintainability, as functional programming languages tend to use simpler syntax; better support for parallelism and concurrency, as functional programming languages are often easier to reason about; and improved performance, as functional programming languages often make it easier to optimize code.
[2022-11-18 00:34:45,836] DEBUG - [#1] Subsection: There are a number of benefits to using a functional programming language. These include improved code readability and maintainability, as functional programming languages tend to use simpler syntax; better support for parallelism and concurrency, as functional programming languages are often easier to reason about; and improved performance, as functional programming languages often make it easier to optimize code.

There are a number of benefits to using a functional programming language. These include improved code readability and maintainability, as functional programming languages tend to use simpler syntax; better support for parallelism and concurrency, as functional programming languages are often easier to reason about; and improved performance, as functional programming languages often make it easier to optimize code.
