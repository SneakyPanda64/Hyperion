[2022-11-26 18:50:46,096] CRITICAL - GPU detected
[2022-11-26 18:50:46,097] INFO - Getting video script.
[2022-11-26 18:50:46,107] INFO - message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
[2022-11-26 18:50:46,107] DEBUG - api_version=None data='{"model": "text-davinci-002", "prompt": "Write a list of unique and interesting keywords relating to basic theory of computer science programming concepts:\\n\\n-", "temperature": 1, "max_tokens": 128, "top_p": 1, "frequency_penalty": 0, "presence_penalty": 0, "n": 1, "stop": "", "echo": false}' message='Post details'
[2022-11-26 18:50:46,107] DEBUG - Converted retries value: 2 -> Retry(total=2, connect=None, read=None, redirect=None, status=None)
[2022-11-26 18:50:46,109] DEBUG - Starting new HTTPS connection (1): api.openai.com:443
[2022-11-26 18:50:49,796] DEBUG - https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 476
[2022-11-26 18:50:49,796] INFO - message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=3238 request_id=0c0a1aa62e3cbedcf08983dbe8ebdb49 response_code=200
[2022-11-26 18:50:49,799] INFO - message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
[2022-11-26 18:50:49,799] DEBUG - api_version=None data='{"model": "text-curie-001", "prompt": "Write a list of 5 interesting beginner topics on where Basic Syntax is used in the context of theory of computer science programming concepts:\\n-", "temperature": 0.7, "max_tokens": 256, "top_p": 1, "frequency_penalty": 0, "presence_penalty": 0, "n": 1, "stop": "", "echo": false}' message='Post details'
[2022-11-26 18:50:50,693] DEBUG - https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 491
[2022-11-26 18:50:50,693] INFO - message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=742 request_id=3023a0211296a856a12c36fb731ba289 response_code=200
[2022-11-26 18:50:50,693] INFO - message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
[2022-11-26 18:50:50,693] DEBUG - api_version=None data='{"model": "text-davinci-002", "prompt": "Write a short, unique and interesting title relating to the theory of The Order of Evaluation in Basic Syntax in the form of a video essay title without involving numbers:", "temperature": 1, "max_tokens": 20, "top_p": 1, "frequency_penalty": 0, "presence_penalty": 0, "n": 1, "stop": "", "echo": false}' message='Post details'
[2022-11-26 18:50:51,639] DEBUG - https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 311
[2022-11-26 18:50:51,639] INFO - message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=802 request_id=550a732d91a0ef4aa929a90c5756eb4f response_code=200
[2022-11-26 18:50:51,669] DEBUG - Keyword Basic Syntax, Topics ['Logic and Connectives in Basic Syntax', 'The Order of Evaluation in Basic Syntax', 'The Relationship between Basic Syntax and Abstract Syntax', 'The Concept of a Data Type in Basic Syntax', 'The Concept of an Expression in Basic Syntax'], Topic The Great Debate: Strict vs. Loose Evaluation
[2022-11-26 18:50:51,670] INFO - topic The Great Debate: Strict vs. Loose Evaluation
[2022-11-26 18:50:51,670] INFO - message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
[2022-11-26 18:50:51,670] DEBUG - api_version=None data='{"model": "text-davinci-002", "prompt": "Write a list of beginner topics relating to what is The Great Debate: Strict vs. Loose Evaluation in the context of theory of computer science programming concepts:\\n\\n-", "temperature": 0, "max_tokens": 256, "top_p": 1, "frequency_penalty": 0, "presence_penalty": 0, "n": 1, "stop": "", "echo": false}' message='Post details'
[2022-11-26 18:50:54,495] DEBUG - https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 539
[2022-11-26 18:50:54,495] INFO - message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=2682 request_id=c7630cfb35abb30d88d2f76a80e7151a response_code=200
[2022-11-26 18:50:54,495] DEBUG - topic: The Great Debate: Strict vs. Loose Evaluation, sub topics What is the difference between strict and loose evaluation?
-What are the benefits of each approach?
-What are some common criticisms of each approach?
-What are some real-world examples of where each approach might be used?
-What are the trade-offs of using each approach?
[2022-11-26 18:50:54,496] INFO - subtopics ['What is the difference between strict and loose evaluation?', 'What are the benefits of each approach?', 'What are some common criticisms of each approach?', 'What are some real', 'world examples of where each approach might be used?', 'What are the trade', 'offs of using each approach?']
[2022-11-26 18:50:54,496] DEBUG - getting summary for topic
[2022-11-26 18:50:54,496] INFO - message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
[2022-11-26 18:50:54,496] DEBUG - api_version=None data='{"model": "text-curie-001", "prompt": "Write a summary for the following topic in the form of a youtube description in the context of theory of computer science programming concepts:\\n\\ntopic: The Great Debate: Strict vs. Loose Evaluation\\n\\nsummary:", "temperature": 0, "max_tokens": 256, "top_p": 1, "frequency_penalty": 0, "presence_penalty": 0, "n": 1, "stop": "", "echo": false}' message='Post details'
[2022-11-26 18:50:55,203] DEBUG - https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 429
[2022-11-26 18:50:55,204] INFO - message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=525 request_id=52d5b6bdafa89ce03baf6815a9c30d48 response_code=200
[2022-11-26 18:50:55,204] INFO - summary In this video, we explore the two main evaluation styles in programming: strict and loose. We look at the pros and cons of each, and discuss when to use which style.
[2022-11-26 18:50:55,204] INFO - message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
[2022-11-26 18:50:55,204] DEBUG - api_version=None data='{"model": "text-curie-001", "prompt": "Expand greatly upon the topic of The Great Debate Strict vs. Loose Evaluation in the context of theory of computer science programming concepts summarised for a 9th grader:\\n\\n1. What is the difference between strict and loose evaluation?\\n\\n", "temperature": 1, "max_tokens": 128, "top_p": 1, "frequency_penalty": 0, "presence_penalty": 0, "n": 1, "stop": ["\\n2.", "\\n\\n2.", "\\n\\n\\n2."], "echo": false}' message='Post details'
[2022-11-26 18:50:55,923] DEBUG - https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 501
[2022-11-26 18:50:55,924] INFO - message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=569 request_id=8ec89e9ff16411aa3adc8f2502d98f04 response_code=200
[2022-11-26 18:50:55,924] DEBUG - passage length 237
[2022-11-26 18:50:55,924] INFO - message='Request to OpenAI API' method=post path=https://api.openai.com/v1/edits
[2022-11-26 18:50:55,924] DEBUG - api_version=None data='{"model": "text-davinci-edit-001", "input": "Strict evaluation means that a computer system will only count the number of times a certain comparison is made. Loose evaluation means that a computer system will count any number of comparisons as long as they meet a certain condition.", "instruction": "Replace all non-characters with their spoken counterpart. And fix grammar.", "temperature": 0.7, "top_p": 1}' message='Post details'
[2022-11-26 18:50:58,148] DEBUG - https://api.openai.com:443 "POST /v1/edits HTTP/1.1" 200 382
[2022-11-26 18:50:58,148] INFO - message='OpenAI API response' path=https://api.openai.com/v1/edits processing_ms=2073 request_id=5ccd358d913810b2393882ddc0200491 response_code=200
[2022-11-26 18:50:58,148] INFO - message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
[2022-11-26 18:50:58,149] DEBUG - api_version=None data='{"model": "text-curie-001", "prompt": "Expand greatly upon the topic of The Great Debate Strict vs. Loose Evaluation in the context of theory of computer science programming concepts summarised for a 9th grader:\\n\\n1. What is the difference between strict and loose evaluation?\\n\\nStrict evaluation means that a computer system will only count the number of times a certain comparison is made. Loose evaluation means that a computer system will count any number of comparisons as long as they meet certain conditions.\\n\\n2. What are the benefits of each approach?\\n\\n", "temperature": 1, "max_tokens": 128, "top_p": 1, "frequency_penalty": 0, "presence_penalty": 0, "n": 1, "stop": ["\\n3.", "\\n\\n3.", "\\n\\n\\n3."], "echo": false}' message='Post details'
[2022-11-26 18:50:58,742] DEBUG - https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 465
[2022-11-26 18:50:58,742] INFO - message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=443 request_id=7f571757031cfcc2f0054cd5fa3dec5b response_code=200
[2022-11-26 18:50:58,742] DEBUG - passage length 199
[2022-11-26 18:50:58,742] INFO - message='Request to OpenAI API' method=post path=https://api.openai.com/v1/edits
[2022-11-26 18:50:58,742] DEBUG - api_version=None data='{"model": "text-davinci-edit-001", "input": "Strict evaluation is more efficient because it allows a computer system to make more efficient decisions. Loose evaluation is more flexible because it allows a computer system to make more decisions.", "instruction": "Replace all non-characters with their spoken counterpart. And fix grammar.", "temperature": 0.7, "top_p": 1}' message='Post details'
[2022-11-26 18:51:00,633] DEBUG - https://api.openai.com:443 "POST /v1/edits HTTP/1.1" 200 368
[2022-11-26 18:51:00,633] INFO - message='OpenAI API response' path=https://api.openai.com/v1/edits processing_ms=1743 request_id=c08e8842b3822acf1e640f37488361f4 response_code=200
[2022-11-26 18:51:00,634] INFO - message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
[2022-11-26 18:51:00,634] DEBUG - api_version=None data='{"model": "text-curie-001", "prompt": "Expand greatly upon the topic of The Great Debate Strict vs. Loose Evaluation in the context of theory of computer science programming concepts summarised for a 9th grader:\\n\\n1. What is the difference between strict and loose evaluation?\\n\\nStrict evaluation means that a computer system will only count the number of times a certain comparison is made. Loose evaluation means that a computer system will count any number of comparisons as long as they meet certain conditions.\\n\\n2. What are the benefits of each approach?\\n\\nStrict evaluation is more efficient because it allows a computer system to make more efficient decisions. Loose evaluation is more flexible because it allows a computer system to make more decisions than strict evaluation.\\n\\n3. What are some common criticisms of each approach?\\n\\n", "temperature": 1, "max_tokens": 128, "top_p": 1, "frequency_penalty": 0, "presence_penalty": 0, "n": 1, "stop": ["\\n4.", "\\n\\n4.", "\\n\\n\\n4."], "echo": false}' message='Post details'
[2022-11-26 18:51:01,441] DEBUG - https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 604
[2022-11-26 18:51:01,441] INFO - message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=488 request_id=5b6c139f7bd0cd9c55139a50f924a4a7 response_code=200
[2022-11-26 18:51:01,442] DEBUG - passage length 340
[2022-11-26 18:51:01,442] INFO - message='Request to OpenAI API' method=post path=https://api.openai.com/v1/edits
[2022-11-26 18:51:01,442] DEBUG - api_version=None data='{"model": "text-davinci-edit-001", "input": "Critics of strict evaluation argue that it can be difficult to write correct algorithms in a strict language, and that it can be difficult to control the execution time. Critics of loose evaluation argue that it can be difficult to write correct algorithms in a flexible language, and that it can be difficult to control the execution time.", "instruction": "Replace all non-characters with their spoken counterpart. And fix grammar.", "temperature": 0.7, "top_p": 1}' message='Post details'
[2022-11-26 18:51:06,902] DEBUG - https://api.openai.com:443 "POST /v1/edits HTTP/1.1" 200 486
[2022-11-26 18:51:06,902] INFO - message='OpenAI API response' path=https://api.openai.com/v1/edits processing_ms=5317 request_id=43ac7fa86f968e1e1da5091db87bb156 response_code=200
[2022-11-26 18:51:06,902] INFO - message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
[2022-11-26 18:51:06,902] DEBUG - api_version=None data='{"model": "text-curie-001", "prompt": "Expand greatly upon the topic of The Great Debate Strict vs. Loose Evaluation in the context of theory of computer science programming concepts summarised for a 9th grader:\\n\\n1. What is the difference between strict and loose evaluation?\\n\\nStrict evaluation means that a computer system will only count the number of times a certain comparison is made. Loose evaluation means that a computer system will count any number of comparisons as long as they meet certain conditions.\\n\\n2. What are the benefits of each approach?\\n\\nStrict evaluation is more efficient because it allows a computer system to make more efficient decisions. Loose evaluation is more flexible because it allows a computer system to make more decisions than strict evaluation.\\n\\n3. What are some common criticisms of each approach?\\n\\nCritics of strict evaluation argue that it can be difficult to write correct algorithms in a strict language, and that it can be difficult to control the execution time. Critics of lazy evaluation argue that it can be difficult to write correct algorithms in a flexible language, and that it can be difficult to control the execution time.\\n\\n4. What are some real\\n\\n", "temperature": 1, "max_tokens": 128, "top_p": 1, "frequency_penalty": 0, "presence_penalty": 0, "n": 1, "stop": ["\\n5.", "\\n\\n5.", "\\n\\n\\n5."], "echo": false}' message='Post details'
[2022-11-26 18:51:07,755] DEBUG - https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 670
[2022-11-26 18:51:07,756] INFO - message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=703 request_id=a3b4c27a2b3c281e9351008721ffa96b response_code=200
[2022-11-26 18:51:07,756] DEBUG - passage length 404
[2022-11-26 18:51:07,756] INFO - message='Request to OpenAI API' method=post path=https://api.openai.com/v1/edits
[2022-11-26 18:51:07,756] DEBUG - api_version=None data='{"model": "text-davinci-edit-001", "input": "application domains where the two approaches might be used differently?\\n\\nStrict evaluation might be used in some applications where it is important to be able to make accurate decisions quickly, such as gaming or scientific computing. Loose evaluation might be used in other applications where it is important to be able to make as many decisions as possible, such as social networking or search engines.", "instruction": "Replace all non-characters with their spoken counterpart. And fix grammar.", "temperature": 0.7, "top_p": 1}' message='Post details'
[2022-11-26 18:51:12,601] DEBUG - https://api.openai.com:443 "POST /v1/edits HTTP/1.1" 200 558
[2022-11-26 18:51:12,601] INFO - message='OpenAI API response' path=https://api.openai.com/v1/edits processing_ms=4702 request_id=66ac18a59171a2c9f2e1b2b60559c21f response_code=200
[2022-11-26 18:51:12,601] INFO - message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
[2022-11-26 18:51:12,601] DEBUG - api_version=None data='{"model": "text-curie-001", "prompt": "Expand greatly upon the topic of The Great Debate Strict vs. Loose Evaluation in the context of theory of computer science programming concepts summarised for a 9th grader:\\n\\n1. What is the difference between strict and loose evaluation?\\n\\nStrict evaluation means that a computer system will only count the number of times a certain comparison is made. Loose evaluation means that a computer system will count any number of comparisons as long as they meet certain conditions.\\n\\n2. What are the benefits of each approach?\\n\\nStrict evaluation is more efficient because it allows a computer system to make more efficient decisions. Loose evaluation is more flexible because it allows a computer system to make more decisions than strict evaluation.\\n\\n3. What are some common criticisms of each approach?\\n\\nCritics of strict evaluation argue that it can be difficult to write correct algorithms in a strict language, and that it can be difficult to control the execution time. Critics of lazy evaluation argue that it can be difficult to write correct algorithms in a flexible language, and that it can be difficult to control the execution time.\\n\\n4. What are some real\\n\\napplication domains where the two approaches might be used differently?\\n\\nStrict evaluation might be used in some applications where it is important to be able to make accurate decisions quickly, such as gaming or scientific computing. Loose evaluation might be used in other applications where it is important to be able to make as many decisions as possible, such as social networking or for search engines.\\n\\n5. world examples of where each approach might be used?\\n\\n", "temperature": 1, "max_tokens": 128, "top_p": 1, "frequency_penalty": 0, "presence_penalty": 0, "n": 1, "stop": ["\\n6.", "\\n\\n6.", "\\n\\n\\n6."], "echo": false}' message='Post details'
[2022-11-26 18:51:13,092] DEBUG - https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 443
[2022-11-26 18:51:13,093] INFO - message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=341 request_id=43ee76f9ffbffebebf164697fedb3a65 response_code=200
[2022-11-26 18:51:13,093] DEBUG - passage length 181
[2022-11-26 18:51:13,093] INFO - message='Request to OpenAI API' method=post path=https://api.openai.com/v1/edits
[2022-11-26 18:51:13,093] DEBUG - api_version=None data='{"model": "text-davinci-edit-001", "input": "Strict evaluation can be used in computer science, mathematics, and game programming. Loose evaluation can be used in many different languages, including C++, Ada, Python, and Lisp.", "instruction": "Replace all non-characters with their spoken counterpart. And fix grammar.", "temperature": 0.7, "top_p": 1}' message='Post details'
[2022-11-26 18:51:16,280] DEBUG - https://api.openai.com:443 "POST /v1/edits HTTP/1.1" 200 327
[2022-11-26 18:51:16,281] INFO - message='OpenAI API response' path=https://api.openai.com/v1/edits processing_ms=3042 request_id=3cde3102e47ee44c79d3487a2c308f28 response_code=200
[2022-11-26 18:51:16,281] INFO - message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
[2022-11-26 18:51:16,281] DEBUG - api_version=None data='{"model": "text-curie-001", "prompt": "Expand greatly upon the topic of The Great Debate Strict vs. Loose Evaluation in the context of theory of computer science programming concepts summarised for a 9th grader:\\n\\n1. What is the difference between strict and loose evaluation?\\n\\nStrict evaluation means that a computer system will only count the number of times a certain comparison is made. Loose evaluation means that a computer system will count any number of comparisons as long as they meet certain conditions.\\n\\n2. What are the benefits of each approach?\\n\\nStrict evaluation is more efficient because it allows a computer system to make more efficient decisions. Loose evaluation is more flexible because it allows a computer system to make more decisions than strict evaluation.\\n\\n3. What are some common criticisms of each approach?\\n\\nCritics of strict evaluation argue that it can be difficult to write correct algorithms in a strict language, and that it can be difficult to control the execution time. Critics of lazy evaluation argue that it can be difficult to write correct algorithms in a flexible language, and that it can be difficult to control the execution time.\\n\\n4. What are some real\\n\\napplication domains where the two approaches might be used differently?\\n\\nStrict evaluation might be used in some applications where it is important to be able to make accurate decisions quickly, such as gaming or scientific computing. Loose evaluation might be used in other applications where it is important to be able to make as many decisions as possible, such as social networking or for search engines.\\n\\n5. world examples of where each approach might be used?\\n\\nStrict evaluation can be used in Computer Science, Mathematics, and Game Programming.\\nLazy evaluation can be used in many different languages, including C++, Ada, Python, and Lisp.\\n\\n6. What are the trade\\n\\n", "temperature": 1, "max_tokens": 128, "top_p": 1, "frequency_penalty": 0, "presence_penalty": 0, "n": 1, "stop": ["\\n7.", "\\n\\n7.", "\\n\\n\\n7."], "echo": false}' message='Post details'
[2022-11-26 18:51:16,843] DEBUG - https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 483
[2022-11-26 18:51:16,843] INFO - message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=411 request_id=88468c8933b31e8315d2549f7d09db47 response_code=200
[2022-11-26 18:51:16,843] DEBUG - passage length 219
[2022-11-26 18:51:16,843] INFO - message='Request to OpenAI API' method=post path=https://api.openai.com/v1/edits
[2022-11-26 18:51:16,843] DEBUG - api_version=None data='{"model": "text-davinci-edit-001", "input": "offs between the two approaches?\\n\\nSome advantages of strict evaluation are that it is more efficient and more reliable. Some advantages of loose evaluation are that it is more flexible and can be used in more languages.", "instruction": "Replace all non-characters with their spoken counterpart. And fix grammar.", "temperature": 0.7, "top_p": 1}' message='Post details'
[2022-11-26 18:51:21,478] DEBUG - https://api.openai.com:443 "POST /v1/edits HTTP/1.1" 400 212
[2022-11-26 18:51:21,479] INFO - message='OpenAI API response' path=https://api.openai.com/v1/edits processing_ms=4493 request_id=c45e2fb5e8a2bfe791343fb29f839291 response_code=400
[2022-11-26 18:51:21,479] INFO - error_code=None error_message='Could not edit text. Please sample again or try with a different temperature setting, input, or instruction.' error_param=None error_type=invalid_edit message='OpenAI API error received' stream_error=False
[2022-11-26 18:51:21,479] DEBUG - [Edit/Openai] Rate limited retrying in 7s
[2022-11-26 18:51:28,480] INFO - message='Request to OpenAI API' method=post path=https://api.openai.com/v1/edits
[2022-11-26 18:51:28,480] DEBUG - api_version=None data='{"model": "text-davinci-edit-001", "input": "offs between the two approaches?\\n\\nSome advantages of strict evaluation are that it is more efficient and more reliable. Some advantages of loose evaluation are that it is more flexible and can be used in more languages.", "instruction": "Replace all non-characters with their spoken counterpart. And fix grammar.", "temperature": 0.7, "top_p": 1}' message='Post details'
[2022-11-26 18:51:34,114] DEBUG - https://api.openai.com:443 "POST /v1/edits HTTP/1.1" 400 212
[2022-11-26 18:51:34,114] INFO - message='OpenAI API response' path=https://api.openai.com/v1/edits processing_ms=5486 request_id=588ce6790dc0845ec2f68948690837ab response_code=400
[2022-11-26 18:51:34,114] INFO - error_code=None error_message='Could not edit text. Please sample again or try with a different temperature setting, input, or instruction.' error_param=None error_type=invalid_edit message='OpenAI API error received' stream_error=False
[2022-11-26 18:51:34,115] DEBUG - [Edit/Openai] Rate limited retrying in 7s
[2022-11-26 18:51:41,117] INFO - message='Request to OpenAI API' method=post path=https://api.openai.com/v1/edits
[2022-11-26 18:51:41,117] DEBUG - api_version=None data='{"model": "text-davinci-edit-001", "input": "offs between the two approaches?\\n\\nSome advantages of strict evaluation are that it is more efficient and more reliable. Some advantages of loose evaluation are that it is more flexible and can be used in more languages.", "instruction": "Replace all non-characters with their spoken counterpart. And fix grammar.", "temperature": 0.7, "top_p": 1}' message='Post details'
[2022-11-26 18:51:41,231] DEBUG - https://api.openai.com:443 "POST /v1/edits HTTP/1.1" 429 347
[2022-11-26 18:51:41,231] INFO - message='OpenAI API response' path=https://api.openai.com/v1/edits processing_ms=None request_id=4851a3df3caeba3a3068eae7298d2b5d response_code=429
[2022-11-26 18:51:41,231] INFO - error_code=None error_message='Rate limit reached for default-text-davinci-edit-001 in organization org-xTzTe98H3pdIt4U4fWax4sr2 on requests per min. Limit: 20.000000 / min. Current: 24.000000 / min. Contact support@openai.com if you continue to have issues.' error_param=None error_type=requests message='OpenAI API error received' stream_error=False
[2022-11-26 18:51:41,231] DEBUG - [Edit/Openai] Rate limited retrying in 7s
[2022-11-26 18:51:48,240] INFO - message='Request to OpenAI API' method=post path=https://api.openai.com/v1/edits
[2022-11-26 18:51:48,240] DEBUG - api_version=None data='{"model": "text-davinci-edit-001", "input": "offs between the two approaches?\\n\\nSome advantages of strict evaluation are that it is more efficient and more reliable. Some advantages of loose evaluation are that it is more flexible and can be used in more languages.", "instruction": "Replace all non-characters with their spoken counterpart. And fix grammar.", "temperature": 0.7, "top_p": 1}' message='Post details'
[2022-11-26 18:51:50,924] DEBUG - https://api.openai.com:443 "POST /v1/edits HTTP/1.1" 400 212
[2022-11-26 18:51:50,925] INFO - message='OpenAI API response' path=https://api.openai.com/v1/edits processing_ms=2541 request_id=6515558a1f8335285fada5f3e61a558a response_code=400
[2022-11-26 18:51:50,925] INFO - error_code=None error_message='Could not edit text. Please sample again or try with a different temperature setting, input, or instruction.' error_param=None error_type=invalid_edit message='OpenAI API error received' stream_error=False
[2022-11-26 18:51:50,925] DEBUG - [Edit/Openai] Rate limited retrying in 7s
[2022-11-26 18:51:57,927] INFO - message='Request to OpenAI API' method=post path=https://api.openai.com/v1/edits
[2022-11-26 18:51:57,927] DEBUG - api_version=None data='{"model": "text-davinci-edit-001", "input": "offs between the two approaches?\\n\\nSome advantages of strict evaluation are that it is more efficient and more reliable. Some advantages of loose evaluation are that it is more flexible and can be used in more languages.", "instruction": "Replace all non-characters with their spoken counterpart. And fix grammar.", "temperature": 0.7, "top_p": 1}' message='Post details'
[2022-11-26 18:52:00,032] DEBUG - https://api.openai.com:443 "POST /v1/edits HTTP/1.1" 200 388
[2022-11-26 18:52:00,032] INFO - message='OpenAI API response' path=https://api.openai.com/v1/edits processing_ms=1961 request_id=171cf2ef502f4b1836c8edc6d5166e11 response_code=200
[2022-11-26 18:52:00,033] INFO - message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
[2022-11-26 18:52:00,033] DEBUG - api_version=None data='{"model": "text-curie-001", "prompt": "Expand greatly upon the topic of The Great Debate Strict vs. Loose Evaluation in the context of theory of computer science programming concepts summarised for a 9th grader:\\n\\n1. What is the difference between strict and loose evaluation?\\n\\nStrict evaluation means that a computer system will only count the number of times a certain comparison is made. Loose evaluation means that a computer system will count any number of comparisons as long as they meet certain conditions.\\n\\n2. What are the benefits of each approach?\\n\\nStrict evaluation is more efficient because it allows a computer system to make more efficient decisions. Loose evaluation is more flexible because it allows a computer system to make more decisions than strict evaluation.\\n\\n3. What are some common criticisms of each approach?\\n\\nCritics of strict evaluation argue that it can be difficult to write correct algorithms in a strict language, and that it can be difficult to control the execution time. Critics of lazy evaluation argue that it can be difficult to write correct algorithms in a flexible language, and that it can be difficult to control the execution time.\\n\\n4. What are some real\\n\\napplication domains where the two approaches might be used differently?\\n\\nStrict evaluation might be used in some applications where it is important to be able to make accurate decisions quickly, such as gaming or scientific computing. Loose evaluation might be used in other applications where it is important to be able to make as many decisions as possible, such as social networking or for search engines.\\n\\n5. world examples of where each approach might be used?\\n\\nStrict evaluation can be used in Computer Science, Mathematics, and Game Programming.\\nLazy evaluation can be used in many different languages, including C++, Ada, Python, and Lisp.\\n\\n6. What are the trade\\n\\nWhat are the trade offs between the two approaches?\\n\\nSome advantages of strict evaluation are that it is more efficient and more reliable. Some advantages of loose evaluation are that it is more flexible and can be used in more situations.\\n\\n7. offs of using each approach?\\n\\n", "temperature": 1, "max_tokens": 128, "top_p": 1, "frequency_penalty": 0, "presence_penalty": 0, "n": 1, "stop": ["\\n8.", "\\n\\n8.", "\\n\\n\\n8."], "echo": false}' message='Post details'
[2022-11-26 18:52:00,857] DEBUG - https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 484
[2022-11-26 18:52:00,857] INFO - message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=668 request_id=02318b5ad9fe573f32480ad3cb1bcaae response_code=200
[2022-11-26 18:52:00,858] DEBUG - passage length 221
[2022-11-26 18:52:00,858] INFO - message='Request to OpenAI API' method=post path=https://api.openai.com/v1/edits
[2022-11-26 18:52:00,858] DEBUG - api_version=None data='{"model": "text-davinci-edit-001", "input": "There are tradeoffs between the two approaches. Strict evaluation is more efficient, but it can be harder to write correct algorithms. Loose evaluation is more flexible, but it can be harder to control the execution time.", "instruction": "Replace all non-characters with their spoken counterpart. And fix grammar.", "temperature": 0.7, "top_p": 1}' message='Post details'
[2022-11-26 18:52:04,339] DEBUG - https://api.openai.com:443 "POST /v1/edits HTTP/1.1" 200 367
[2022-11-26 18:52:04,339] INFO - message='OpenAI API response' path=https://api.openai.com/v1/edits processing_ms=3337 request_id=6cb1771aad6c92310d93b3a8fad0b22d response_code=200
[2022-11-26 18:52:04,340] DEBUG - Starting new HTTPS connection (1): www.googleapis.com:443
[2022-11-26 18:52:04,522] DEBUG - https://www.googleapis.com:443 "GET /youtube/v3/playlists?part=id&id=UC_x5XG1OV2P6uZZ5FSM9Ttw&key=AIzaSyDfv2ISoNjVh2oX2JRJUQ1loS-voHH3GlI&maxResults=2 HTTP/1.1" 200 None
[2022-11-26 18:52:04,524] DEBUG - Starting new HTTPS connection (1): www.googleapis.com:443
[2022-11-26 18:52:05,785] DEBUG - https://www.googleapis.com:443 "GET /youtube/v3/search?part=snippet&type=video&maxResults=50&order=relevance&key=AIzaSyDfv2ISoNjVh2oX2JRJUQ1loS-voHH3GlI&q=What%20is%20the%20difference%20between%20strict%20and%20loose%20evaluation?%20in%20theory%20of%20computer%20science%20programming%20concepts&publishedAfter=2000-01-01T00:00:00Z&publishedBefore=3000-01-01T00:00:00Z HTTP/1.1" 200 None
[2022-11-26 18:52:05,790] DEBUG - Starting new HTTPS connection (1): www.googleapis.com:443
[2022-11-26 18:52:05,849] DEBUG - https://www.googleapis.com:443 "GET /youtube/v3/videos?key=AIzaSyDfv2ISoNjVh2oX2JRJUQ1loS-voHH3GlI&fields=items(snippet(description,tags))&part=snippet&id=qTkL1sfhjxs HTTP/1.1" 200 None
[2022-11-26 18:52:05,851] DEBUG - Starting new HTTPS connection (1): www.googleapis.com:443
[2022-11-26 18:52:05,917] DEBUG - https://www.googleapis.com:443 "GET /youtube/v3/videos?key=AIzaSyDfv2ISoNjVh2oX2JRJUQ1loS-voHH3GlI&fields=items(snippet(description,tags))&part=snippet&id=hyD50pT0SRs HTTP/1.1" 200 None
[2022-11-26 18:52:05,919] DEBUG - Starting new HTTPS connection (1): www.googleapis.com:443
[2022-11-26 18:52:05,983] DEBUG - https://www.googleapis.com:443 "GET /youtube/v3/videos?key=AIzaSyDfv2ISoNjVh2oX2JRJUQ1loS-voHH3GlI&fields=items(snippet(description,tags))&part=snippet&id=wTvy26aLXnE HTTP/1.1" 200 None
[2022-11-26 18:52:05,986] DEBUG - Starting new HTTPS connection (1): www.googleapis.com:443
[2022-11-26 18:52:06,035] DEBUG - https://www.googleapis.com:443 "GET /youtube/v3/videos?key=AIzaSyDfv2ISoNjVh2oX2JRJUQ1loS-voHH3GlI&fields=items(snippet(description,tags))&part=snippet&id=dUzzKPvLprQ HTTP/1.1" 200 None
[2022-11-26 18:52:06,038] DEBUG - Starting new HTTPS connection (1): www.googleapis.com:443
[2022-11-26 18:52:06,088] DEBUG - https://www.googleapis.com:443 "GET /youtube/v3/videos?key=AIzaSyDfv2ISoNjVh2oX2JRJUQ1loS-voHH3GlI&fields=items(snippet(description,tags))&part=snippet&id=hy1wjkcIBCU HTTP/1.1" 200 None
[2022-11-26 18:52:06,090] DEBUG - Starting new HTTPS connection (1): www.googleapis.com:443
[2022-11-26 18:52:06,156] DEBUG - https://www.googleapis.com:443 "GET /youtube/v3/videos?key=AIzaSyDfv2ISoNjVh2oX2JRJUQ1loS-voHH3GlI&fields=items(snippet(description,tags))&part=snippet&id=0eyFGMUWdxg HTTP/1.1" 200 None
[2022-11-26 18:52:06,159] DEBUG - Starting new HTTPS connection (1): www.googleapis.com:443
[2022-11-26 18:52:06,221] DEBUG - https://www.googleapis.com:443 "GET /youtube/v3/videos?key=AIzaSyDfv2ISoNjVh2oX2JRJUQ1loS-voHH3GlI&fields=items(snippet(description,tags))&part=snippet&id=A03oI0znAoc HTTP/1.1" 200 None
[2022-11-26 18:52:06,224] DEBUG - Starting new HTTPS connection (1): www.googleapis.com:443
[2022-11-26 18:52:06,279] DEBUG - https://www.googleapis.com:443 "GET /youtube/v3/videos?key=AIzaSyDfv2ISoNjVh2oX2JRJUQ1loS-voHH3GlI&fields=items(snippet(description,tags))&part=snippet&id=CQAvLVD1MAs HTTP/1.1" 200 None
[2022-11-26 18:52:06,281] DEBUG - Starting new HTTPS connection (1): www.googleapis.com:443
[2022-11-26 18:52:06,337] DEBUG - https://www.googleapis.com:443 "GET /youtube/v3/videos?key=AIzaSyDfv2ISoNjVh2oX2JRJUQ1loS-voHH3GlI&fields=items(snippet(description,tags))&part=snippet&id=Xzw_Eh3coWw HTTP/1.1" 200 None
[2022-11-26 18:52:06,339] DEBUG - Starting new HTTPS connection (1): www.googleapis.com:443
[2022-11-26 18:52:06,402] DEBUG - https://www.googleapis.com:443 "GET /youtube/v3/videos?key=AIzaSyDfv2ISoNjVh2oX2JRJUQ1loS-voHH3GlI&fields=items(snippet(description,tags))&part=snippet&id=TB1MrhX9bgw HTTP/1.1" 200 None
[2022-11-26 18:52:06,404] DEBUG - Starting new HTTPS connection (1): www.googleapis.com:443
[2022-11-26 18:52:06,459] DEBUG - https://www.googleapis.com:443 "GET /youtube/v3/videos?key=AIzaSyDfv2ISoNjVh2oX2JRJUQ1loS-voHH3GlI&fields=items(snippet(description,tags))&part=snippet&id=DqfLHGD_Tz4 HTTP/1.1" 200 None
[2022-11-26 18:52:06,461] DEBUG - Starting new HTTPS connection (1): www.googleapis.com:443
[2022-11-26 18:52:06,510] DEBUG - https://www.googleapis.com:443 "GET /youtube/v3/videos?key=AIzaSyDfv2ISoNjVh2oX2JRJUQ1loS-voHH3GlI&fields=items(snippet(description,tags))&part=snippet&id=dltFfkjkMGA HTTP/1.1" 200 None
[2022-11-26 18:52:06,513] DEBUG - Starting new HTTPS connection (1): www.googleapis.com:443
[2022-11-26 18:52:06,570] DEBUG - https://www.googleapis.com:443 "GET /youtube/v3/videos?key=AIzaSyDfv2ISoNjVh2oX2JRJUQ1loS-voHH3GlI&fields=items(snippet(description,tags))&part=snippet&id=eGpwwWXUF84 HTTP/1.1" 200 None
[2022-11-26 18:52:06,573] DEBUG - Starting new HTTPS connection (1): www.googleapis.com:443
[2022-11-26 18:52:06,628] DEBUG - https://www.googleapis.com:443 "GET /youtube/v3/videos?key=AIzaSyDfv2ISoNjVh2oX2JRJUQ1loS-voHH3GlI&fields=items(snippet(description,tags))&part=snippet&id=X2ETbx7-mXk HTTP/1.1" 200 None
[2022-11-26 18:52:06,630] DEBUG - Starting new HTTPS connection (1): www.googleapis.com:443
[2022-11-26 18:52:06,683] DEBUG - https://www.googleapis.com:443 "GET /youtube/v3/videos?key=AIzaSyDfv2ISoNjVh2oX2JRJUQ1loS-voHH3GlI&fields=items(snippet(description,tags))&part=snippet&id=HydHCVMsV5I HTTP/1.1" 200 None
[2022-11-26 18:52:06,685] DEBUG - Starting new HTTPS connection (1): www.googleapis.com:443
[2022-11-26 18:52:06,738] DEBUG - https://www.googleapis.com:443 "GET /youtube/v3/videos?key=AIzaSyDfv2ISoNjVh2oX2JRJUQ1loS-voHH3GlI&fields=items(snippet(description,tags))&part=snippet&id=Vkr2C9Fkba4 HTTP/1.1" 200 None
[2022-11-26 18:52:06,740] DEBUG - Starting new HTTPS connection (1): www.googleapis.com:443
[2022-11-26 18:52:06,792] DEBUG - https://www.googleapis.com:443 "GET /youtube/v3/videos?key=AIzaSyDfv2ISoNjVh2oX2JRJUQ1loS-voHH3GlI&fields=items(snippet(description,tags))&part=snippet&id=wYBJAoCA3zI HTTP/1.1" 200 None
[2022-11-26 18:52:06,794] DEBUG - Starting new HTTPS connection (1): www.googleapis.com:443
[2022-11-26 18:52:06,846] DEBUG - https://www.googleapis.com:443 "GET /youtube/v3/videos?key=AIzaSyDfv2ISoNjVh2oX2JRJUQ1loS-voHH3GlI&fields=items(snippet(description,tags))&part=snippet&id=RpZffiyF6rY HTTP/1.1" 200 None
[2022-11-26 18:52:06,849] DEBUG - Starting new HTTPS connection (1): www.googleapis.com:443
[2022-11-26 18:52:06,894] DEBUG - https://www.googleapis.com:443 "GET /youtube/v3/videos?key=AIzaSyDfv2ISoNjVh2oX2JRJUQ1loS-voHH3GlI&fields=items(snippet(description,tags))&part=snippet&id=wAFGaBgcO0U HTTP/1.1" 200 None
[2022-11-26 18:52:06,896] DEBUG - Starting new HTTPS connection (1): www.googleapis.com:443
[2022-11-26 18:52:06,944] DEBUG - https://www.googleapis.com:443 "GET /youtube/v3/videos?key=AIzaSyDfv2ISoNjVh2oX2JRJUQ1loS-voHH3GlI&fields=items(snippet(description,tags))&part=snippet&id=eG5Pywdcpo0 HTTP/1.1" 200 None
[2022-11-26 18:52:06,946] DEBUG - Starting new HTTPS connection (1): www.googleapis.com:443
[2022-11-26 18:52:07,007] DEBUG - https://www.googleapis.com:443 "GET /youtube/v3/videos?key=AIzaSyDfv2ISoNjVh2oX2JRJUQ1loS-voHH3GlI&fields=items(snippet(description,tags))&part=snippet&id=0XPmP5nTpCM HTTP/1.1" 200 None
[2022-11-26 18:52:07,010] DEBUG - Starting new HTTPS connection (1): www.googleapis.com:443
[2022-11-26 18:52:07,058] DEBUG - https://www.googleapis.com:443 "GET /youtube/v3/videos?key=AIzaSyDfv2ISoNjVh2oX2JRJUQ1loS-voHH3GlI&fields=items(snippet(description,tags))&part=snippet&id=Qne86lxjgtg HTTP/1.1" 200 None
[2022-11-26 18:52:07,060] DEBUG - Starting new HTTPS connection (1): www.googleapis.com:443
[2022-11-26 18:52:07,109] DEBUG - https://www.googleapis.com:443 "GET /youtube/v3/videos?key=AIzaSyDfv2ISoNjVh2oX2JRJUQ1loS-voHH3GlI&fields=items(snippet(description,tags))&part=snippet&id=udCzTFGQdYc HTTP/1.1" 200 None
[2022-11-26 18:52:07,111] DEBUG - Starting new HTTPS connection (1): www.googleapis.com:443
[2022-11-26 18:52:07,186] DEBUG - https://www.googleapis.com:443 "GET /youtube/v3/videos?key=AIzaSyDfv2ISoNjVh2oX2JRJUQ1loS-voHH3GlI&fields=items(snippet(description,tags))&part=snippet&id=JYk6ezYCmoo HTTP/1.1" 200 None
[2022-11-26 18:52:07,189] DEBUG - Starting new HTTPS connection (1): www.googleapis.com:443
[2022-11-26 18:52:07,236] DEBUG - https://www.googleapis.com:443 "GET /youtube/v3/videos?key=AIzaSyDfv2ISoNjVh2oX2JRJUQ1loS-voHH3GlI&fields=items(snippet(description,tags))&part=snippet&id=mMLnxf8DE5I HTTP/1.1" 200 None
[2022-11-26 18:52:07,239] DEBUG - Hashtags ['#franconi']
[2022-11-26 18:52:07,239] DEBUG - Top Hashtags []
[2022-11-26 18:52:07,239] DEBUG - Tags ['twitch', 'games', 'research', 'imt4306', 'programming languages', 'programming', 'functional programming', 'psychology', 'paper 3', '9990 psychology', 'caie psychology', 'ross stephenson', 'a-levels', 'a2', 'functional programming', 'type systems', 'software development', 'lamdas', 'asymptotic notations', 'algorithms', 'computer science', 'gcse', 'ocr', 'aqa', 'edexcel', 'a level', 'as', 'computing', 'tutorial', 'lessons', 'computer science tutor', 'basic', 'explained', 'revision', '2017', '2018', '2019', '17', '18', '9-1', '9 to 1', 'exam', 'paper', 'coursework', 'controlled assessment', 'nea', 'past paper', 'past exam', 'walkthrough', 'talkthrough', 'wjec', 'eduqas', 'cie', 'cambridge', 'ap', 'btec', 'pearson', 'paper 1', 'paper 2', 'sample paper', 'sample', 'specimen', 'worked solutions', 'solutions', 'javascript', 'coding', 'learn javascript', 'learn coding', 'web development', 'nodejs', 'programming', 'learn programming', 'full stack', 'learn to code', 'learn code', 'learn js', 'js', 'intro to js', 'js intro', 'web dev', 'web dev intro', 'full stack intro', 'javascript walkthrough', 'beginner javascript', 'js for beginners', 'javascript booleans', 'js booleans', 'javascript boolean operators', 'js strict equals', 'js equals', 'js greater than', 'js less than', 'js logical operators', 'js and', 'js or', 'javascript tutorial', 'electrical engineering', 'computer', 'computer systems', 'computer systems colloquium', 'computing', 'technology', 'engineering', 'computer science', 'algorithm (mathematical concept)', 'game theory (idea)', 'pearson', 'wjec', 'btec', 'gcse', 'cie', 'aqa', 'computer', 'walkthrough', 'talkthrough', 'igcse', 'science', 'exam', '2015', 'ap', 'international', 'past paper', 'cambridge', 'eduqas', 'past exam', 'june', 'human cognition', 'neural models', 'ai', 'deep learning', 'neurosymbolic systems', 'modeling intelligence', 'paul smolensky', 'sean andrist', 'microsoft research', 'large-scale system', 'data processing', 'data storage', 'storage systems', 'data-processing systems', 'data redundancy', 'computation framework', 'neural network models', 'image classification', 'speech recognition', 'object detection', 'storage devices', 'microsoft research', 'msr', 'rashmi vinayak', 'education', 'educational', 'century', 'century tech', 'assessment', 'future assessment', 'function', 'function design', 'software', 'r studio', 'hadley wickham', 'tidyverse', 'tidy', 'ggplot2', 'dplyr', 'data visualisation', 'data', 'data science', 'package development', 'dsc', 'dsc4', 'conference', 'keynote', 'belgrade', 'data science conference', 'family guy', 'peter griffin', 'deleted scenes', 'seth macfarlane', 'brian griffin', 'stewie griffin', 'lois griffin', 'mila kunis', 'seth greene', 'american dad', 'hilarious', 'funny', 'wtf', 'screen rant', 'screenrant']
[2022-11-26 18:52:07,239] DEBUG - Top Tags ['programming', 'functional programming', 'computer science', 'gcse', 'aqa', 'computing', 'exam', 'past paper', 'past exam', 'walkthrough', 'talkthrough', 'wjec', 'eduqas', 'cie', 'cambridge', 'ap', 'btec', 'pearson', 'computer', 'microsoft research', 'twitch', 'games', 'research', 'imt4306']
