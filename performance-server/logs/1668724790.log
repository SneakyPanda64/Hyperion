[2022-11-17 22:39:50,183] INFO - Getting video script.
[2022-11-17 22:39:50,200] INFO - message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
[2022-11-17 22:39:50,200] DEBUG - api_version=None data='{"model": "text-davinci-002", "prompt": "Write a list of unique and interesting keywords relating to basic computer science:\\n\\n-", "temperature": 1, "max_tokens": 128, "top_p": 1, "frequency_penalty": 0, "presence_penalty": 0, "n": 1, "stop": "", "echo": false}' message='Post details'
[2022-11-17 22:39:50,200] DEBUG - Converted retries value: 2 -> Retry(total=2, connect=None, read=None, redirect=None, status=None)
[2022-11-17 22:39:50,206] DEBUG - Starting new HTTPS connection (1): api.openai.com:443
[2022-11-17 22:39:54,543] DEBUG - https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 526
[2022-11-17 22:39:54,544] INFO - message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=3917 request_id=c4e9b6053ae601bfd3bf3a6db6f36a3d response_code=200
[2022-11-17 22:39:54,548] INFO - message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
[2022-11-17 22:39:54,548] DEBUG - api_version=None data='{"model": "text-curie-001", "prompt": "Write a list of 5 interesting beginner topics on where Data structures is used in the context of computer science:\\n-", "temperature": 0.7, "max_tokens": 256, "top_p": 1, "frequency_penalty": 0, "presence_penalty": 0, "n": 1, "stop": "", "echo": false}' message='Post details'
[2022-11-17 22:39:54,915] DEBUG - https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 358
[2022-11-17 22:39:54,916] INFO - message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=216 request_id=3f4d6100b33db1825f17d89f46547fb7 response_code=200
[2022-11-17 22:39:54,917] INFO - message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
[2022-11-17 22:39:54,917] DEBUG - api_version=None data='{"model": "text-davinci-002", "prompt": "Write a short, unique and interesting title relating to the theory of Structured programming in the form of a video essay title without involving numbers:", "temperature": 1, "max_tokens": 20, "top_p": 1, "frequency_penalty": 0, "presence_penalty": 0, "n": 1, "stop": "", "echo": false}' message='Post details'
[2022-11-17 22:39:55,632] DEBUG - https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 301
[2022-11-17 22:39:55,632] INFO - message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=567 request_id=ce54702c5a51ace0bbac2500dca7fa58 response_code=200
[2022-11-17 22:39:55,660] DEBUG - Keyword Data structures, Topics ['Structured programming', 'Linked lists', 'Hash tables', 'Dynamic programming', 'Data structures in C++'], Topic Breaking Down Structured Programming
[2022-11-17 22:39:55,661] INFO - message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
[2022-11-17 22:39:55,661] DEBUG - api_version=None data='{"model": "text-davinci-002", "prompt": "Write a list of beginner topics relating to what is Breaking Down Structured Programming in the context of computer science:\\n\\n", "temperature": 0, "max_tokens": 256, "top_p": 1, "frequency_penalty": 0, "presence_penalty": 0, "n": 1, "stop": "", "echo": false}' message='Post details'
[2022-11-17 22:40:01,184] DEBUG - https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 743
[2022-11-17 22:40:01,184] INFO - message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=5363 request_id=b307a50bab3230932a146a5b70d63338 response_code=200
[2022-11-17 22:40:01,185] DEBUG - topic: Breaking Down Structured Programming, sub topics 
-What is structured programming?
-What are the benefits of structured programming?
-What are the disadvantages of structured programming?
-What are some common programming paradigms?
-What is the difference between a programming language and a script?
-What is the difference between a high-level language and a low-level language?
-What is a compiler?
-What is an interpreter?
-What is a virtual machine?
-What is an assembler?
-What is a linker?
-What is a loader?
[2022-11-17 22:40:01,185] DEBUG - getting summary for topic
[2022-11-17 22:40:01,185] INFO - message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
[2022-11-17 22:40:01,185] DEBUG - api_version=None data='{"model": "text-curie-001", "prompt": "Write a summary for the following topic in the form of a youtube description in the context of computer science:\\n\\ntopic: Breaking Down Structured Programming\\n\\nsummary:", "temperature": 0, "max_tokens": 256, "top_p": 1, "frequency_penalty": 0, "presence_penalty": 0, "n": 1, "stop": "", "echo": false}' message='Post details'
[2022-11-17 22:40:01,823] DEBUG - https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 464
[2022-11-17 22:40:01,824] INFO - message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=479 request_id=05fae177cf0f2a889bed68f69e211b90 response_code=200
[2022-11-17 22:40:01,825] INFO - message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
[2022-11-17 22:40:01,825] DEBUG - api_version=None data='{"model": "text-davinci-002", "prompt": "Expand greatly upon the topic of Breaking Down Structured Programming in the context of computer science summarised for a 9th grader:\\n\\n1. What is structured programming?\\n\\n", "temperature": 1, "max_tokens": 128, "top_p": 1, "frequency_penalty": 0, "presence_penalty": 0, "n": 1, "stop": ["2.", "1."], "echo": false}' message='Post details'
[2022-11-17 22:40:05,455] DEBUG - https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 609
[2022-11-17 22:40:05,456] INFO - message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=3480 request_id=888aa5d7827f785bc9a757e76b21a25a response_code=200
[2022-11-17 22:40:05,456] INFO - message='Request to OpenAI API' method=post path=https://api.openai.com/v1/edits
[2022-11-17 22:40:05,456] DEBUG - api_version=None data='{"model": "text-davinci-edit-001", "input": "Structured programming is a methodology of programming which includes dividing a larger program into smaller, modular sections called \\"structures.\\" These structures can be further divided into smaller sub-structures, and so on. The benefits of structured programming include improved readability, reusability, and maintainability of code.", "instruction": "Replace all non-characters with their spoken counterpart. And fix grammar.", "temperature": 0, "top_p": 1}' message='Post details'
[2022-11-17 22:41:06,623] DEBUG - https://api.openai.com:443 "POST /v1/edits HTTP/1.1" 200 10495
[2022-11-17 22:41:06,644] INFO - message='OpenAI API response' path=https://api.openai.com/v1/edits processing_ms=61024 request_id=cdd9871f3282993d1d4c9b368ee54098 response_code=200
[2022-11-17 22:41:06,646] INFO - message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
[2022-11-17 22:41:06,646] DEBUG - api_version=None data='{"model": "text-davinci-002", "prompt": "Expand greatly upon the topic of Breaking Down Structured Programming in the context of computer science summarised for a 9th grader:\\n\\n1. What is structured programming?\\n\\nStructured programming is a methodology of programming which includes dividing a larger program into smaller, modular sections called \\"structures.\\" These structures can be further divided into smaller substructures, and so on. The benefits of structured programming include improved readability, reusability, and maintainability of code. \\n\\nStructured programming is a methodology of programming which includes dividing a larger program into smaller, modular sections called \\"structures.\\" These structures can be further divided into smaller substructures, and so on. The benefits of structured programming include improved readability, reusability, and maintainability of code. \\n\\nStructured programming is a methodology of programming which includes dividing a larger program into smaller, modular sections called \\"structures.\\" These structures can be further divided into smaller substructures, and so on. The benefits of structured programming include improved readability, reusability, and maintainability of code. \\n\\nStructured programming is a methodology of programming which includes dividing a larger program into smaller, modular sections called \\"structures.\\" These structures can be further divided into smaller substructures, and so on. The benefits of structured programming include improved readability, reusability, and maintainability of code. \\n\\nStructured programming is a methodology of programming which includes dividing a larger program into smaller, modular sections called \\"structures.\\" These structures can be further divided into smaller substructures, and so on. The benefits of structured programming include improved readability, reusability, and maintainability of code. \\n\\nStructured programming is a methodology of programming which includes dividing a larger program into smaller, modular sections called \\"structures.\\" These structures can be further divided into smaller substructures, and so on. The benefits of structured programming include improved readability, reusability, and maintainability of code. \\n\\nStructured programming is a methodology of programming which includes dividing a larger program into smaller, modular sections called \\"structures.\\" These structures can be further divided into smaller substructures, and so on. The benefits of structured programming include improved readability, reusability, and maintainability of code. \\n\\nStructured programming is a methodology of programming which includes dividing a larger program into smaller, modular sections called \\"structures.\\" These structures can be further divided into smaller substructures, and so on. The benefits of structured programming include improved readability, reusability, and maintainability of code. \\n\\nStructured programming is a methodology of programming which includes dividing a larger program into smaller, modular sections called \\"structures.\\" These structures can be further divided into smaller substructures, and so on. The benefits of structured programming include improved readability, reusability, and maintainability of code. \\n\\nStructured programming is a methodology of programming which includes dividing a larger program into smaller, modular sections called \\"structures.\\" These structures can be further divided into smaller substructures, and so on. The benefits of structured programming include improved readability, reusability, and maintainability of code. \\n\\nStructured programming is a methodology of programming which includes dividing a larger program into smaller, modular sections called \\"structures.\\" These structures can be further divided into smaller substructures, and so on. The benefits of structured programming include improved readability, reusability, and maintainability of code. \\n\\nStructured programming is a methodology of programming which includes dividing a larger program into smaller, modular sections called \\"structures.\\" These structures can be further divided into smaller substructures, and so on. The benefits of structured programming include improved readability, reusability, and maintainability of code. \\n\\nStructured programming is a methodology of programming which includes dividing a larger program into smaller, modular sections called \\"structures.\\" These structures can be further divided into smaller substructures, and so on. The benefits of structured programming include improved readability, reusability, and maintainability of code. \\n\\nStructured programming is a methodology of programming which includes dividing a larger program into smaller, modular sections called \\"structures.\\" These structures can be further divided into smaller substructures, and so on. The benefits of structured programming include improved readability, reusability, and maintainability of code. \\n\\nStructured programming is a methodology of programming which includes dividing a larger program into smaller, modular sections called \\"structures.\\" These structures can be further divided into smaller substructures, and so on. The benefits of structured programming include improved readability, reusability, and maintainability of code. \\n\\nStructured programming is a methodology of programming which includes dividing a larger program into smaller, modular sections called \\"structures.\\" These structures can be further divided into smaller substructures, and so on. The benefits of structured programming include improved readability, reusability, and maintainability of code. \\n\\nStructured programming is a methodology of programming which includes dividing a larger program into smaller, modular sections called \\"structures.\\" These structures can be further divided into smaller substructures, and so on. The benefits of structured programming include improved readability, reusability, and maintainability of code. \\n\\nStructured programming is a methodology of programming which includes dividing a larger program into smaller, modular sections called \\"structures.\\" These structures can be further divided into smaller substructures, and so on. The benefits of structured programming include improved readability, reusability, and maintainability of code. \\n\\nStructured programming is a methodology of programming which includes dividing a larger program into smaller, modular sections called \\"structures.\\" These structures can be further divided into smaller substructures, and so on. The benefits of structured programming include improved readability, reusability, and maintainability of code. \\n\\nStructured programming is a methodology of programming which includes dividing a larger program into smaller, modular sections called \\"structures.\\" These structures can be further divided into smaller substructures, and so on. The benefits of structured programming include improved readability, reusability, and maintainability of code. \\n\\nStructured programming is a methodology of programming which includes dividing a larger program into smaller, modular sections called \\"structures.\\" These structures can be further divided into smaller substructures, and so on. The benefits of structured programming include improved readability, reusability, and maintainability of code. \\n\\nStructured programming is a methodology of programming which includes dividing a larger program into smaller, modular sections called \\"structures.\\" These structures can be further divided into smaller substructures, and so on. The benefits of structured programming include improved readability, reusability, and maintainability of code. \\n\\nStructured programming is a methodology of programming which includes dividing a larger program into smaller, modular sections called \\"structures.\\" These structures can be further divided into smaller substructures, and so on. The benefits of structured programming include improved readability, reusability, and maintainability of code. \\n\\nStructured programming is a methodology of programming which includes dividing a larger program into smaller, modular sections called \\"structures.\\" These structures can be further divided into smaller substructures, and so on. The benefits of structured programming include improved readability, reusability, and maintainability of code. \\n\\nStructured programming is a methodology of programming which includes dividing a larger program into smaller, modular sections called \\"structures.\\" These structures can be further divided into smaller substructures, and so on. The benefits of structured programming include improved readability, reusability, and maintainability of code. \\n\\nStructured programming is a methodology of programming which includes dividing a larger program into smaller, modular sections called \\"structures.\\" These structures can be further divided into smaller substructures, and so on. The benefits of structured programming include improved readability, reusability, and maintainability of code. \\n\\nStructured programming is a methodology of programming which includes dividing a larger program into smaller, modular sections called \\"structures.\\" These structures can be further divided into smaller substructures, and so on. The benefits of structured programming include improved readability, reusability, and maintainability of code. \\n\\nStructured programming is a methodology of programming which includes dividing a larger program into smaller, modular sections called \\"structures.\\" These structures can be further divided into smaller substructures, and so on. The benefits of structured programming include improved readability, reusability, and maintainability of code. \\n\\nStructured programming is a methodology of programming which includes dividing a larger program into smaller, modular sections called \\"structures.\\" These structures can be further divided into smaller substructures, and so on. The benefits of structured programming include improved readability, reusability, and maintainability of code. \\n\\nStructured programming is a methodology of programming which includes dividing a larger program into smaller, modular sections called \\"structures.\\" These structures can be further divided into smaller substructures, and so on. The benefits of structured programming include improved readability, reusability, and maintainability of code.\\n\\n2. What are the benefits of structured programming?\\n\\n", "temperature": 1, "max_tokens": 128, "top_p": 1, "frequency_penalty": 0, "presence_penalty": 0, "n": 1, "stop": ["3.", "2."], "echo": false}' message='Post details'
[2022-11-17 22:41:09,676] DEBUG - https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 474
[2022-11-17 22:41:09,677] INFO - message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=2878 request_id=f2862fa20e69e24837305da47a7ccb19 response_code=200
[2022-11-17 22:41:09,677] INFO - message='Request to OpenAI API' method=post path=https://api.openai.com/v1/edits
[2022-11-17 22:41:09,678] DEBUG - api_version=None data='{"model": "text-davinci-edit-001", "input": "The benefits of structured programming include improved readability, reusability, and maintainability of code. In addition, structured programming can help to make code more efficient and easier to debug.", "instruction": "Replace all non-characters with their spoken counterpart. And fix grammar.", "temperature": 0, "top_p": 1}' message='Post details'
[2022-11-17 22:41:11,744] DEBUG - https://api.openai.com:443 "POST /v1/edits HTTP/1.1" 200 347
[2022-11-17 22:41:11,744] INFO - message='OpenAI API response' path=https://api.openai.com/v1/edits processing_ms=1912 request_id=148a3e9793aa1435720a31d1208ffcb6 response_code=200
[2022-11-17 22:41:11,744] INFO - message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
[2022-11-17 22:41:11,744] DEBUG - api_version=None data='{"model": "text-davinci-002", "prompt": "Expand greatly upon the topic of Breaking Down Structured Programming in the context of computer science summarised for a 9th grader:\\n\\n1. What is structured programming?\\n\\nStructured programming is a methodology of programming which includes dividing a larger program into smaller, modular sections called \\"structures.\\" These structures can be further divided into smaller substructures, and so on. The benefits of structured programming include improved readability, reusability, and maintainability of code. \\n\\nStructured programming is a methodology of programming which includes dividing a larger program into smaller, modular sections called \\"structures.\\" These structures can be further divided into smaller substructures, and so on. The benefits of structured programming include improved readability, reusability, and maintainability of code. \\n\\nStructured programming is a methodology of programming which includes dividing a larger program into smaller, modular sections called \\"structures.\\" These structures can be further divided into smaller substructures, and so on. The benefits of structured programming include improved readability, reusability, and maintainability of code. \\n\\nStructured programming is a methodology of programming which includes dividing a larger program into smaller, modular sections called \\"structures.\\" These structures can be further divided into smaller substructures, and so on. The benefits of structured programming include improved readability, reusability, and maintainability of code. \\n\\nStructured programming is a methodology of programming which includes dividing a larger program into smaller, modular sections called \\"structures.\\" These structures can be further divided into smaller substructures, and so on. The benefits of structured programming include improved readability, reusability, and maintainability of code. \\n\\nStructured programming is a methodology of programming which includes dividing a larger program into smaller, modular sections called \\"structures.\\" These structures can be further divided into smaller substructures, and so on. The benefits of structured programming include improved readability, reusability, and maintainability of code. \\n\\nStructured programming is a methodology of programming which includes dividing a larger program into smaller, modular sections called \\"structures.\\" These structures can be further divided into smaller substructures, and so on. The benefits of structured programming include improved readability, reusability, and maintainability of code. \\n\\nStructured programming is a methodology of programming which includes dividing a larger program into smaller, modular sections called \\"structures.\\" These structures can be further divided into smaller substructures, and so on. The benefits of structured programming include improved readability, reusability, and maintainability of code. \\n\\nStructured programming is a methodology of programming which includes dividing a larger program into smaller, modular sections called \\"structures.\\" These structures can be further divided into smaller substructures, and so on. The benefits of structured programming include improved readability, reusability, and maintainability of code. \\n\\nStructured programming is a methodology of programming which includes dividing a larger program into smaller, modular sections called \\"structures.\\" These structures can be further divided into smaller substructures, and so on. The benefits of structured programming include improved readability, reusability, and maintainability of code. \\n\\nStructured programming is a methodology of programming which includes dividing a larger program into smaller, modular sections called \\"structures.\\" These structures can be further divided into smaller substructures, and so on. The benefits of structured programming include improved readability, reusability, and maintainability of code. \\n\\nStructured programming is a methodology of programming which includes dividing a larger program into smaller, modular sections called \\"structures.\\" These structures can be further divided into smaller substructures, and so on. The benefits of structured programming include improved readability, reusability, and maintainability of code. \\n\\nStructured programming is a methodology of programming which includes dividing a larger program into smaller, modular sections called \\"structures.\\" These structures can be further divided into smaller substructures, and so on. The benefits of structured programming include improved readability, reusability, and maintainability of code. \\n\\nStructured programming is a methodology of programming which includes dividing a larger program into smaller, modular sections called \\"structures.\\" These structures can be further divided into smaller substructures, and so on. The benefits of structured programming include improved readability, reusability, and maintainability of code. \\n\\nStructured programming is a methodology of programming which includes dividing a larger program into smaller, modular sections called \\"structures.\\" These structures can be further divided into smaller substructures, and so on. The benefits of structured programming include improved readability, reusability, and maintainability of code. \\n\\nStructured programming is a methodology of programming which includes dividing a larger program into smaller, modular sections called \\"structures.\\" These structures can be further divided into smaller substructures, and so on. The benefits of structured programming include improved readability, reusability, and maintainability of code. \\n\\nStructured programming is a methodology of programming which includes dividing a larger program into smaller, modular sections called \\"structures.\\" These structures can be further divided into smaller substructures, and so on. The benefits of structured programming include improved readability, reusability, and maintainability of code. \\n\\nStructured programming is a methodology of programming which includes dividing a larger program into smaller, modular sections called \\"structures.\\" These structures can be further divided into smaller substructures, and so on. The benefits of structured programming include improved readability, reusability, and maintainability of code. \\n\\nStructured programming is a methodology of programming which includes dividing a larger program into smaller, modular sections called \\"structures.\\" These structures can be further divided into smaller substructures, and so on. The benefits of structured programming include improved readability, reusability, and maintainability of code. \\n\\nStructured programming is a methodology of programming which includes dividing a larger program into smaller, modular sections called \\"structures.\\" These structures can be further divided into smaller substructures, and so on. The benefits of structured programming include improved readability, reusability, and maintainability of code. \\n\\nStructured programming is a methodology of programming which includes dividing a larger program into smaller, modular sections called \\"structures.\\" These structures can be further divided into smaller substructures, and so on. The benefits of structured programming include improved readability, reusability, and maintainability of code. \\n\\nStructured programming is a methodology of programming which includes dividing a larger program into smaller, modular sections called \\"structures.\\" These structures can be further divided into smaller substructures, and so on. The benefits of structured programming include improved readability, reusability, and maintainability of code. \\n\\nStructured programming is a methodology of programming which includes dividing a larger program into smaller, modular sections called \\"structures.\\" These structures can be further divided into smaller substructures, and so on. The benefits of structured programming include improved readability, reusability, and maintainability of code. \\n\\nStructured programming is a methodology of programming which includes dividing a larger program into smaller, modular sections called \\"structures.\\" These structures can be further divided into smaller substructures, and so on. The benefits of structured programming include improved readability, reusability, and maintainability of code. \\n\\nStructured programming is a methodology of programming which includes dividing a larger program into smaller, modular sections called \\"structures.\\" These structures can be further divided into smaller substructures, and so on. The benefits of structured programming include improved readability, reusability, and maintainability of code. \\n\\nStructured programming is a methodology of programming which includes dividing a larger program into smaller, modular sections called \\"structures.\\" These structures can be further divided into smaller substructures, and so on. The benefits of structured programming include improved readability, reusability, and maintainability of code. \\n\\nStructured programming is a methodology of programming which includes dividing a larger program into smaller, modular sections called \\"structures.\\" These structures can be further divided into smaller substructures, and so on. The benefits of structured programming include improved readability, reusability, and maintainability of code. \\n\\nStructured programming is a methodology of programming which includes dividing a larger program into smaller, modular sections called \\"structures.\\" These structures can be further divided into smaller substructures, and so on. The benefits of structured programming include improved readability, reusability, and maintainability of code. \\n\\nStructured programming is a methodology of programming which includes dividing a larger program into smaller, modular sections called \\"structures.\\" These structures can be further divided into smaller substructures, and so on. The benefits of structured programming include improved readability, reusability, and maintainability of code. \\n\\nStructured programming is a methodology of programming which includes dividing a larger program into smaller, modular sections called \\"structures.\\" These structures can be further divided into smaller substructures, and so on. The benefits of structured programming include improved readability, reusability, and maintainability of code.\\n\\n2. What are the benefits of structured programming?\\n\\nThe benefits of structured programming include improved readability, reusability, and maintainability of code. In addition, structured programming can help make code more efficient and easier to debug.\\n\\n3. What are the disadvantages of structured programming?\\n\\n", "temperature": 1, "max_tokens": 128, "top_p": 1, "frequency_penalty": 0, "presence_penalty": 0, "n": 1, "stop": ["4.", "3."], "echo": false}' message='Post details'
[2022-11-17 22:41:13,595] DEBUG - https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 570
[2022-11-17 22:41:13,595] INFO - message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1701 request_id=c1aafafac64c6428843dec28292b89af response_code=200
[2022-11-17 22:41:13,596] INFO - message='Request to OpenAI API' method=post path=https://api.openai.com/v1/edits
[2022-11-17 22:41:13,596] DEBUG - api_version=None data='{"model": "text-davinci-edit-001", "input": "Structured programming can sometimes result in code that is more complex and difficult to read than non-structured code. In addition, strict adherence to structured programming methodology can sometimes make it difficult to adapt code to new situations or to take advantage of new programming techniques.", "instruction": "Replace all non-characters with their spoken counterpart. And fix grammar.", "temperature": 0, "top_p": 1}' message='Post details'
[2022-11-17 22:41:16,994] DEBUG - https://api.openai.com:443 "POST /v1/edits HTTP/1.1" 200 452
[2022-11-17 22:41:16,995] INFO - message='OpenAI API response' path=https://api.openai.com/v1/edits processing_ms=3255 request_id=05c4dd8ef1c86b858fc7f083069bf5f4 response_code=200
[2022-11-17 22:41:16,995] INFO - message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
[2022-11-17 22:41:16,996] DEBUG - api_version=None data='{"model": "text-davinci-002", "prompt": "Expand greatly upon the topic of Breaking Down Structured Programming in the context of computer science summarised for a 9th grader:\\n\\n1. What is structured programming?\\n\\nStructured programming is a methodology of programming which includes dividing a larger program into smaller, modular sections called \\"structures.\\" These structures can be further divided into smaller substructures, and so on. The benefits of structured programming include improved readability, reusability, and maintainability of code. \\n\\nStructured programming is a methodology of programming which includes dividing a larger program into smaller, modular sections called \\"structures.\\" These structures can be further divided into smaller substructures, and so on. The benefits of structured programming include improved readability, reusability, and maintainability of code. \\n\\nStructured programming is a methodology of programming which includes dividing a larger program into smaller, modular sections called \\"structures.\\" These structures can be further divided into smaller substructures, and so on. The benefits of structured programming include improved readability, reusability, and maintainability of code. \\n\\nStructured programming is a methodology of programming which includes dividing a larger program into smaller, modular sections called \\"structures.\\" These structures can be further divided into smaller substructures, and so on. The benefits of structured programming include improved readability, reusability, and maintainability of code. \\n\\nStructured programming is a methodology of programming which includes dividing a larger program into smaller, modular sections called \\"structures.\\" These structures can be further divided into smaller substructures, and so on. The benefits of structured programming include improved readability, reusability, and maintainability of code. \\n\\nStructured programming is a methodology of programming which includes dividing a larger program into smaller, modular sections called \\"structures.\\" These structures can be further divided into smaller substructures, and so on. The benefits of structured programming include improved readability, reusability, and maintainability of code. \\n\\nStructured programming is a methodology of programming which includes dividing a larger program into smaller, modular sections called \\"structures.\\" These structures can be further divided into smaller substructures, and so on. The benefits of structured programming include improved readability, reusability, and maintainability of code. \\n\\nStructured programming is a methodology of programming which includes dividing a larger program into smaller, modular sections called \\"structures.\\" These structures can be further divided into smaller substructures, and so on. The benefits of structured programming include improved readability, reusability, and maintainability of code. \\n\\nStructured programming is a methodology of programming which includes dividing a larger program into smaller, modular sections called \\"structures.\\" These structures can be further divided into smaller substructures, and so on. The benefits of structured programming include improved readability, reusability, and maintainability of code. \\n\\nStructured programming is a methodology of programming which includes dividing a larger program into smaller, modular sections called \\"structures.\\" These structures can be further divided into smaller substructures, and so on. The benefits of structured programming include improved readability, reusability, and maintainability of code. \\n\\nStructured programming is a methodology of programming which includes dividing a larger program into smaller, modular sections called \\"structures.\\" These structures can be further divided into smaller substructures, and so on. The benefits of structured programming include improved readability, reusability, and maintainability of code. \\n\\nStructured programming is a methodology of programming which includes dividing a larger program into smaller, modular sections called \\"structures.\\" These structures can be further divided into smaller substructures, and so on. The benefits of structured programming include improved readability, reusability, and maintainability of code. \\n\\nStructured programming is a methodology of programming which includes dividing a larger program into smaller, modular sections called \\"structures.\\" These structures can be further divided into smaller substructures, and so on. The benefits of structured programming include improved readability, reusability, and maintainability of code. \\n\\nStructured programming is a methodology of programming which includes dividing a larger program into smaller, modular sections called \\"structures.\\" These structures can be further divided into smaller substructures, and so on. The benefits of structured programming include improved readability, reusability, and maintainability of code. \\n\\nStructured programming is a methodology of programming which includes dividing a larger program into smaller, modular sections called \\"structures.\\" These structures can be further divided into smaller substructures, and so on. The benefits of structured programming include improved readability, reusability, and maintainability of code. \\n\\nStructured programming is a methodology of programming which includes dividing a larger program into smaller, modular sections called \\"structures.\\" These structures can be further divided into smaller substructures, and so on. The benefits of structured programming include improved readability, reusability, and maintainability of code. \\n\\nStructured programming is a methodology of programming which includes dividing a larger program into smaller, modular sections called \\"structures.\\" These structures can be further divided into smaller substructures, and so on. The benefits of structured programming include improved readability, reusability, and maintainability of code. \\n\\nStructured programming is a methodology of programming which includes dividing a larger program into smaller, modular sections called \\"structures.\\" These structures can be further divided into smaller substructures, and so on. The benefits of structured programming include improved readability, reusability, and maintainability of code. \\n\\nStructured programming is a methodology of programming which includes dividing a larger program into smaller, modular sections called \\"structures.\\" These structures can be further divided into smaller substructures, and so on. The benefits of structured programming include improved readability, reusability, and maintainability of code. \\n\\nStructured programming is a methodology of programming which includes dividing a larger program into smaller, modular sections called \\"structures.\\" These structures can be further divided into smaller substructures, and so on. The benefits of structured programming include improved readability, reusability, and maintainability of code. \\n\\nStructured programming is a methodology of programming which includes dividing a larger program into smaller, modular sections called \\"structures.\\" These structures can be further divided into smaller substructures, and so on. The benefits of structured programming include improved readability, reusability, and maintainability of code. \\n\\nStructured programming is a methodology of programming which includes dividing a larger program into smaller, modular sections called \\"structures.\\" These structures can be further divided into smaller substructures, and so on. The benefits of structured programming include improved readability, reusability, and maintainability of code. \\n\\nStructured programming is a methodology of programming which includes dividing a larger program into smaller, modular sections called \\"structures.\\" These structures can be further divided into smaller substructures, and so on. The benefits of structured programming include improved readability, reusability, and maintainability of code. \\n\\nStructured programming is a methodology of programming which includes dividing a larger program into smaller, modular sections called \\"structures.\\" These structures can be further divided into smaller substructures, and so on. The benefits of structured programming include improved readability, reusability, and maintainability of code. \\n\\nStructured programming is a methodology of programming which includes dividing a larger program into smaller, modular sections called \\"structures.\\" These structures can be further divided into smaller substructures, and so on. The benefits of structured programming include improved readability, reusability, and maintainability of code. \\n\\nStructured programming is a methodology of programming which includes dividing a larger program into smaller, modular sections called \\"structures.\\" These structures can be further divided into smaller substructures, and so on. The benefits of structured programming include improved readability, reusability, and maintainability of code. \\n\\nStructured programming is a methodology of programming which includes dividing a larger program into smaller, modular sections called \\"structures.\\" These structures can be further divided into smaller substructures, and so on. The benefits of structured programming include improved readability, reusability, and maintainability of code. \\n\\nStructured programming is a methodology of programming which includes dividing a larger program into smaller, modular sections called \\"structures.\\" These structures can be further divided into smaller substructures, and so on. The benefits of structured programming include improved readability, reusability, and maintainability of code. \\n\\nStructured programming is a methodology of programming which includes dividing a larger program into smaller, modular sections called \\"structures.\\" These structures can be further divided into smaller substructures, and so on. The benefits of structured programming include improved readability, reusability, and maintainability of code. \\n\\nStructured programming is a methodology of programming which includes dividing a larger program into smaller, modular sections called \\"structures.\\" These structures can be further divided into smaller substructures, and so on. The benefits of structured programming include improved readability, reusability, and maintainability of code.\\n\\n2. What are the benefits of structured programming?\\n\\nThe benefits of structured programming include improved readability, reusability, and maintainability of code. In addition, structured programming can help make code more efficient and easier to debug.\\n\\n3. What are the disadvantages of structured programming?\\n\\nStructured programming can sometimes result in code that is more complex and difficult to read than nonstructured code. In addition, strict adherence to structured programming methodology can sometimes make it difficult to adapt code to new situations or to take advantage of new programming techniques.\\n\\n4. What are some common programming paradigms?\\n\\n", "temperature": 1, "max_tokens": 128, "top_p": 1, "frequency_penalty": 0, "presence_penalty": 0, "n": 1, "stop": ["5.", "4."], "echo": false}' message='Post details'
[2022-11-17 22:41:18,376] DEBUG - https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 387
[2022-11-17 22:41:18,377] INFO - message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1232 request_id=63543199b69f331403d67487c87783fb response_code=200
[2022-11-17 22:41:18,378] INFO - message='Request to OpenAI API' method=post path=https://api.openai.com/v1/edits
[2022-11-17 22:41:18,378] DEBUG - api_version=None data='{"model": "text-davinci-edit-001", "input": "Some common programming paradigms include object-oriented programming, functional programming, and logic programming.", "instruction": "Replace all non-characters with their spoken counterpart. And fix grammar.", "temperature": 0, "top_p": 1}' message='Post details'
[2022-11-17 22:41:20,104] DEBUG - https://api.openai.com:443 "POST /v1/edits HTTP/1.1" 200 262
[2022-11-17 22:41:20,105] INFO - message='OpenAI API response' path=https://api.openai.com/v1/edits processing_ms=1581 request_id=ec2d9d14886312b204de064d4ec50525 response_code=200
[2022-11-17 22:41:20,105] INFO - message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
[2022-11-17 22:41:20,105] DEBUG - api_version=None data='{"model": "text-davinci-002", "prompt": "Expand greatly upon the topic of Breaking Down Structured Programming in the context of computer science summarised for a 9th grader:\\n\\n1. What is structured programming?\\n\\nStructured programming is a methodology of programming which includes dividing a larger program into smaller, modular sections called \\"structures.\\" These structures can be further divided into smaller substructures, and so on. The benefits of structured programming include improved readability, reusability, and maintainability of code. \\n\\nStructured programming is a methodology of programming which includes dividing a larger program into smaller, modular sections called \\"structures.\\" These structures can be further divided into smaller substructures, and so on. The benefits of structured programming include improved readability, reusability, and maintainability of code. \\n\\nStructured programming is a methodology of programming which includes dividing a larger program into smaller, modular sections called \\"structures.\\" These structures can be further divided into smaller substructures, and so on. The benefits of structured programming include improved readability, reusability, and maintainability of code. \\n\\nStructured programming is a methodology of programming which includes dividing a larger program into smaller, modular sections called \\"structures.\\" These structures can be further divided into smaller substructures, and so on. The benefits of structured programming include improved readability, reusability, and maintainability of code. \\n\\nStructured programming is a methodology of programming which includes dividing a larger program into smaller, modular sections called \\"structures.\\" These structures can be further divided into smaller substructures, and so on. The benefits of structured programming include improved readability, reusability, and maintainability of code. \\n\\nStructured programming is a methodology of programming which includes dividing a larger program into smaller, modular sections called \\"structures.\\" These structures can be further divided into smaller substructures, and so on. The benefits of structured programming include improved readability, reusability, and maintainability of code. \\n\\nStructured programming is a methodology of programming which includes dividing a larger program into smaller, modular sections called \\"structures.\\" These structures can be further divided into smaller substructures, and so on. The benefits of structured programming include improved readability, reusability, and maintainability of code. \\n\\nStructured programming is a methodology of programming which includes dividing a larger program into smaller, modular sections called \\"structures.\\" These structures can be further divided into smaller substructures, and so on. The benefits of structured programming include improved readability, reusability, and maintainability of code. \\n\\nStructured programming is a methodology of programming which includes dividing a larger program into smaller, modular sections called \\"structures.\\" These structures can be further divided into smaller substructures, and so on. The benefits of structured programming include improved readability, reusability, and maintainability of code. \\n\\nStructured programming is a methodology of programming which includes dividing a larger program into smaller, modular sections called \\"structures.\\" These structures can be further divided into smaller substructures, and so on. The benefits of structured programming include improved readability, reusability, and maintainability of code. \\n\\nStructured programming is a methodology of programming which includes dividing a larger program into smaller, modular sections called \\"structures.\\" These structures can be further divided into smaller substructures, and so on. The benefits of structured programming include improved readability, reusability, and maintainability of code. \\n\\nStructured programming is a methodology of programming which includes dividing a larger program into smaller, modular sections called \\"structures.\\" These structures can be further divided into smaller substructures, and so on. The benefits of structured programming include improved readability, reusability, and maintainability of code. \\n\\nStructured programming is a methodology of programming which includes dividing a larger program into smaller, modular sections called \\"structures.\\" These structures can be further divided into smaller substructures, and so on. The benefits of structured programming include improved readability, reusability, and maintainability of code. \\n\\nStructured programming is a methodology of programming which includes dividing a larger program into smaller, modular sections called \\"structures.\\" These structures can be further divided into smaller substructures, and so on. The benefits of structured programming include improved readability, reusability, and maintainability of code. \\n\\nStructured programming is a methodology of programming which includes dividing a larger program into smaller, modular sections called \\"structures.\\" These structures can be further divided into smaller substructures, and so on. The benefits of structured programming include improved readability, reusability, and maintainability of code. \\n\\nStructured programming is a methodology of programming which includes dividing a larger program into smaller, modular sections called \\"structures.\\" These structures can be further divided into smaller substructures, and so on. The benefits of structured programming include improved readability, reusability, and maintainability of code. \\n\\nStructured programming is a methodology of programming which includes dividing a larger program into smaller, modular sections called \\"structures.\\" These structures can be further divided into smaller substructures, and so on. The benefits of structured programming include improved readability, reusability, and maintainability of code. \\n\\nStructured programming is a methodology of programming which includes dividing a larger program into smaller, modular sections called \\"structures.\\" These structures can be further divided into smaller substructures, and so on. The benefits of structured programming include improved readability, reusability, and maintainability of code. \\n\\nStructured programming is a methodology of programming which includes dividing a larger program into smaller, modular sections called \\"structures.\\" These structures can be further divided into smaller substructures, and so on. The benefits of structured programming include improved readability, reusability, and maintainability of code. \\n\\nStructured programming is a methodology of programming which includes dividing a larger program into smaller, modular sections called \\"structures.\\" These structures can be further divided into smaller substructures, and so on. The benefits of structured programming include improved readability, reusability, and maintainability of code. \\n\\nStructured programming is a methodology of programming which includes dividing a larger program into smaller, modular sections called \\"structures.\\" These structures can be further divided into smaller substructures, and so on. The benefits of structured programming include improved readability, reusability, and maintainability of code. \\n\\nStructured programming is a methodology of programming which includes dividing a larger program into smaller, modular sections called \\"structures.\\" These structures can be further divided into smaller substructures, and so on. The benefits of structured programming include improved readability, reusability, and maintainability of code. \\n\\nStructured programming is a methodology of programming which includes dividing a larger program into smaller, modular sections called \\"structures.\\" These structures can be further divided into smaller substructures, and so on. The benefits of structured programming include improved readability, reusability, and maintainability of code. \\n\\nStructured programming is a methodology of programming which includes dividing a larger program into smaller, modular sections called \\"structures.\\" These structures can be further divided into smaller substructures, and so on. The benefits of structured programming include improved readability, reusability, and maintainability of code. \\n\\nStructured programming is a methodology of programming which includes dividing a larger program into smaller, modular sections called \\"structures.\\" These structures can be further divided into smaller substructures, and so on. The benefits of structured programming include improved readability, reusability, and maintainability of code. \\n\\nStructured programming is a methodology of programming which includes dividing a larger program into smaller, modular sections called \\"structures.\\" These structures can be further divided into smaller substructures, and so on. The benefits of structured programming include improved readability, reusability, and maintainability of code. \\n\\nStructured programming is a methodology of programming which includes dividing a larger program into smaller, modular sections called \\"structures.\\" These structures can be further divided into smaller substructures, and so on. The benefits of structured programming include improved readability, reusability, and maintainability of code. \\n\\nStructured programming is a methodology of programming which includes dividing a larger program into smaller, modular sections called \\"structures.\\" These structures can be further divided into smaller substructures, and so on. The benefits of structured programming include improved readability, reusability, and maintainability of code. \\n\\nStructured programming is a methodology of programming which includes dividing a larger program into smaller, modular sections called \\"structures.\\" These structures can be further divided into smaller substructures, and so on. The benefits of structured programming include improved readability, reusability, and maintainability of code. \\n\\nStructured programming is a methodology of programming which includes dividing a larger program into smaller, modular sections called \\"structures.\\" These structures can be further divided into smaller substructures, and so on. The benefits of structured programming include improved readability, reusability, and maintainability of code.\\n\\n2. What are the benefits of structured programming?\\n\\nThe benefits of structured programming include improved readability, reusability, and maintainability of code. In addition, structured programming can help make code more efficient and easier to debug.\\n\\n3. What are the disadvantages of structured programming?\\n\\nStructured programming can sometimes result in code that is more complex and difficult to read than nonstructured code. In addition, strict adherence to structured programming methodology can sometimes make it difficult to adapt code to new situations or to take advantage of new programming techniques.\\n\\n4. What are some common programming paradigms?\\n\\nSome common programming paradigms include object oriented programming, functional programming, and logic programming.\\n\\n5. What is the difference between a programming language and a script?\\n\\n", "temperature": 1, "max_tokens": 128, "top_p": 1, "frequency_penalty": 0, "presence_penalty": 0, "n": 1, "stop": ["6.", "5."], "echo": false}' message='Post details'
[2022-11-17 22:41:21,890] DEBUG - https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 579
[2022-11-17 22:41:21,890] INFO - message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1634 request_id=4a271c23026ccd87483293e3508cb836 response_code=200
[2022-11-17 22:41:21,891] INFO - message='Request to OpenAI API' method=post path=https://api.openai.com/v1/edits
[2022-11-17 22:41:21,891] DEBUG - api_version=None data='{"model": "text-davinci-edit-001", "input": "A programming language is a formal language that includes a set of instructions for a computer to execute. A script, on the other hand, is a set of instructions for a program to follow. Scripts are often written in a scripting language, which is a simplified programming language designed for writing scripts.", "instruction": "Replace all non-characters with their spoken counterpart. And fix grammar.", "temperature": 0, "top_p": 1}' message='Post details'
[2022-11-17 22:41:25,980] DEBUG - https://api.openai.com:443 "POST /v1/edits HTTP/1.1" 200 457
[2022-11-17 22:41:25,980] INFO - message='OpenAI API response' path=https://api.openai.com/v1/edits processing_ms=3942 request_id=15737f998fcb543b5748e540cde7df2c response_code=200
[2022-11-17 22:41:25,981] INFO - message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
[2022-11-17 22:41:25,981] DEBUG - api_version=None data='{"model": "text-davinci-002", "prompt": "Expand greatly upon the topic of Breaking Down Structured Programming in the context of computer science summarised for a 9th grader:\\n\\n1. What is structured programming?\\n\\nStructured programming is a methodology of programming which includes dividing a larger program into smaller, modular sections called \\"structures.\\" These structures can be further divided into smaller substructures, and so on. The benefits of structured programming include improved readability, reusability, and maintainability of code. \\n\\nStructured programming is a methodology of programming which includes dividing a larger program into smaller, modular sections called \\"structures.\\" These structures can be further divided into smaller substructures, and so on. The benefits of structured programming include improved readability, reusability, and maintainability of code. \\n\\nStructured programming is a methodology of programming which includes dividing a larger program into smaller, modular sections called \\"structures.\\" These structures can be further divided into smaller substructures, and so on. The benefits of structured programming include improved readability, reusability, and maintainability of code. \\n\\nStructured programming is a methodology of programming which includes dividing a larger program into smaller, modular sections called \\"structures.\\" These structures can be further divided into smaller substructures, and so on. The benefits of structured programming include improved readability, reusability, and maintainability of code. \\n\\nStructured programming is a methodology of programming which includes dividing a larger program into smaller, modular sections called \\"structures.\\" These structures can be further divided into smaller substructures, and so on. The benefits of structured programming include improved readability, reusability, and maintainability of code. \\n\\nStructured programming is a methodology of programming which includes dividing a larger program into smaller, modular sections called \\"structures.\\" These structures can be further divided into smaller substructures, and so on. The benefits of structured programming include improved readability, reusability, and maintainability of code. \\n\\nStructured programming is a methodology of programming which includes dividing a larger program into smaller, modular sections called \\"structures.\\" These structures can be further divided into smaller substructures, and so on. The benefits of structured programming include improved readability, reusability, and maintainability of code. \\n\\nStructured programming is a methodology of programming which includes dividing a larger program into smaller, modular sections called \\"structures.\\" These structures can be further divided into smaller substructures, and so on. The benefits of structured programming include improved readability, reusability, and maintainability of code. \\n\\nStructured programming is a methodology of programming which includes dividing a larger program into smaller, modular sections called \\"structures.\\" These structures can be further divided into smaller substructures, and so on. The benefits of structured programming include improved readability, reusability, and maintainability of code. \\n\\nStructured programming is a methodology of programming which includes dividing a larger program into smaller, modular sections called \\"structures.\\" These structures can be further divided into smaller substructures, and so on. The benefits of structured programming include improved readability, reusability, and maintainability of code. \\n\\nStructured programming is a methodology of programming which includes dividing a larger program into smaller, modular sections called \\"structures.\\" These structures can be further divided into smaller substructures, and so on. The benefits of structured programming include improved readability, reusability, and maintainability of code. \\n\\nStructured programming is a methodology of programming which includes dividing a larger program into smaller, modular sections called \\"structures.\\" These structures can be further divided into smaller substructures, and so on. The benefits of structured programming include improved readability, reusability, and maintainability of code. \\n\\nStructured programming is a methodology of programming which includes dividing a larger program into smaller, modular sections called \\"structures.\\" These structures can be further divided into smaller substructures, and so on. The benefits of structured programming include improved readability, reusability, and maintainability of code. \\n\\nStructured programming is a methodology of programming which includes dividing a larger program into smaller, modular sections called \\"structures.\\" These structures can be further divided into smaller substructures, and so on. The benefits of structured programming include improved readability, reusability, and maintainability of code. \\n\\nStructured programming is a methodology of programming which includes dividing a larger program into smaller, modular sections called \\"structures.\\" These structures can be further divided into smaller substructures, and so on. The benefits of structured programming include improved readability, reusability, and maintainability of code. \\n\\nStructured programming is a methodology of programming which includes dividing a larger program into smaller, modular sections called \\"structures.\\" These structures can be further divided into smaller substructures, and so on. The benefits of structured programming include improved readability, reusability, and maintainability of code. \\n\\nStructured programming is a methodology of programming which includes dividing a larger program into smaller, modular sections called \\"structures.\\" These structures can be further divided into smaller substructures, and so on. The benefits of structured programming include improved readability, reusability, and maintainability of code. \\n\\nStructured programming is a methodology of programming which includes dividing a larger program into smaller, modular sections called \\"structures.\\" These structures can be further divided into smaller substructures, and so on. The benefits of structured programming include improved readability, reusability, and maintainability of code. \\n\\nStructured programming is a methodology of programming which includes dividing a larger program into smaller, modular sections called \\"structures.\\" These structures can be further divided into smaller substructures, and so on. The benefits of structured programming include improved readability, reusability, and maintainability of code. \\n\\nStructured programming is a methodology of programming which includes dividing a larger program into smaller, modular sections called \\"structures.\\" These structures can be further divided into smaller substructures, and so on. The benefits of structured programming include improved readability, reusability, and maintainability of code. \\n\\nStructured programming is a methodology of programming which includes dividing a larger program into smaller, modular sections called \\"structures.\\" These structures can be further divided into smaller substructures, and so on. The benefits of structured programming include improved readability, reusability, and maintainability of code. \\n\\nStructured programming is a methodology of programming which includes dividing a larger program into smaller, modular sections called \\"structures.\\" These structures can be further divided into smaller substructures, and so on. The benefits of structured programming include improved readability, reusability, and maintainability of code. \\n\\nStructured programming is a methodology of programming which includes dividing a larger program into smaller, modular sections called \\"structures.\\" These structures can be further divided into smaller substructures, and so on. The benefits of structured programming include improved readability, reusability, and maintainability of code. \\n\\nStructured programming is a methodology of programming which includes dividing a larger program into smaller, modular sections called \\"structures.\\" These structures can be further divided into smaller substructures, and so on. The benefits of structured programming include improved readability, reusability, and maintainability of code. \\n\\nStructured programming is a methodology of programming which includes dividing a larger program into smaller, modular sections called \\"structures.\\" These structures can be further divided into smaller substructures, and so on. The benefits of structured programming include improved readability, reusability, and maintainability of code. \\n\\nStructured programming is a methodology of programming which includes dividing a larger program into smaller, modular sections called \\"structures.\\" These structures can be further divided into smaller substructures, and so on. The benefits of structured programming include improved readability, reusability, and maintainability of code. \\n\\nStructured programming is a methodology of programming which includes dividing a larger program into smaller, modular sections called \\"structures.\\" These structures can be further divided into smaller substructures, and so on. The benefits of structured programming include improved readability, reusability, and maintainability of code. \\n\\nStructured programming is a methodology of programming which includes dividing a larger program into smaller, modular sections called \\"structures.\\" These structures can be further divided into smaller substructures, and so on. The benefits of structured programming include improved readability, reusability, and maintainability of code. \\n\\nStructured programming is a methodology of programming which includes dividing a larger program into smaller, modular sections called \\"structures.\\" These structures can be further divided into smaller substructures, and so on. The benefits of structured programming include improved readability, reusability, and maintainability of code. \\n\\nStructured programming is a methodology of programming which includes dividing a larger program into smaller, modular sections called \\"structures.\\" These structures can be further divided into smaller substructures, and so on. The benefits of structured programming include improved readability, reusability, and maintainability of code.\\n\\n2. What are the benefits of structured programming?\\n\\nThe benefits of structured programming include improved readability, reusability, and maintainability of code. In addition, structured programming can help make code more efficient and easier to debug.\\n\\n3. What are the disadvantages of structured programming?\\n\\nStructured programming can sometimes result in code that is more complex and difficult to read than nonstructured code. In addition, strict adherence to structured programming methodology can sometimes make it difficult to adapt code to new situations or to take advantage of new programming techniques.\\n\\n4. What are some common programming paradigms?\\n\\nSome common programming paradigms include object oriented programming, functional programming, and logic programming.\\n\\n5. What is the difference between a programming language and a script?\\n\\nA programming language is a formal language that includes a set of instructions for a computer to execute. A script, on the other hand, is a set of instructions for a program to follow. Scripts are often written in a scripting language, which is a simplified programming language designed for writing scripts.\\n\\n6. What is the difference between a high\\n\\n", "temperature": 1, "max_tokens": 128, "top_p": 1, "frequency_penalty": 0, "presence_penalty": 0, "n": 1, "stop": ["7.", "6."], "echo": false}' message='Post details'
[2022-11-17 22:41:28,423] DEBUG - https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 537
[2022-11-17 22:41:28,424] INFO - message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=2296 request_id=15d1eae1bcd4220bafcb6d1a3af162d3 response_code=200
[2022-11-17 22:41:28,425] INFO - message='Request to OpenAI API' method=post path=https://api.openai.com/v1/edits
[2022-11-17 22:41:28,425] DEBUG - api_version=None data='{"model": "text-davinci-edit-001", "input": "A high-level programming language is a programming language that is designed to be easy for humans to read and write. High-level languages are generally closer to human languages than low-level languages, which are designed to be easy for computers to read and write.", "instruction": "Replace all non-characters with their spoken counterpart. And fix grammar.", "temperature": 0, "top_p": 1}' message='Post details'
[2022-11-17 22:41:32,721] DEBUG - https://api.openai.com:443 "POST /v1/edits HTTP/1.1" 200 415
[2022-11-17 22:41:32,721] INFO - message='OpenAI API response' path=https://api.openai.com/v1/edits processing_ms=4150 request_id=03a4e3b8edaffcfb9233d55c91a732de response_code=200
[2022-11-17 22:41:32,722] INFO - message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
[2022-11-17 22:41:32,722] DEBUG - api_version=None data='{"model": "text-davinci-002", "prompt": "Expand greatly upon the topic of Breaking Down Structured Programming in the context of computer science summarised for a 9th grader:\\n\\n1. What is structured programming?\\n\\nStructured programming is a methodology of programming which includes dividing a larger program into smaller, modular sections called \\"structures.\\" These structures can be further divided into smaller substructures, and so on. The benefits of structured programming include improved readability, reusability, and maintainability of code. \\n\\nStructured programming is a methodology of programming which includes dividing a larger program into smaller, modular sections called \\"structures.\\" These structures can be further divided into smaller substructures, and so on. The benefits of structured programming include improved readability, reusability, and maintainability of code. \\n\\nStructured programming is a methodology of programming which includes dividing a larger program into smaller, modular sections called \\"structures.\\" These structures can be further divided into smaller substructures, and so on. The benefits of structured programming include improved readability, reusability, and maintainability of code. \\n\\nStructured programming is a methodology of programming which includes dividing a larger program into smaller, modular sections called \\"structures.\\" These structures can be further divided into smaller substructures, and so on. The benefits of structured programming include improved readability, reusability, and maintainability of code. \\n\\nStructured programming is a methodology of programming which includes dividing a larger program into smaller, modular sections called \\"structures.\\" These structures can be further divided into smaller substructures, and so on. The benefits of structured programming include improved readability, reusability, and maintainability of code. \\n\\nStructured programming is a methodology of programming which includes dividing a larger program into smaller, modular sections called \\"structures.\\" These structures can be further divided into smaller substructures, and so on. The benefits of structured programming include improved readability, reusability, and maintainability of code. \\n\\nStructured programming is a methodology of programming which includes dividing a larger program into smaller, modular sections called \\"structures.\\" These structures can be further divided into smaller substructures, and so on. The benefits of structured programming include improved readability, reusability, and maintainability of code. \\n\\nStructured programming is a methodology of programming which includes dividing a larger program into smaller, modular sections called \\"structures.\\" These structures can be further divided into smaller substructures, and so on. The benefits of structured programming include improved readability, reusability, and maintainability of code. \\n\\nStructured programming is a methodology of programming which includes dividing a larger program into smaller, modular sections called \\"structures.\\" These structures can be further divided into smaller substructures, and so on. The benefits of structured programming include improved readability, reusability, and maintainability of code. \\n\\nStructured programming is a methodology of programming which includes dividing a larger program into smaller, modular sections called \\"structures.\\" These structures can be further divided into smaller substructures, and so on. The benefits of structured programming include improved readability, reusability, and maintainability of code. \\n\\nStructured programming is a methodology of programming which includes dividing a larger program into smaller, modular sections called \\"structures.\\" These structures can be further divided into smaller substructures, and so on. The benefits of structured programming include improved readability, reusability, and maintainability of code. \\n\\nStructured programming is a methodology of programming which includes dividing a larger program into smaller, modular sections called \\"structures.\\" These structures can be further divided into smaller substructures, and so on. The benefits of structured programming include improved readability, reusability, and maintainability of code. \\n\\nStructured programming is a methodology of programming which includes dividing a larger program into smaller, modular sections called \\"structures.\\" These structures can be further divided into smaller substructures, and so on. The benefits of structured programming include improved readability, reusability, and maintainability of code. \\n\\nStructured programming is a methodology of programming which includes dividing a larger program into smaller, modular sections called \\"structures.\\" These structures can be further divided into smaller substructures, and so on. The benefits of structured programming include improved readability, reusability, and maintainability of code. \\n\\nStructured programming is a methodology of programming which includes dividing a larger program into smaller, modular sections called \\"structures.\\" These structures can be further divided into smaller substructures, and so on. The benefits of structured programming include improved readability, reusability, and maintainability of code. \\n\\nStructured programming is a methodology of programming which includes dividing a larger program into smaller, modular sections called \\"structures.\\" These structures can be further divided into smaller substructures, and so on. The benefits of structured programming include improved readability, reusability, and maintainability of code. \\n\\nStructured programming is a methodology of programming which includes dividing a larger program into smaller, modular sections called \\"structures.\\" These structures can be further divided into smaller substructures, and so on. The benefits of structured programming include improved readability, reusability, and maintainability of code. \\n\\nStructured programming is a methodology of programming which includes dividing a larger program into smaller, modular sections called \\"structures.\\" These structures can be further divided into smaller substructures, and so on. The benefits of structured programming include improved readability, reusability, and maintainability of code. \\n\\nStructured programming is a methodology of programming which includes dividing a larger program into smaller, modular sections called \\"structures.\\" These structures can be further divided into smaller substructures, and so on. The benefits of structured programming include improved readability, reusability, and maintainability of code. \\n\\nStructured programming is a methodology of programming which includes dividing a larger program into smaller, modular sections called \\"structures.\\" These structures can be further divided into smaller substructures, and so on. The benefits of structured programming include improved readability, reusability, and maintainability of code. \\n\\nStructured programming is a methodology of programming which includes dividing a larger program into smaller, modular sections called \\"structures.\\" These structures can be further divided into smaller substructures, and so on. The benefits of structured programming include improved readability, reusability, and maintainability of code. \\n\\nStructured programming is a methodology of programming which includes dividing a larger program into smaller, modular sections called \\"structures.\\" These structures can be further divided into smaller substructures, and so on. The benefits of structured programming include improved readability, reusability, and maintainability of code. \\n\\nStructured programming is a methodology of programming which includes dividing a larger program into smaller, modular sections called \\"structures.\\" These structures can be further divided into smaller substructures, and so on. The benefits of structured programming include improved readability, reusability, and maintainability of code. \\n\\nStructured programming is a methodology of programming which includes dividing a larger program into smaller, modular sections called \\"structures.\\" These structures can be further divided into smaller substructures, and so on. The benefits of structured programming include improved readability, reusability, and maintainability of code. \\n\\nStructured programming is a methodology of programming which includes dividing a larger program into smaller, modular sections called \\"structures.\\" These structures can be further divided into smaller substructures, and so on. The benefits of structured programming include improved readability, reusability, and maintainability of code. \\n\\nStructured programming is a methodology of programming which includes dividing a larger program into smaller, modular sections called \\"structures.\\" These structures can be further divided into smaller substructures, and so on. The benefits of structured programming include improved readability, reusability, and maintainability of code. \\n\\nStructured programming is a methodology of programming which includes dividing a larger program into smaller, modular sections called \\"structures.\\" These structures can be further divided into smaller substructures, and so on. The benefits of structured programming include improved readability, reusability, and maintainability of code. \\n\\nStructured programming is a methodology of programming which includes dividing a larger program into smaller, modular sections called \\"structures.\\" These structures can be further divided into smaller substructures, and so on. The benefits of structured programming include improved readability, reusability, and maintainability of code. \\n\\nStructured programming is a methodology of programming which includes dividing a larger program into smaller, modular sections called \\"structures.\\" These structures can be further divided into smaller substructures, and so on. The benefits of structured programming include improved readability, reusability, and maintainability of code. \\n\\nStructured programming is a methodology of programming which includes dividing a larger program into smaller, modular sections called \\"structures.\\" These structures can be further divided into smaller substructures, and so on. The benefits of structured programming include improved readability, reusability, and maintainability of code.\\n\\n2. What are the benefits of structured programming?\\n\\nThe benefits of structured programming include improved readability, reusability, and maintainability of code. In addition, structured programming can help make code more efficient and easier to debug.\\n\\n3. What are the disadvantages of structured programming?\\n\\nStructured programming can sometimes result in code that is more complex and difficult to read than nonstructured code. In addition, strict adherence to structured programming methodology can sometimes make it difficult to adapt code to new situations or to take advantage of new programming techniques.\\n\\n4. What are some common programming paradigms?\\n\\nSome common programming paradigms include object oriented programming, functional programming, and logic programming.\\n\\n5. What is the difference between a programming language and a script?\\n\\nA programming language is a formal language that includes a set of instructions for a computer to execute. A script, on the other hand, is a set of instructions for a program to follow. Scripts are often written in a scripting language, which is a simplified programming language designed for writing scripts.\\n\\n6. What is the difference between a high\\n\\nA highlevel programming language is a programming language that is designed to be easy for humans to read and write. Highlevel languages are generally closer to human languages than lowlevel languages, which are designed to be easy for computers to read and write.\\n\\n7. level language and a low\\n\\n", "temperature": 1, "max_tokens": 128, "top_p": 1, "frequency_penalty": 0, "presence_penalty": 0, "n": 1, "stop": ["8.", "7."], "echo": false}' message='Post details'
[2022-11-17 22:41:34,645] DEBUG - https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 518
[2022-11-17 22:41:34,645] INFO - message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1770 request_id=4ac0d2b4d412fc2d52e5c670ce108906 response_code=200
[2022-11-17 22:41:34,646] INFO - message='Request to OpenAI API' method=post path=https://api.openai.com/v1/edits
[2022-11-17 22:41:34,646] DEBUG - api_version=None data='{"model": "text-davinci-edit-001", "input": "A lowlevel language is a programming language that is designed to be easy for computers to read and write. Lowlevel languages are generally closer to machine code than highlevel languages, which are designed to be easy for humans to read and write.", "instruction": "Replace all non-characters with their spoken counterpart. And fix grammar.", "temperature": 0, "top_p": 1}' message='Post details'
[2022-11-17 22:41:38,125] DEBUG - https://api.openai.com:443 "POST /v1/edits HTTP/1.1" 200 398
[2022-11-17 22:41:38,125] INFO - message='OpenAI API response' path=https://api.openai.com/v1/edits processing_ms=3330 request_id=7098514014bc7dc0bf7a14dd55ea5cc7 response_code=200
[2022-11-17 22:41:38,126] INFO - message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
[2022-11-17 22:41:38,126] DEBUG - api_version=None data='{"model": "text-davinci-002", "prompt": "Expand greatly upon the topic of Breaking Down Structured Programming in the context of computer science summarised for a 9th grader:\\n\\n1. What is structured programming?\\n\\nStructured programming is a methodology of programming which includes dividing a larger program into smaller, modular sections called \\"structures.\\" These structures can be further divided into smaller substructures, and so on. The benefits of structured programming include improved readability, reusability, and maintainability of code. \\n\\nStructured programming is a methodology of programming which includes dividing a larger program into smaller, modular sections called \\"structures.\\" These structures can be further divided into smaller substructures, and so on. The benefits of structured programming include improved readability, reusability, and maintainability of code. \\n\\nStructured programming is a methodology of programming which includes dividing a larger program into smaller, modular sections called \\"structures.\\" These structures can be further divided into smaller substructures, and so on. The benefits of structured programming include improved readability, reusability, and maintainability of code. \\n\\nStructured programming is a methodology of programming which includes dividing a larger program into smaller, modular sections called \\"structures.\\" These structures can be further divided into smaller substructures, and so on. The benefits of structured programming include improved readability, reusability, and maintainability of code. \\n\\nStructured programming is a methodology of programming which includes dividing a larger program into smaller, modular sections called \\"structures.\\" These structures can be further divided into smaller substructures, and so on. The benefits of structured programming include improved readability, reusability, and maintainability of code. \\n\\nStructured programming is a methodology of programming which includes dividing a larger program into smaller, modular sections called \\"structures.\\" These structures can be further divided into smaller substructures, and so on. The benefits of structured programming include improved readability, reusability, and maintainability of code. \\n\\nStructured programming is a methodology of programming which includes dividing a larger program into smaller, modular sections called \\"structures.\\" These structures can be further divided into smaller substructures, and so on. The benefits of structured programming include improved readability, reusability, and maintainability of code. \\n\\nStructured programming is a methodology of programming which includes dividing a larger program into smaller, modular sections called \\"structures.\\" These structures can be further divided into smaller substructures, and so on. The benefits of structured programming include improved readability, reusability, and maintainability of code. \\n\\nStructured programming is a methodology of programming which includes dividing a larger program into smaller, modular sections called \\"structures.\\" These structures can be further divided into smaller substructures, and so on. The benefits of structured programming include improved readability, reusability, and maintainability of code. \\n\\nStructured programming is a methodology of programming which includes dividing a larger program into smaller, modular sections called \\"structures.\\" These structures can be further divided into smaller substructures, and so on. The benefits of structured programming include improved readability, reusability, and maintainability of code. \\n\\nStructured programming is a methodology of programming which includes dividing a larger program into smaller, modular sections called \\"structures.\\" These structures can be further divided into smaller substructures, and so on. The benefits of structured programming include improved readability, reusability, and maintainability of code. \\n\\nStructured programming is a methodology of programming which includes dividing a larger program into smaller, modular sections called \\"structures.\\" These structures can be further divided into smaller substructures, and so on. The benefits of structured programming include improved readability, reusability, and maintainability of code. \\n\\nStructured programming is a methodology of programming which includes dividing a larger program into smaller, modular sections called \\"structures.\\" These structures can be further divided into smaller substructures, and so on. The benefits of structured programming include improved readability, reusability, and maintainability of code. \\n\\nStructured programming is a methodology of programming which includes dividing a larger program into smaller, modular sections called \\"structures.\\" These structures can be further divided into smaller substructures, and so on. The benefits of structured programming include improved readability, reusability, and maintainability of code. \\n\\nStructured programming is a methodology of programming which includes dividing a larger program into smaller, modular sections called \\"structures.\\" These structures can be further divided into smaller substructures, and so on. The benefits of structured programming include improved readability, reusability, and maintainability of code. \\n\\nStructured programming is a methodology of programming which includes dividing a larger program into smaller, modular sections called \\"structures.\\" These structures can be further divided into smaller substructures, and so on. The benefits of structured programming include improved readability, reusability, and maintainability of code. \\n\\nStructured programming is a methodology of programming which includes dividing a larger program into smaller, modular sections called \\"structures.\\" These structures can be further divided into smaller substructures, and so on. The benefits of structured programming include improved readability, reusability, and maintainability of code. \\n\\nStructured programming is a methodology of programming which includes dividing a larger program into smaller, modular sections called \\"structures.\\" These structures can be further divided into smaller substructures, and so on. The benefits of structured programming include improved readability, reusability, and maintainability of code. \\n\\nStructured programming is a methodology of programming which includes dividing a larger program into smaller, modular sections called \\"structures.\\" These structures can be further divided into smaller substructures, and so on. The benefits of structured programming include improved readability, reusability, and maintainability of code. \\n\\nStructured programming is a methodology of programming which includes dividing a larger program into smaller, modular sections called \\"structures.\\" These structures can be further divided into smaller substructures, and so on. The benefits of structured programming include improved readability, reusability, and maintainability of code. \\n\\nStructured programming is a methodology of programming which includes dividing a larger program into smaller, modular sections called \\"structures.\\" These structures can be further divided into smaller substructures, and so on. The benefits of structured programming include improved readability, reusability, and maintainability of code. \\n\\nStructured programming is a methodology of programming which includes dividing a larger program into smaller, modular sections called \\"structures.\\" These structures can be further divided into smaller substructures, and so on. The benefits of structured programming include improved readability, reusability, and maintainability of code. \\n\\nStructured programming is a methodology of programming which includes dividing a larger program into smaller, modular sections called \\"structures.\\" These structures can be further divided into smaller substructures, and so on. The benefits of structured programming include improved readability, reusability, and maintainability of code. \\n\\nStructured programming is a methodology of programming which includes dividing a larger program into smaller, modular sections called \\"structures.\\" These structures can be further divided into smaller substructures, and so on. The benefits of structured programming include improved readability, reusability, and maintainability of code. \\n\\nStructured programming is a methodology of programming which includes dividing a larger program into smaller, modular sections called \\"structures.\\" These structures can be further divided into smaller substructures, and so on. The benefits of structured programming include improved readability, reusability, and maintainability of code. \\n\\nStructured programming is a methodology of programming which includes dividing a larger program into smaller, modular sections called \\"structures.\\" These structures can be further divided into smaller substructures, and so on. The benefits of structured programming include improved readability, reusability, and maintainability of code. \\n\\nStructured programming is a methodology of programming which includes dividing a larger program into smaller, modular sections called \\"structures.\\" These structures can be further divided into smaller substructures, and so on. The benefits of structured programming include improved readability, reusability, and maintainability of code. \\n\\nStructured programming is a methodology of programming which includes dividing a larger program into smaller, modular sections called \\"structures.\\" These structures can be further divided into smaller substructures, and so on. The benefits of structured programming include improved readability, reusability, and maintainability of code. \\n\\nStructured programming is a methodology of programming which includes dividing a larger program into smaller, modular sections called \\"structures.\\" These structures can be further divided into smaller substructures, and so on. The benefits of structured programming include improved readability, reusability, and maintainability of code. \\n\\nStructured programming is a methodology of programming which includes dividing a larger program into smaller, modular sections called \\"structures.\\" These structures can be further divided into smaller substructures, and so on. The benefits of structured programming include improved readability, reusability, and maintainability of code.\\n\\n2. What are the benefits of structured programming?\\n\\nThe benefits of structured programming include improved readability, reusability, and maintainability of code. In addition, structured programming can help make code more efficient and easier to debug.\\n\\n3. What are the disadvantages of structured programming?\\n\\nStructured programming can sometimes result in code that is more complex and difficult to read than nonstructured code. In addition, strict adherence to structured programming methodology can sometimes make it difficult to adapt code to new situations or to take advantage of new programming techniques.\\n\\n4. What are some common programming paradigms?\\n\\nSome common programming paradigms include object oriented programming, functional programming, and logic programming.\\n\\n5. What is the difference between a programming language and a script?\\n\\nA programming language is a formal language that includes a set of instructions for a computer to execute. A script, on the other hand, is a set of instructions for a program to follow. Scripts are often written in a scripting language, which is a simplified programming language designed for writing scripts.\\n\\n6. What is the difference between a high\\n\\nA highlevel programming language is a programming language that is designed to be easy for humans to read and write. Highlevel languages are generally closer to human languages than lowlevel languages, which are designed to be easy for computers to read and write.\\n\\n7. level language and a low\\n\\nA lowlevel language is a programming language that is designed to be easy for computers to read and write. Lowlevel languages are generally closer to machine code than highlevel languages, which are designed to be easy for humans to read and write.\\n\\n8. level language?\\n\\n", "temperature": 1, "max_tokens": 128, "top_p": 1, "frequency_penalty": 0, "presence_penalty": 0, "n": 1, "stop": ["9.", "8."], "echo": false}' message='Post details'
[2022-11-17 22:41:40,090] DEBUG - https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 518
[2022-11-17 22:41:40,091] INFO - message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1766 request_id=71e567c84c3e3b47a26a383cdb13af25 response_code=200
[2022-11-17 22:41:40,092] INFO - message='Request to OpenAI API' method=post path=https://api.openai.com/v1/edits
[2022-11-17 22:41:40,092] DEBUG - api_version=None data='{"model": "text-davinci-edit-001", "input": "A highlevel language is a programming language that is designed to be easy for humans to read and write. Highlevel languages are generally closer to human languages than lowlevel languages, which are designed to be easy for computers to read and write.", "instruction": "Replace all non-characters with their spoken counterpart. And fix grammar.", "temperature": 0, "top_p": 1}' message='Post details'
[2022-11-17 22:41:43,271] DEBUG - https://api.openai.com:443 "POST /v1/edits HTTP/1.1" 200 402
[2022-11-17 22:41:43,271] INFO - message='OpenAI API response' path=https://api.openai.com/v1/edits processing_ms=3031 request_id=58a9c310aa5365d5eb0e0ba7740e9f45 response_code=200
[2022-11-17 22:41:43,271] INFO - message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
[2022-11-17 22:41:43,271] DEBUG - api_version=None data='{"model": "text-davinci-002", "prompt": "Expand greatly upon the topic of Breaking Down Structured Programming in the context of computer science summarised for a 9th grader:\\n\\n1. What is structured programming?\\n\\nStructured programming is a methodology of programming which includes dividing a larger program into smaller, modular sections called \\"structures.\\" These structures can be further divided into smaller substructures, and so on. The benefits of structured programming include improved readability, reusability, and maintainability of code. \\n\\nStructured programming is a methodology of programming which includes dividing a larger program into smaller, modular sections called \\"structures.\\" These structures can be further divided into smaller substructures, and so on. The benefits of structured programming include improved readability, reusability, and maintainability of code. \\n\\nStructured programming is a methodology of programming which includes dividing a larger program into smaller, modular sections called \\"structures.\\" These structures can be further divided into smaller substructures, and so on. The benefits of structured programming include improved readability, reusability, and maintainability of code. \\n\\nStructured programming is a methodology of programming which includes dividing a larger program into smaller, modular sections called \\"structures.\\" These structures can be further divided into smaller substructures, and so on. The benefits of structured programming include improved readability, reusability, and maintainability of code. \\n\\nStructured programming is a methodology of programming which includes dividing a larger program into smaller, modular sections called \\"structures.\\" These structures can be further divided into smaller substructures, and so on. The benefits of structured programming include improved readability, reusability, and maintainability of code. \\n\\nStructured programming is a methodology of programming which includes dividing a larger program into smaller, modular sections called \\"structures.\\" These structures can be further divided into smaller substructures, and so on. The benefits of structured programming include improved readability, reusability, and maintainability of code. \\n\\nStructured programming is a methodology of programming which includes dividing a larger program into smaller, modular sections called \\"structures.\\" These structures can be further divided into smaller substructures, and so on. The benefits of structured programming include improved readability, reusability, and maintainability of code. \\n\\nStructured programming is a methodology of programming which includes dividing a larger program into smaller, modular sections called \\"structures.\\" These structures can be further divided into smaller substructures, and so on. The benefits of structured programming include improved readability, reusability, and maintainability of code. \\n\\nStructured programming is a methodology of programming which includes dividing a larger program into smaller, modular sections called \\"structures.\\" These structures can be further divided into smaller substructures, and so on. The benefits of structured programming include improved readability, reusability, and maintainability of code. \\n\\nStructured programming is a methodology of programming which includes dividing a larger program into smaller, modular sections called \\"structures.\\" These structures can be further divided into smaller substructures, and so on. The benefits of structured programming include improved readability, reusability, and maintainability of code. \\n\\nStructured programming is a methodology of programming which includes dividing a larger program into smaller, modular sections called \\"structures.\\" These structures can be further divided into smaller substructures, and so on. The benefits of structured programming include improved readability, reusability, and maintainability of code. \\n\\nStructured programming is a methodology of programming which includes dividing a larger program into smaller, modular sections called \\"structures.\\" These structures can be further divided into smaller substructures, and so on. The benefits of structured programming include improved readability, reusability, and maintainability of code. \\n\\nStructured programming is a methodology of programming which includes dividing a larger program into smaller, modular sections called \\"structures.\\" These structures can be further divided into smaller substructures, and so on. The benefits of structured programming include improved readability, reusability, and maintainability of code. \\n\\nStructured programming is a methodology of programming which includes dividing a larger program into smaller, modular sections called \\"structures.\\" These structures can be further divided into smaller substructures, and so on. The benefits of structured programming include improved readability, reusability, and maintainability of code. \\n\\nStructured programming is a methodology of programming which includes dividing a larger program into smaller, modular sections called \\"structures.\\" These structures can be further divided into smaller substructures, and so on. The benefits of structured programming include improved readability, reusability, and maintainability of code. \\n\\nStructured programming is a methodology of programming which includes dividing a larger program into smaller, modular sections called \\"structures.\\" These structures can be further divided into smaller substructures, and so on. The benefits of structured programming include improved readability, reusability, and maintainability of code. \\n\\nStructured programming is a methodology of programming which includes dividing a larger program into smaller, modular sections called \\"structures.\\" These structures can be further divided into smaller substructures, and so on. The benefits of structured programming include improved readability, reusability, and maintainability of code. \\n\\nStructured programming is a methodology of programming which includes dividing a larger program into smaller, modular sections called \\"structures.\\" These structures can be further divided into smaller substructures, and so on. The benefits of structured programming include improved readability, reusability, and maintainability of code. \\n\\nStructured programming is a methodology of programming which includes dividing a larger program into smaller, modular sections called \\"structures.\\" These structures can be further divided into smaller substructures, and so on. The benefits of structured programming include improved readability, reusability, and maintainability of code. \\n\\nStructured programming is a methodology of programming which includes dividing a larger program into smaller, modular sections called \\"structures.\\" These structures can be further divided into smaller substructures, and so on. The benefits of structured programming include improved readability, reusability, and maintainability of code. \\n\\nStructured programming is a methodology of programming which includes dividing a larger program into smaller, modular sections called \\"structures.\\" These structures can be further divided into smaller substructures, and so on. The benefits of structured programming include improved readability, reusability, and maintainability of code. \\n\\nStructured programming is a methodology of programming which includes dividing a larger program into smaller, modular sections called \\"structures.\\" These structures can be further divided into smaller substructures, and so on. The benefits of structured programming include improved readability, reusability, and maintainability of code. \\n\\nStructured programming is a methodology of programming which includes dividing a larger program into smaller, modular sections called \\"structures.\\" These structures can be further divided into smaller substructures, and so on. The benefits of structured programming include improved readability, reusability, and maintainability of code. \\n\\nStructured programming is a methodology of programming which includes dividing a larger program into smaller, modular sections called \\"structures.\\" These structures can be further divided into smaller substructures, and so on. The benefits of structured programming include improved readability, reusability, and maintainability of code. \\n\\nStructured programming is a methodology of programming which includes dividing a larger program into smaller, modular sections called \\"structures.\\" These structures can be further divided into smaller substructures, and so on. The benefits of structured programming include improved readability, reusability, and maintainability of code. \\n\\nStructured programming is a methodology of programming which includes dividing a larger program into smaller, modular sections called \\"structures.\\" These structures can be further divided into smaller substructures, and so on. The benefits of structured programming include improved readability, reusability, and maintainability of code. \\n\\nStructured programming is a methodology of programming which includes dividing a larger program into smaller, modular sections called \\"structures.\\" These structures can be further divided into smaller substructures, and so on. The benefits of structured programming include improved readability, reusability, and maintainability of code. \\n\\nStructured programming is a methodology of programming which includes dividing a larger program into smaller, modular sections called \\"structures.\\" These structures can be further divided into smaller substructures, and so on. The benefits of structured programming include improved readability, reusability, and maintainability of code. \\n\\nStructured programming is a methodology of programming which includes dividing a larger program into smaller, modular sections called \\"structures.\\" These structures can be further divided into smaller substructures, and so on. The benefits of structured programming include improved readability, reusability, and maintainability of code. \\n\\nStructured programming is a methodology of programming which includes dividing a larger program into smaller, modular sections called \\"structures.\\" These structures can be further divided into smaller substructures, and so on. The benefits of structured programming include improved readability, reusability, and maintainability of code.\\n\\n2. What are the benefits of structured programming?\\n\\nThe benefits of structured programming include improved readability, reusability, and maintainability of code. In addition, structured programming can help make code more efficient and easier to debug.\\n\\n3. What are the disadvantages of structured programming?\\n\\nStructured programming can sometimes result in code that is more complex and difficult to read than nonstructured code. In addition, strict adherence to structured programming methodology can sometimes make it difficult to adapt code to new situations or to take advantage of new programming techniques.\\n\\n4. What are some common programming paradigms?\\n\\nSome common programming paradigms include object oriented programming, functional programming, and logic programming.\\n\\n5. What is the difference between a programming language and a script?\\n\\nA programming language is a formal language that includes a set of instructions for a computer to execute. A script, on the other hand, is a set of instructions for a program to follow. Scripts are often written in a scripting language, which is a simplified programming language designed for writing scripts.\\n\\n6. What is the difference between a high\\n\\nA highlevel programming language is a programming language that is designed to be easy for humans to read and write. Highlevel languages are generally closer to human languages than lowlevel languages, which are designed to be easy for computers to read and write.\\n\\n7. level language and a low\\n\\nA lowlevel language is a programming language that is designed to be easy for computers to read and write. Lowlevel languages are generally closer to machine code than highlevel languages, which are designed to be easy for humans to read and write.\\n\\n8. level language?\\n\\nA highlevel language is a programming language that is designed to be easy for humans to read and write. Highlevel languages are generally closer to human languages than lowlevel languages, which are designed to be easy for computers to read and write.\\n\\n9. What is a compiler?\\n\\n", "temperature": 1, "max_tokens": 128, "top_p": 1, "frequency_penalty": 0, "presence_penalty": 0, "n": 1, "stop": ["10.", "9."], "echo": false}' message='Post details'
[2022-11-17 22:41:45,077] DEBUG - https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 419
[2022-11-17 22:41:45,078] INFO - message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1630 request_id=0b4bba53b594489f73d865728c7f47e5 response_code=200
[2022-11-17 22:41:45,078] INFO - message='Request to OpenAI API' method=post path=https://api.openai.com/v1/edits
[2022-11-17 22:41:45,078] DEBUG - api_version=None data='{"model": "text-davinci-edit-001", "input": "A compiler is a computer program that translates a program written in one language (the source language) into another language (the target language).", "instruction": "Replace all non-characters with their spoken counterpart. And fix grammar.", "temperature": 0, "top_p": 1}' message='Post details'
[2022-11-17 22:41:47,524] DEBUG - https://api.openai.com:443 "POST /v1/edits HTTP/1.1" 200 294
[2022-11-17 22:41:47,525] INFO - message='OpenAI API response' path=https://api.openai.com/v1/edits processing_ms=2292 request_id=36577915783faaf9bbfedf6079636ec2 response_code=200
[2022-11-17 22:41:47,525] INFO - message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
[2022-11-17 22:41:47,526] DEBUG - api_version=None data='{"model": "text-davinci-002", "prompt": "Expand greatly upon the topic of Breaking Down Structured Programming in the context of computer science summarised for a 9th grader:\\n\\n1. What is structured programming?\\n\\nStructured programming is a methodology of programming which includes dividing a larger program into smaller, modular sections called \\"structures.\\" These structures can be further divided into smaller substructures, and so on. The benefits of structured programming include improved readability, reusability, and maintainability of code. \\n\\nStructured programming is a methodology of programming which includes dividing a larger program into smaller, modular sections called \\"structures.\\" These structures can be further divided into smaller substructures, and so on. The benefits of structured programming include improved readability, reusability, and maintainability of code. \\n\\nStructured programming is a methodology of programming which includes dividing a larger program into smaller, modular sections called \\"structures.\\" These structures can be further divided into smaller substructures, and so on. The benefits of structured programming include improved readability, reusability, and maintainability of code. \\n\\nStructured programming is a methodology of programming which includes dividing a larger program into smaller, modular sections called \\"structures.\\" These structures can be further divided into smaller substructures, and so on. The benefits of structured programming include improved readability, reusability, and maintainability of code. \\n\\nStructured programming is a methodology of programming which includes dividing a larger program into smaller, modular sections called \\"structures.\\" These structures can be further divided into smaller substructures, and so on. The benefits of structured programming include improved readability, reusability, and maintainability of code. \\n\\nStructured programming is a methodology of programming which includes dividing a larger program into smaller, modular sections called \\"structures.\\" These structures can be further divided into smaller substructures, and so on. The benefits of structured programming include improved readability, reusability, and maintainability of code. \\n\\nStructured programming is a methodology of programming which includes dividing a larger program into smaller, modular sections called \\"structures.\\" These structures can be further divided into smaller substructures, and so on. The benefits of structured programming include improved readability, reusability, and maintainability of code. \\n\\nStructured programming is a methodology of programming which includes dividing a larger program into smaller, modular sections called \\"structures.\\" These structures can be further divided into smaller substructures, and so on. The benefits of structured programming include improved readability, reusability, and maintainability of code. \\n\\nStructured programming is a methodology of programming which includes dividing a larger program into smaller, modular sections called \\"structures.\\" These structures can be further divided into smaller substructures, and so on. The benefits of structured programming include improved readability, reusability, and maintainability of code. \\n\\nStructured programming is a methodology of programming which includes dividing a larger program into smaller, modular sections called \\"structures.\\" These structures can be further divided into smaller substructures, and so on. The benefits of structured programming include improved readability, reusability, and maintainability of code. \\n\\nStructured programming is a methodology of programming which includes dividing a larger program into smaller, modular sections called \\"structures.\\" These structures can be further divided into smaller substructures, and so on. The benefits of structured programming include improved readability, reusability, and maintainability of code. \\n\\nStructured programming is a methodology of programming which includes dividing a larger program into smaller, modular sections called \\"structures.\\" These structures can be further divided into smaller substructures, and so on. The benefits of structured programming include improved readability, reusability, and maintainability of code. \\n\\nStructured programming is a methodology of programming which includes dividing a larger program into smaller, modular sections called \\"structures.\\" These structures can be further divided into smaller substructures, and so on. The benefits of structured programming include improved readability, reusability, and maintainability of code. \\n\\nStructured programming is a methodology of programming which includes dividing a larger program into smaller, modular sections called \\"structures.\\" These structures can be further divided into smaller substructures, and so on. The benefits of structured programming include improved readability, reusability, and maintainability of code. \\n\\nStructured programming is a methodology of programming which includes dividing a larger program into smaller, modular sections called \\"structures.\\" These structures can be further divided into smaller substructures, and so on. The benefits of structured programming include improved readability, reusability, and maintainability of code. \\n\\nStructured programming is a methodology of programming which includes dividing a larger program into smaller, modular sections called \\"structures.\\" These structures can be further divided into smaller substructures, and so on. The benefits of structured programming include improved readability, reusability, and maintainability of code. \\n\\nStructured programming is a methodology of programming which includes dividing a larger program into smaller, modular sections called \\"structures.\\" These structures can be further divided into smaller substructures, and so on. The benefits of structured programming include improved readability, reusability, and maintainability of code. \\n\\nStructured programming is a methodology of programming which includes dividing a larger program into smaller, modular sections called \\"structures.\\" These structures can be further divided into smaller substructures, and so on. The benefits of structured programming include improved readability, reusability, and maintainability of code. \\n\\nStructured programming is a methodology of programming which includes dividing a larger program into smaller, modular sections called \\"structures.\\" These structures can be further divided into smaller substructures, and so on. The benefits of structured programming include improved readability, reusability, and maintainability of code. \\n\\nStructured programming is a methodology of programming which includes dividing a larger program into smaller, modular sections called \\"structures.\\" These structures can be further divided into smaller substructures, and so on. The benefits of structured programming include improved readability, reusability, and maintainability of code. \\n\\nStructured programming is a methodology of programming which includes dividing a larger program into smaller, modular sections called \\"structures.\\" These structures can be further divided into smaller substructures, and so on. The benefits of structured programming include improved readability, reusability, and maintainability of code. \\n\\nStructured programming is a methodology of programming which includes dividing a larger program into smaller, modular sections called \\"structures.\\" These structures can be further divided into smaller substructures, and so on. The benefits of structured programming include improved readability, reusability, and maintainability of code. \\n\\nStructured programming is a methodology of programming which includes dividing a larger program into smaller, modular sections called \\"structures.\\" These structures can be further divided into smaller substructures, and so on. The benefits of structured programming include improved readability, reusability, and maintainability of code. \\n\\nStructured programming is a methodology of programming which includes dividing a larger program into smaller, modular sections called \\"structures.\\" These structures can be further divided into smaller substructures, and so on. The benefits of structured programming include improved readability, reusability, and maintainability of code. \\n\\nStructured programming is a methodology of programming which includes dividing a larger program into smaller, modular sections called \\"structures.\\" These structures can be further divided into smaller substructures, and so on. The benefits of structured programming include improved readability, reusability, and maintainability of code. \\n\\nStructured programming is a methodology of programming which includes dividing a larger program into smaller, modular sections called \\"structures.\\" These structures can be further divided into smaller substructures, and so on. The benefits of structured programming include improved readability, reusability, and maintainability of code. \\n\\nStructured programming is a methodology of programming which includes dividing a larger program into smaller, modular sections called \\"structures.\\" These structures can be further divided into smaller substructures, and so on. The benefits of structured programming include improved readability, reusability, and maintainability of code. \\n\\nStructured programming is a methodology of programming which includes dividing a larger program into smaller, modular sections called \\"structures.\\" These structures can be further divided into smaller substructures, and so on. The benefits of structured programming include improved readability, reusability, and maintainability of code. \\n\\nStructured programming is a methodology of programming which includes dividing a larger program into smaller, modular sections called \\"structures.\\" These structures can be further divided into smaller substructures, and so on. The benefits of structured programming include improved readability, reusability, and maintainability of code. \\n\\nStructured programming is a methodology of programming which includes dividing a larger program into smaller, modular sections called \\"structures.\\" These structures can be further divided into smaller substructures, and so on. The benefits of structured programming include improved readability, reusability, and maintainability of code.\\n\\n2. What are the benefits of structured programming?\\n\\nThe benefits of structured programming include improved readability, reusability, and maintainability of code. In addition, structured programming can help make code more efficient and easier to debug.\\n\\n3. What are the disadvantages of structured programming?\\n\\nStructured programming can sometimes result in code that is more complex and difficult to read than nonstructured code. In addition, strict adherence to structured programming methodology can sometimes make it difficult to adapt code to new situations or to take advantage of new programming techniques.\\n\\n4. What are some common programming paradigms?\\n\\nSome common programming paradigms include object oriented programming, functional programming, and logic programming.\\n\\n5. What is the difference between a programming language and a script?\\n\\nA programming language is a formal language that includes a set of instructions for a computer to execute. A script, on the other hand, is a set of instructions for a program to follow. Scripts are often written in a scripting language, which is a simplified programming language designed for writing scripts.\\n\\n6. What is the difference between a high\\n\\nA highlevel programming language is a programming language that is designed to be easy for humans to read and write. Highlevel languages are generally closer to human languages than lowlevel languages, which are designed to be easy for computers to read and write.\\n\\n7. level language and a low\\n\\nA lowlevel language is a programming language that is designed to be easy for computers to read and write. Lowlevel languages are generally closer to machine code than highlevel languages, which are designed to be easy for humans to read and write.\\n\\n8. level language?\\n\\nA highlevel language is a programming language that is designed to be easy for humans to read and write. Highlevel languages are generally closer to human languages than lowlevel languages, which are designed to be easy for computers to read and write.\\n\\n9. What is a compiler?\\n\\nA compiler is a computer program that translates a program written in one language (the source language) into another language (the target language)\\n\\n10. What is an interpreter?\\n\\n", "temperature": 1, "max_tokens": 128, "top_p": 1, "frequency_penalty": 0, "presence_penalty": 0, "n": 1, "stop": ["11.", "10."], "echo": false}' message='Post details'
[2022-11-17 22:41:49,887] DEBUG - https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 440
[2022-11-17 22:41:49,887] INFO - message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=2188 request_id=341284fd4b3ad02d3e3e3598809d32cc response_code=200
[2022-11-17 22:41:49,887] INFO - message='Request to OpenAI API' method=post path=https://api.openai.com/v1/edits
[2022-11-17 22:41:49,888] DEBUG - api_version=None data='{"model": "text-davinci-edit-001", "input": "An interpreter is a computer program that executes a program written in a language line by line, instead of translating the whole program into another language all at once.", "instruction": "Replace all non-characters with their spoken counterpart. And fix grammar.", "temperature": 0, "top_p": 1}' message='Post details'
[2022-11-17 22:41:52,286] DEBUG - https://api.openai.com:443 "POST /v1/edits HTTP/1.1" 200 338
[2022-11-17 22:41:52,286] INFO - message='OpenAI API response' path=https://api.openai.com/v1/edits processing_ms=2253 request_id=778e990391fd9eaf3b347ca78dcf174e response_code=200
[2022-11-17 22:41:52,287] INFO - message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
[2022-11-17 22:41:52,287] DEBUG - api_version=None data='{"model": "text-davinci-002", "prompt": "Expand greatly upon the topic of Breaking Down Structured Programming in the context of computer science summarised for a 9th grader:\\n\\n1. What is structured programming?\\n\\nStructured programming is a methodology of programming which includes dividing a larger program into smaller, modular sections called \\"structures.\\" These structures can be further divided into smaller substructures, and so on. The benefits of structured programming include improved readability, reusability, and maintainability of code. \\n\\nStructured programming is a methodology of programming which includes dividing a larger program into smaller, modular sections called \\"structures.\\" These structures can be further divided into smaller substructures, and so on. The benefits of structured programming include improved readability, reusability, and maintainability of code. \\n\\nStructured programming is a methodology of programming which includes dividing a larger program into smaller, modular sections called \\"structures.\\" These structures can be further divided into smaller substructures, and so on. The benefits of structured programming include improved readability, reusability, and maintainability of code. \\n\\nStructured programming is a methodology of programming which includes dividing a larger program into smaller, modular sections called \\"structures.\\" These structures can be further divided into smaller substructures, and so on. The benefits of structured programming include improved readability, reusability, and maintainability of code. \\n\\nStructured programming is a methodology of programming which includes dividing a larger program into smaller, modular sections called \\"structures.\\" These structures can be further divided into smaller substructures, and so on. The benefits of structured programming include improved readability, reusability, and maintainability of code. \\n\\nStructured programming is a methodology of programming which includes dividing a larger program into smaller, modular sections called \\"structures.\\" These structures can be further divided into smaller substructures, and so on. The benefits of structured programming include improved readability, reusability, and maintainability of code. \\n\\nStructured programming is a methodology of programming which includes dividing a larger program into smaller, modular sections called \\"structures.\\" These structures can be further divided into smaller substructures, and so on. The benefits of structured programming include improved readability, reusability, and maintainability of code. \\n\\nStructured programming is a methodology of programming which includes dividing a larger program into smaller, modular sections called \\"structures.\\" These structures can be further divided into smaller substructures, and so on. The benefits of structured programming include improved readability, reusability, and maintainability of code. \\n\\nStructured programming is a methodology of programming which includes dividing a larger program into smaller, modular sections called \\"structures.\\" These structures can be further divided into smaller substructures, and so on. The benefits of structured programming include improved readability, reusability, and maintainability of code. \\n\\nStructured programming is a methodology of programming which includes dividing a larger program into smaller, modular sections called \\"structures.\\" These structures can be further divided into smaller substructures, and so on. The benefits of structured programming include improved readability, reusability, and maintainability of code. \\n\\nStructured programming is a methodology of programming which includes dividing a larger program into smaller, modular sections called \\"structures.\\" These structures can be further divided into smaller substructures, and so on. The benefits of structured programming include improved readability, reusability, and maintainability of code. \\n\\nStructured programming is a methodology of programming which includes dividing a larger program into smaller, modular sections called \\"structures.\\" These structures can be further divided into smaller substructures, and so on. The benefits of structured programming include improved readability, reusability, and maintainability of code. \\n\\nStructured programming is a methodology of programming which includes dividing a larger program into smaller, modular sections called \\"structures.\\" These structures can be further divided into smaller substructures, and so on. The benefits of structured programming include improved readability, reusability, and maintainability of code. \\n\\nStructured programming is a methodology of programming which includes dividing a larger program into smaller, modular sections called \\"structures.\\" These structures can be further divided into smaller substructures, and so on. The benefits of structured programming include improved readability, reusability, and maintainability of code. \\n\\nStructured programming is a methodology of programming which includes dividing a larger program into smaller, modular sections called \\"structures.\\" These structures can be further divided into smaller substructures, and so on. The benefits of structured programming include improved readability, reusability, and maintainability of code. \\n\\nStructured programming is a methodology of programming which includes dividing a larger program into smaller, modular sections called \\"structures.\\" These structures can be further divided into smaller substructures, and so on. The benefits of structured programming include improved readability, reusability, and maintainability of code. \\n\\nStructured programming is a methodology of programming which includes dividing a larger program into smaller, modular sections called \\"structures.\\" These structures can be further divided into smaller substructures, and so on. The benefits of structured programming include improved readability, reusability, and maintainability of code. \\n\\nStructured programming is a methodology of programming which includes dividing a larger program into smaller, modular sections called \\"structures.\\" These structures can be further divided into smaller substructures, and so on. The benefits of structured programming include improved readability, reusability, and maintainability of code. \\n\\nStructured programming is a methodology of programming which includes dividing a larger program into smaller, modular sections called \\"structures.\\" These structures can be further divided into smaller substructures, and so on. The benefits of structured programming include improved readability, reusability, and maintainability of code. \\n\\nStructured programming is a methodology of programming which includes dividing a larger program into smaller, modular sections called \\"structures.\\" These structures can be further divided into smaller substructures, and so on. The benefits of structured programming include improved readability, reusability, and maintainability of code. \\n\\nStructured programming is a methodology of programming which includes dividing a larger program into smaller, modular sections called \\"structures.\\" These structures can be further divided into smaller substructures, and so on. The benefits of structured programming include improved readability, reusability, and maintainability of code. \\n\\nStructured programming is a methodology of programming which includes dividing a larger program into smaller, modular sections called \\"structures.\\" These structures can be further divided into smaller substructures, and so on. The benefits of structured programming include improved readability, reusability, and maintainability of code. \\n\\nStructured programming is a methodology of programming which includes dividing a larger program into smaller, modular sections called \\"structures.\\" These structures can be further divided into smaller substructures, and so on. The benefits of structured programming include improved readability, reusability, and maintainability of code. \\n\\nStructured programming is a methodology of programming which includes dividing a larger program into smaller, modular sections called \\"structures.\\" These structures can be further divided into smaller substructures, and so on. The benefits of structured programming include improved readability, reusability, and maintainability of code. \\n\\nStructured programming is a methodology of programming which includes dividing a larger program into smaller, modular sections called \\"structures.\\" These structures can be further divided into smaller substructures, and so on. The benefits of structured programming include improved readability, reusability, and maintainability of code. \\n\\nStructured programming is a methodology of programming which includes dividing a larger program into smaller, modular sections called \\"structures.\\" These structures can be further divided into smaller substructures, and so on. The benefits of structured programming include improved readability, reusability, and maintainability of code. \\n\\nStructured programming is a methodology of programming which includes dividing a larger program into smaller, modular sections called \\"structures.\\" These structures can be further divided into smaller substructures, and so on. The benefits of structured programming include improved readability, reusability, and maintainability of code. \\n\\nStructured programming is a methodology of programming which includes dividing a larger program into smaller, modular sections called \\"structures.\\" These structures can be further divided into smaller substructures, and so on. The benefits of structured programming include improved readability, reusability, and maintainability of code. \\n\\nStructured programming is a methodology of programming which includes dividing a larger program into smaller, modular sections called \\"structures.\\" These structures can be further divided into smaller substructures, and so on. The benefits of structured programming include improved readability, reusability, and maintainability of code. \\n\\nStructured programming is a methodology of programming which includes dividing a larger program into smaller, modular sections called \\"structures.\\" These structures can be further divided into smaller substructures, and so on. The benefits of structured programming include improved readability, reusability, and maintainability of code.\\n\\n2. What are the benefits of structured programming?\\n\\nThe benefits of structured programming include improved readability, reusability, and maintainability of code. In addition, structured programming can help make code more efficient and easier to debug.\\n\\n3. What are the disadvantages of structured programming?\\n\\nStructured programming can sometimes result in code that is more complex and difficult to read than nonstructured code. In addition, strict adherence to structured programming methodology can sometimes make it difficult to adapt code to new situations or to take advantage of new programming techniques.\\n\\n4. What are some common programming paradigms?\\n\\nSome common programming paradigms include object oriented programming, functional programming, and logic programming.\\n\\n5. What is the difference between a programming language and a script?\\n\\nA programming language is a formal language that includes a set of instructions for a computer to execute. A script, on the other hand, is a set of instructions for a program to follow. Scripts are often written in a scripting language, which is a simplified programming language designed for writing scripts.\\n\\n6. What is the difference between a high\\n\\nA highlevel programming language is a programming language that is designed to be easy for humans to read and write. Highlevel languages are generally closer to human languages than lowlevel languages, which are designed to be easy for computers to read and write.\\n\\n7. level language and a low\\n\\nA lowlevel language is a programming language that is designed to be easy for computers to read and write. Lowlevel languages are generally closer to machine code than highlevel languages, which are designed to be easy for humans to read and write.\\n\\n8. level language?\\n\\nA highlevel language is a programming language that is designed to be easy for humans to read and write. Highlevel languages are generally closer to human languages than lowlevel languages, which are designed to be easy for computers to read and write.\\n\\n9. What is a compiler?\\n\\nA compiler is a computer program that translates a program written in one language (the source language) into another language (the target language)\\n\\n10. What is an interpreter?\\n\\nAn interpreter is a computer program that executes a program written in a language line by line, instead of translating the whole program into another language all at once, as a compiler does.\\n\\n11. What is a virtual machine?\\n\\n", "temperature": 1, "max_tokens": 128, "top_p": 1, "frequency_penalty": 0, "presence_penalty": 0, "n": 1, "stop": ["12.", "11."], "echo": false}' message='Post details'
[2022-11-17 22:41:53,586] DEBUG - https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 449
[2022-11-17 22:41:53,586] INFO - message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1122 request_id=7217f35ec4f88467f5e1be483137bf4e response_code=200
[2022-11-17 22:41:53,587] INFO - message='Request to OpenAI API' method=post path=https://api.openai.com/v1/edits
[2022-11-17 22:41:53,587] DEBUG - api_version=None data='{"model": "text-davinci-edit-001", "input": "A virtual machine is a software program that creates an environment that behaves like a physical computer. This environment can run on a physical computer, or on a virtual server.", "instruction": "Replace all non-characters with their spoken counterpart. And fix grammar.", "temperature": 0, "top_p": 1}' message='Post details'
[2022-11-17 22:41:53,703] DEBUG - https://api.openai.com:443 "POST /v1/edits HTTP/1.1" 429 347
[2022-11-17 22:41:53,703] INFO - message='OpenAI API response' path=https://api.openai.com/v1/edits processing_ms=None request_id=f3d64027cb4c52e898ad97df0334d7b1 response_code=429
[2022-11-17 22:41:53,703] INFO - error_code=None error_message='Rate limit reached for default-text-davinci-edit-001 in organization org-xTzTe98H3pdIt4U4fWax4sr2 on requests per min. Limit: 20.000000 / min. Current: 24.000000 / min. Contact support@openai.com if you continue to have issues.' error_param=None error_type=requests message='OpenAI API error received' stream_error=False
[2022-11-17 22:41:56,762] INFO - message='Request to OpenAI API' method=post path=https://api.openai.com/v1/edits
[2022-11-17 22:41:56,763] DEBUG - api_version=None data='{"model": "text-davinci-edit-001", "input": "A virtual machine is a software program that creates an environment that behaves like a physical computer. This environment can run on a physical computer, or on a virtual server.", "instruction": "Replace all non-characters with their spoken counterpart. And fix grammar.", "temperature": 0, "top_p": 1}' message='Post details'
[2022-11-17 22:41:58,805] DEBUG - https://api.openai.com:443 "POST /v1/edits HTTP/1.1" 200 324
[2022-11-17 22:41:58,806] INFO - message='OpenAI API response' path=https://api.openai.com/v1/edits processing_ms=1895 request_id=d8ee1fe12df49af112cae336e338ced8 response_code=200
[2022-11-17 22:41:58,806] INFO - message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
[2022-11-17 22:41:58,806] DEBUG - api_version=None data='{"model": "text-davinci-002", "prompt": "Expand greatly upon the topic of Breaking Down Structured Programming in the context of computer science summarised for a 9th grader:\\n\\n1. What is structured programming?\\n\\nStructured programming is a methodology of programming which includes dividing a larger program into smaller, modular sections called \\"structures.\\" These structures can be further divided into smaller substructures, and so on. The benefits of structured programming include improved readability, reusability, and maintainability of code. \\n\\nStructured programming is a methodology of programming which includes dividing a larger program into smaller, modular sections called \\"structures.\\" These structures can be further divided into smaller substructures, and so on. The benefits of structured programming include improved readability, reusability, and maintainability of code. \\n\\nStructured programming is a methodology of programming which includes dividing a larger program into smaller, modular sections called \\"structures.\\" These structures can be further divided into smaller substructures, and so on. The benefits of structured programming include improved readability, reusability, and maintainability of code. \\n\\nStructured programming is a methodology of programming which includes dividing a larger program into smaller, modular sections called \\"structures.\\" These structures can be further divided into smaller substructures, and so on. The benefits of structured programming include improved readability, reusability, and maintainability of code. \\n\\nStructured programming is a methodology of programming which includes dividing a larger program into smaller, modular sections called \\"structures.\\" These structures can be further divided into smaller substructures, and so on. The benefits of structured programming include improved readability, reusability, and maintainability of code. \\n\\nStructured programming is a methodology of programming which includes dividing a larger program into smaller, modular sections called \\"structures.\\" These structures can be further divided into smaller substructures, and so on. The benefits of structured programming include improved readability, reusability, and maintainability of code. \\n\\nStructured programming is a methodology of programming which includes dividing a larger program into smaller, modular sections called \\"structures.\\" These structures can be further divided into smaller substructures, and so on. The benefits of structured programming include improved readability, reusability, and maintainability of code. \\n\\nStructured programming is a methodology of programming which includes dividing a larger program into smaller, modular sections called \\"structures.\\" These structures can be further divided into smaller substructures, and so on. The benefits of structured programming include improved readability, reusability, and maintainability of code. \\n\\nStructured programming is a methodology of programming which includes dividing a larger program into smaller, modular sections called \\"structures.\\" These structures can be further divided into smaller substructures, and so on. The benefits of structured programming include improved readability, reusability, and maintainability of code. \\n\\nStructured programming is a methodology of programming which includes dividing a larger program into smaller, modular sections called \\"structures.\\" These structures can be further divided into smaller substructures, and so on. The benefits of structured programming include improved readability, reusability, and maintainability of code. \\n\\nStructured programming is a methodology of programming which includes dividing a larger program into smaller, modular sections called \\"structures.\\" These structures can be further divided into smaller substructures, and so on. The benefits of structured programming include improved readability, reusability, and maintainability of code. \\n\\nStructured programming is a methodology of programming which includes dividing a larger program into smaller, modular sections called \\"structures.\\" These structures can be further divided into smaller substructures, and so on. The benefits of structured programming include improved readability, reusability, and maintainability of code. \\n\\nStructured programming is a methodology of programming which includes dividing a larger program into smaller, modular sections called \\"structures.\\" These structures can be further divided into smaller substructures, and so on. The benefits of structured programming include improved readability, reusability, and maintainability of code. \\n\\nStructured programming is a methodology of programming which includes dividing a larger program into smaller, modular sections called \\"structures.\\" These structures can be further divided into smaller substructures, and so on. The benefits of structured programming include improved readability, reusability, and maintainability of code. \\n\\nStructured programming is a methodology of programming which includes dividing a larger program into smaller, modular sections called \\"structures.\\" These structures can be further divided into smaller substructures, and so on. The benefits of structured programming include improved readability, reusability, and maintainability of code. \\n\\nStructured programming is a methodology of programming which includes dividing a larger program into smaller, modular sections called \\"structures.\\" These structures can be further divided into smaller substructures, and so on. The benefits of structured programming include improved readability, reusability, and maintainability of code. \\n\\nStructured programming is a methodology of programming which includes dividing a larger program into smaller, modular sections called \\"structures.\\" These structures can be further divided into smaller substructures, and so on. The benefits of structured programming include improved readability, reusability, and maintainability of code. \\n\\nStructured programming is a methodology of programming which includes dividing a larger program into smaller, modular sections called \\"structures.\\" These structures can be further divided into smaller substructures, and so on. The benefits of structured programming include improved readability, reusability, and maintainability of code. \\n\\nStructured programming is a methodology of programming which includes dividing a larger program into smaller, modular sections called \\"structures.\\" These structures can be further divided into smaller substructures, and so on. The benefits of structured programming include improved readability, reusability, and maintainability of code. \\n\\nStructured programming is a methodology of programming which includes dividing a larger program into smaller, modular sections called \\"structures.\\" These structures can be further divided into smaller substructures, and so on. The benefits of structured programming include improved readability, reusability, and maintainability of code. \\n\\nStructured programming is a methodology of programming which includes dividing a larger program into smaller, modular sections called \\"structures.\\" These structures can be further divided into smaller substructures, and so on. The benefits of structured programming include improved readability, reusability, and maintainability of code. \\n\\nStructured programming is a methodology of programming which includes dividing a larger program into smaller, modular sections called \\"structures.\\" These structures can be further divided into smaller substructures, and so on. The benefits of structured programming include improved readability, reusability, and maintainability of code. \\n\\nStructured programming is a methodology of programming which includes dividing a larger program into smaller, modular sections called \\"structures.\\" These structures can be further divided into smaller substructures, and so on. The benefits of structured programming include improved readability, reusability, and maintainability of code. \\n\\nStructured programming is a methodology of programming which includes dividing a larger program into smaller, modular sections called \\"structures.\\" These structures can be further divided into smaller substructures, and so on. The benefits of structured programming include improved readability, reusability, and maintainability of code. \\n\\nStructured programming is a methodology of programming which includes dividing a larger program into smaller, modular sections called \\"structures.\\" These structures can be further divided into smaller substructures, and so on. The benefits of structured programming include improved readability, reusability, and maintainability of code. \\n\\nStructured programming is a methodology of programming which includes dividing a larger program into smaller, modular sections called \\"structures.\\" These structures can be further divided into smaller substructures, and so on. The benefits of structured programming include improved readability, reusability, and maintainability of code. \\n\\nStructured programming is a methodology of programming which includes dividing a larger program into smaller, modular sections called \\"structures.\\" These structures can be further divided into smaller substructures, and so on. The benefits of structured programming include improved readability, reusability, and maintainability of code. \\n\\nStructured programming is a methodology of programming which includes dividing a larger program into smaller, modular sections called \\"structures.\\" These structures can be further divided into smaller substructures, and so on. The benefits of structured programming include improved readability, reusability, and maintainability of code. \\n\\nStructured programming is a methodology of programming which includes dividing a larger program into smaller, modular sections called \\"structures.\\" These structures can be further divided into smaller substructures, and so on. The benefits of structured programming include improved readability, reusability, and maintainability of code. \\n\\nStructured programming is a methodology of programming which includes dividing a larger program into smaller, modular sections called \\"structures.\\" These structures can be further divided into smaller substructures, and so on. The benefits of structured programming include improved readability, reusability, and maintainability of code.\\n\\n2. What are the benefits of structured programming?\\n\\nThe benefits of structured programming include improved readability, reusability, and maintainability of code. In addition, structured programming can help make code more efficient and easier to debug.\\n\\n3. What are the disadvantages of structured programming?\\n\\nStructured programming can sometimes result in code that is more complex and difficult to read than nonstructured code. In addition, strict adherence to structured programming methodology can sometimes make it difficult to adapt code to new situations or to take advantage of new programming techniques.\\n\\n4. What are some common programming paradigms?\\n\\nSome common programming paradigms include object oriented programming, functional programming, and logic programming.\\n\\n5. What is the difference between a programming language and a script?\\n\\nA programming language is a formal language that includes a set of instructions for a computer to execute. A script, on the other hand, is a set of instructions for a program to follow. Scripts are often written in a scripting language, which is a simplified programming language designed for writing scripts.\\n\\n6. What is the difference between a high\\n\\nA highlevel programming language is a programming language that is designed to be easy for humans to read and write. Highlevel languages are generally closer to human languages than lowlevel languages, which are designed to be easy for computers to read and write.\\n\\n7. level language and a low\\n\\nA lowlevel language is a programming language that is designed to be easy for computers to read and write. Lowlevel languages are generally closer to machine code than highlevel languages, which are designed to be easy for humans to read and write.\\n\\n8. level language?\\n\\nA highlevel language is a programming language that is designed to be easy for humans to read and write. Highlevel languages are generally closer to human languages than lowlevel languages, which are designed to be easy for computers to read and write.\\n\\n9. What is a compiler?\\n\\nA compiler is a computer program that translates a program written in one language (the source language) into another language (the target language)\\n\\n10. What is an interpreter?\\n\\nAn interpreter is a computer program that executes a program written in a language line by line, instead of translating the whole program into another language all at once, as a compiler does.\\n\\n11. What is a virtual machine?\\n\\nA virtual machine is a software program that creates an environment that behaves like a physical computer. This environment can run on a physical computer or on a virtual server.\\n\\n12. What is an assembler?\\n\\n", "temperature": 1, "max_tokens": 128, "top_p": 1, "frequency_penalty": 0, "presence_penalty": 0, "n": 1, "stop": ["13.", "12."], "echo": false}' message='Post details'
[2022-11-17 22:42:00,188] DEBUG - https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 378
[2022-11-17 22:42:00,189] INFO - message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1130 request_id=66961fa2f21e498445f7b99cd0136682 response_code=200
[2022-11-17 22:42:00,189] INFO - message='Request to OpenAI API' method=post path=https://api.openai.com/v1/edits
[2022-11-17 22:42:00,189] DEBUG - api_version=None data='{"model": "text-davinci-edit-001", "input": "An assembler is a program that converts assembly language into machine code, which can be run on a computer.", "instruction": "Replace all non-characters with their spoken counterpart. And fix grammar.", "temperature": 0, "top_p": 1}' message='Post details'
[2022-11-17 22:42:00,305] DEBUG - https://api.openai.com:443 "POST /v1/edits HTTP/1.1" 429 347
[2022-11-17 22:42:00,305] INFO - message='OpenAI API response' path=https://api.openai.com/v1/edits processing_ms=None request_id=ec71e0b5a4144cf47dc3fd898f07d740 response_code=429
[2022-11-17 22:42:00,305] INFO - error_code=None error_message='Rate limit reached for default-text-davinci-edit-001 in organization org-xTzTe98H3pdIt4U4fWax4sr2 on requests per min. Limit: 20.000000 / min. Current: 30.000000 / min. Contact support@openai.com if you continue to have issues.' error_param=None error_type=requests message='OpenAI API error received' stream_error=False
[2022-11-17 22:42:03,318] INFO - message='Request to OpenAI API' method=post path=https://api.openai.com/v1/edits
[2022-11-17 22:42:03,318] DEBUG - api_version=None data='{"model": "text-davinci-edit-001", "input": "An assembler is a program that converts assembly language into machine code, which can be run on a computer.", "instruction": "Replace all non-characters with their spoken counterpart. And fix grammar.", "temperature": 0, "top_p": 1}' message='Post details'
[2022-11-17 22:42:03,433] DEBUG - https://api.openai.com:443 "POST /v1/edits HTTP/1.1" 429 347
[2022-11-17 22:42:03,434] INFO - message='OpenAI API response' path=https://api.openai.com/v1/edits processing_ms=None request_id=bb2760bfcb840084a2000d40a9051d45 response_code=429
[2022-11-17 22:42:03,434] INFO - error_code=None error_message='Rate limit reached for default-text-davinci-edit-001 in organization org-xTzTe98H3pdIt4U4fWax4sr2 on requests per min. Limit: 20.000000 / min. Current: 36.000000 / min. Contact support@openai.com if you continue to have issues.' error_param=None error_type=requests message='OpenAI API error received' stream_error=False
[2022-11-17 22:42:06,443] INFO - message='Request to OpenAI API' method=post path=https://api.openai.com/v1/edits
[2022-11-17 22:42:06,444] DEBUG - api_version=None data='{"model": "text-davinci-edit-001", "input": "An assembler is a program that converts assembly language into machine code, which can be run on a computer.", "instruction": "Replace all non-characters with their spoken counterpart. And fix grammar.", "temperature": 0, "top_p": 1}' message='Post details'
[2022-11-17 22:42:06,566] DEBUG - https://api.openai.com:443 "POST /v1/edits HTTP/1.1" 429 347
[2022-11-17 22:42:06,567] INFO - message='OpenAI API response' path=https://api.openai.com/v1/edits processing_ms=None request_id=5ef67cffe4d732a00dcbb00803423f68 response_code=429
[2022-11-17 22:42:06,567] INFO - error_code=None error_message='Rate limit reached for default-text-davinci-edit-001 in organization org-xTzTe98H3pdIt4U4fWax4sr2 on requests per min. Limit: 20.000000 / min. Current: 42.000000 / min. Contact support@openai.com if you continue to have issues.' error_param=None error_type=requests message='OpenAI API error received' stream_error=False
[2022-11-17 22:42:09,583] INFO - message='Request to OpenAI API' method=post path=https://api.openai.com/v1/edits
[2022-11-17 22:42:09,583] DEBUG - api_version=None data='{"model": "text-davinci-edit-001", "input": "An assembler is a program that converts assembly language into machine code, which can be run on a computer.", "instruction": "Replace all non-characters with their spoken counterpart. And fix grammar.", "temperature": 0, "top_p": 1}' message='Post details'
[2022-11-17 22:42:11,825] DEBUG - https://api.openai.com:443 "POST /v1/edits HTTP/1.1" 200 295
[2022-11-17 22:42:11,826] INFO - message='OpenAI API response' path=https://api.openai.com/v1/edits processing_ms=2084 request_id=f45c12ce4bb37ae5ac473e3083475104 response_code=200
[2022-11-17 22:42:11,826] INFO - message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
[2022-11-17 22:42:11,827] DEBUG - api_version=None data='{"model": "text-davinci-002", "prompt": "Expand greatly upon the topic of Breaking Down Structured Programming in the context of computer science summarised for a 9th grader:\\n\\n1. What is structured programming?\\n\\nStructured programming is a methodology of programming which includes dividing a larger program into smaller, modular sections called \\"structures.\\" These structures can be further divided into smaller substructures, and so on. The benefits of structured programming include improved readability, reusability, and maintainability of code. \\n\\nStructured programming is a methodology of programming which includes dividing a larger program into smaller, modular sections called \\"structures.\\" These structures can be further divided into smaller substructures, and so on. The benefits of structured programming include improved readability, reusability, and maintainability of code. \\n\\nStructured programming is a methodology of programming which includes dividing a larger program into smaller, modular sections called \\"structures.\\" These structures can be further divided into smaller substructures, and so on. The benefits of structured programming include improved readability, reusability, and maintainability of code. \\n\\nStructured programming is a methodology of programming which includes dividing a larger program into smaller, modular sections called \\"structures.\\" These structures can be further divided into smaller substructures, and so on. The benefits of structured programming include improved readability, reusability, and maintainability of code. \\n\\nStructured programming is a methodology of programming which includes dividing a larger program into smaller, modular sections called \\"structures.\\" These structures can be further divided into smaller substructures, and so on. The benefits of structured programming include improved readability, reusability, and maintainability of code. \\n\\nStructured programming is a methodology of programming which includes dividing a larger program into smaller, modular sections called \\"structures.\\" These structures can be further divided into smaller substructures, and so on. The benefits of structured programming include improved readability, reusability, and maintainability of code. \\n\\nStructured programming is a methodology of programming which includes dividing a larger program into smaller, modular sections called \\"structures.\\" These structures can be further divided into smaller substructures, and so on. The benefits of structured programming include improved readability, reusability, and maintainability of code. \\n\\nStructured programming is a methodology of programming which includes dividing a larger program into smaller, modular sections called \\"structures.\\" These structures can be further divided into smaller substructures, and so on. The benefits of structured programming include improved readability, reusability, and maintainability of code. \\n\\nStructured programming is a methodology of programming which includes dividing a larger program into smaller, modular sections called \\"structures.\\" These structures can be further divided into smaller substructures, and so on. The benefits of structured programming include improved readability, reusability, and maintainability of code. \\n\\nStructured programming is a methodology of programming which includes dividing a larger program into smaller, modular sections called \\"structures.\\" These structures can be further divided into smaller substructures, and so on. The benefits of structured programming include improved readability, reusability, and maintainability of code. \\n\\nStructured programming is a methodology of programming which includes dividing a larger program into smaller, modular sections called \\"structures.\\" These structures can be further divided into smaller substructures, and so on. The benefits of structured programming include improved readability, reusability, and maintainability of code. \\n\\nStructured programming is a methodology of programming which includes dividing a larger program into smaller, modular sections called \\"structures.\\" These structures can be further divided into smaller substructures, and so on. The benefits of structured programming include improved readability, reusability, and maintainability of code. \\n\\nStructured programming is a methodology of programming which includes dividing a larger program into smaller, modular sections called \\"structures.\\" These structures can be further divided into smaller substructures, and so on. The benefits of structured programming include improved readability, reusability, and maintainability of code. \\n\\nStructured programming is a methodology of programming which includes dividing a larger program into smaller, modular sections called \\"structures.\\" These structures can be further divided into smaller substructures, and so on. The benefits of structured programming include improved readability, reusability, and maintainability of code. \\n\\nStructured programming is a methodology of programming which includes dividing a larger program into smaller, modular sections called \\"structures.\\" These structures can be further divided into smaller substructures, and so on. The benefits of structured programming include improved readability, reusability, and maintainability of code. \\n\\nStructured programming is a methodology of programming which includes dividing a larger program into smaller, modular sections called \\"structures.\\" These structures can be further divided into smaller substructures, and so on. The benefits of structured programming include improved readability, reusability, and maintainability of code. \\n\\nStructured programming is a methodology of programming which includes dividing a larger program into smaller, modular sections called \\"structures.\\" These structures can be further divided into smaller substructures, and so on. The benefits of structured programming include improved readability, reusability, and maintainability of code. \\n\\nStructured programming is a methodology of programming which includes dividing a larger program into smaller, modular sections called \\"structures.\\" These structures can be further divided into smaller substructures, and so on. The benefits of structured programming include improved readability, reusability, and maintainability of code. \\n\\nStructured programming is a methodology of programming which includes dividing a larger program into smaller, modular sections called \\"structures.\\" These structures can be further divided into smaller substructures, and so on. The benefits of structured programming include improved readability, reusability, and maintainability of code. \\n\\nStructured programming is a methodology of programming which includes dividing a larger program into smaller, modular sections called \\"structures.\\" These structures can be further divided into smaller substructures, and so on. The benefits of structured programming include improved readability, reusability, and maintainability of code. \\n\\nStructured programming is a methodology of programming which includes dividing a larger program into smaller, modular sections called \\"structures.\\" These structures can be further divided into smaller substructures, and so on. The benefits of structured programming include improved readability, reusability, and maintainability of code. \\n\\nStructured programming is a methodology of programming which includes dividing a larger program into smaller, modular sections called \\"structures.\\" These structures can be further divided into smaller substructures, and so on. The benefits of structured programming include improved readability, reusability, and maintainability of code. \\n\\nStructured programming is a methodology of programming which includes dividing a larger program into smaller, modular sections called \\"structures.\\" These structures can be further divided into smaller substructures, and so on. The benefits of structured programming include improved readability, reusability, and maintainability of code. \\n\\nStructured programming is a methodology of programming which includes dividing a larger program into smaller, modular sections called \\"structures.\\" These structures can be further divided into smaller substructures, and so on. The benefits of structured programming include improved readability, reusability, and maintainability of code. \\n\\nStructured programming is a methodology of programming which includes dividing a larger program into smaller, modular sections called \\"structures.\\" These structures can be further divided into smaller substructures, and so on. The benefits of structured programming include improved readability, reusability, and maintainability of code. \\n\\nStructured programming is a methodology of programming which includes dividing a larger program into smaller, modular sections called \\"structures.\\" These structures can be further divided into smaller substructures, and so on. The benefits of structured programming include improved readability, reusability, and maintainability of code. \\n\\nStructured programming is a methodology of programming which includes dividing a larger program into smaller, modular sections called \\"structures.\\" These structures can be further divided into smaller substructures, and so on. The benefits of structured programming include improved readability, reusability, and maintainability of code. \\n\\nStructured programming is a methodology of programming which includes dividing a larger program into smaller, modular sections called \\"structures.\\" These structures can be further divided into smaller substructures, and so on. The benefits of structured programming include improved readability, reusability, and maintainability of code. \\n\\nStructured programming is a methodology of programming which includes dividing a larger program into smaller, modular sections called \\"structures.\\" These structures can be further divided into smaller substructures, and so on. The benefits of structured programming include improved readability, reusability, and maintainability of code. \\n\\nStructured programming is a methodology of programming which includes dividing a larger program into smaller, modular sections called \\"structures.\\" These structures can be further divided into smaller substructures, and so on. The benefits of structured programming include improved readability, reusability, and maintainability of code.\\n\\n2. What are the benefits of structured programming?\\n\\nThe benefits of structured programming include improved readability, reusability, and maintainability of code. In addition, structured programming can help make code more efficient and easier to debug.\\n\\n3. What are the disadvantages of structured programming?\\n\\nStructured programming can sometimes result in code that is more complex and difficult to read than nonstructured code. In addition, strict adherence to structured programming methodology can sometimes make it difficult to adapt code to new situations or to take advantage of new programming techniques.\\n\\n4. What are some common programming paradigms?\\n\\nSome common programming paradigms include object oriented programming, functional programming, and logic programming.\\n\\n5. What is the difference between a programming language and a script?\\n\\nA programming language is a formal language that includes a set of instructions for a computer to execute. A script, on the other hand, is a set of instructions for a program to follow. Scripts are often written in a scripting language, which is a simplified programming language designed for writing scripts.\\n\\n6. What is the difference between a high\\n\\nA highlevel programming language is a programming language that is designed to be easy for humans to read and write. Highlevel languages are generally closer to human languages than lowlevel languages, which are designed to be easy for computers to read and write.\\n\\n7. level language and a low\\n\\nA lowlevel language is a programming language that is designed to be easy for computers to read and write. Lowlevel languages are generally closer to machine code than highlevel languages, which are designed to be easy for humans to read and write.\\n\\n8. level language?\\n\\nA highlevel language is a programming language that is designed to be easy for humans to read and write. Highlevel languages are generally closer to human languages than lowlevel languages, which are designed to be easy for computers to read and write.\\n\\n9. What is a compiler?\\n\\nA compiler is a computer program that translates a program written in one language (the source language) into another language (the target language)\\n\\n10. What is an interpreter?\\n\\nAn interpreter is a computer program that executes a program written in a language line by line, instead of translating the whole program into another language all at once, as a compiler does.\\n\\n11. What is a virtual machine?\\n\\nA virtual machine is a software program that creates an environment that behaves like a physical computer. This environment can run on a physical computer or on a virtual server.\\n\\n12. What is an assembler?\\n\\nAn assembler is a program that converts assembly language into machine code, which can be run on a computer.It is also a person who assembles things.\\n\\n13. What is a linker?\\n\\n", "temperature": 1, "max_tokens": 128, "top_p": 1, "frequency_penalty": 0, "presence_penalty": 0, "n": 1, "stop": ["14.", "13."], "echo": false}' message='Post details'
[2022-11-17 22:42:13,188] DEBUG - https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 385
[2022-11-17 22:42:13,188] INFO - message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1186 request_id=2ad59ab9537f77a30462ddf6c44a5281 response_code=200
[2022-11-17 22:42:13,188] INFO - message='Request to OpenAI API' method=post path=https://api.openai.com/v1/edits
[2022-11-17 22:42:13,188] DEBUG - api_version=None data='{"model": "text-davinci-edit-001", "input": "A linker is a computer program that links together various object files and libraries to create an executable file.", "instruction": "Replace all non-characters with their spoken counterpart. And fix grammar.", "temperature": 0, "top_p": 1}' message='Post details'
[2022-11-17 22:42:13,303] DEBUG - https://api.openai.com:443 "POST /v1/edits HTTP/1.1" 429 347
[2022-11-17 22:42:13,304] INFO - message='OpenAI API response' path=https://api.openai.com/v1/edits processing_ms=None request_id=b889d10d631dd23188903db0750c475a response_code=429
[2022-11-17 22:42:13,304] INFO - error_code=None error_message='Rate limit reached for default-text-davinci-edit-001 in organization org-xTzTe98H3pdIt4U4fWax4sr2 on requests per min. Limit: 20.000000 / min. Current: 24.000000 / min. Contact support@openai.com if you continue to have issues.' error_param=None error_type=requests message='OpenAI API error received' stream_error=False
[2022-11-17 22:42:16,312] INFO - message='Request to OpenAI API' method=post path=https://api.openai.com/v1/edits
[2022-11-17 22:42:16,312] DEBUG - api_version=None data='{"model": "text-davinci-edit-001", "input": "A linker is a computer program that links together various object files and libraries to create an executable file.", "instruction": "Replace all non-characters with their spoken counterpart. And fix grammar.", "temperature": 0, "top_p": 1}' message='Post details'
[2022-11-17 22:42:18,451] DEBUG - https://api.openai.com:443 "POST /v1/edits HTTP/1.1" 200 256
[2022-11-17 22:42:18,452] INFO - message='OpenAI API response' path=https://api.openai.com/v1/edits processing_ms=1991 request_id=f7d9833bf1db7cb472fe6307f4f13cde response_code=200
[2022-11-17 22:42:18,452] INFO - message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
[2022-11-17 22:42:18,453] DEBUG - api_version=None data='{"model": "text-davinci-002", "prompt": "Expand greatly upon the topic of Breaking Down Structured Programming in the context of computer science summarised for a 9th grader:\\n\\n1. What is structured programming?\\n\\nStructured programming is a methodology of programming which includes dividing a larger program into smaller, modular sections called \\"structures.\\" These structures can be further divided into smaller substructures, and so on. The benefits of structured programming include improved readability, reusability, and maintainability of code. \\n\\nStructured programming is a methodology of programming which includes dividing a larger program into smaller, modular sections called \\"structures.\\" These structures can be further divided into smaller substructures, and so on. The benefits of structured programming include improved readability, reusability, and maintainability of code. \\n\\nStructured programming is a methodology of programming which includes dividing a larger program into smaller, modular sections called \\"structures.\\" These structures can be further divided into smaller substructures, and so on. The benefits of structured programming include improved readability, reusability, and maintainability of code. \\n\\nStructured programming is a methodology of programming which includes dividing a larger program into smaller, modular sections called \\"structures.\\" These structures can be further divided into smaller substructures, and so on. The benefits of structured programming include improved readability, reusability, and maintainability of code. \\n\\nStructured programming is a methodology of programming which includes dividing a larger program into smaller, modular sections called \\"structures.\\" These structures can be further divided into smaller substructures, and so on. The benefits of structured programming include improved readability, reusability, and maintainability of code. \\n\\nStructured programming is a methodology of programming which includes dividing a larger program into smaller, modular sections called \\"structures.\\" These structures can be further divided into smaller substructures, and so on. The benefits of structured programming include improved readability, reusability, and maintainability of code. \\n\\nStructured programming is a methodology of programming which includes dividing a larger program into smaller, modular sections called \\"structures.\\" These structures can be further divided into smaller substructures, and so on. The benefits of structured programming include improved readability, reusability, and maintainability of code. \\n\\nStructured programming is a methodology of programming which includes dividing a larger program into smaller, modular sections called \\"structures.\\" These structures can be further divided into smaller substructures, and so on. The benefits of structured programming include improved readability, reusability, and maintainability of code. \\n\\nStructured programming is a methodology of programming which includes dividing a larger program into smaller, modular sections called \\"structures.\\" These structures can be further divided into smaller substructures, and so on. The benefits of structured programming include improved readability, reusability, and maintainability of code. \\n\\nStructured programming is a methodology of programming which includes dividing a larger program into smaller, modular sections called \\"structures.\\" These structures can be further divided into smaller substructures, and so on. The benefits of structured programming include improved readability, reusability, and maintainability of code. \\n\\nStructured programming is a methodology of programming which includes dividing a larger program into smaller, modular sections called \\"structures.\\" These structures can be further divided into smaller substructures, and so on. The benefits of structured programming include improved readability, reusability, and maintainability of code. \\n\\nStructured programming is a methodology of programming which includes dividing a larger program into smaller, modular sections called \\"structures.\\" These structures can be further divided into smaller substructures, and so on. The benefits of structured programming include improved readability, reusability, and maintainability of code. \\n\\nStructured programming is a methodology of programming which includes dividing a larger program into smaller, modular sections called \\"structures.\\" These structures can be further divided into smaller substructures, and so on. The benefits of structured programming include improved readability, reusability, and maintainability of code. \\n\\nStructured programming is a methodology of programming which includes dividing a larger program into smaller, modular sections called \\"structures.\\" These structures can be further divided into smaller substructures, and so on. The benefits of structured programming include improved readability, reusability, and maintainability of code. \\n\\nStructured programming is a methodology of programming which includes dividing a larger program into smaller, modular sections called \\"structures.\\" These structures can be further divided into smaller substructures, and so on. The benefits of structured programming include improved readability, reusability, and maintainability of code. \\n\\nStructured programming is a methodology of programming which includes dividing a larger program into smaller, modular sections called \\"structures.\\" These structures can be further divided into smaller substructures, and so on. The benefits of structured programming include improved readability, reusability, and maintainability of code. \\n\\nStructured programming is a methodology of programming which includes dividing a larger program into smaller, modular sections called \\"structures.\\" These structures can be further divided into smaller substructures, and so on. The benefits of structured programming include improved readability, reusability, and maintainability of code. \\n\\nStructured programming is a methodology of programming which includes dividing a larger program into smaller, modular sections called \\"structures.\\" These structures can be further divided into smaller substructures, and so on. The benefits of structured programming include improved readability, reusability, and maintainability of code. \\n\\nStructured programming is a methodology of programming which includes dividing a larger program into smaller, modular sections called \\"structures.\\" These structures can be further divided into smaller substructures, and so on. The benefits of structured programming include improved readability, reusability, and maintainability of code. \\n\\nStructured programming is a methodology of programming which includes dividing a larger program into smaller, modular sections called \\"structures.\\" These structures can be further divided into smaller substructures, and so on. The benefits of structured programming include improved readability, reusability, and maintainability of code. \\n\\nStructured programming is a methodology of programming which includes dividing a larger program into smaller, modular sections called \\"structures.\\" These structures can be further divided into smaller substructures, and so on. The benefits of structured programming include improved readability, reusability, and maintainability of code. \\n\\nStructured programming is a methodology of programming which includes dividing a larger program into smaller, modular sections called \\"structures.\\" These structures can be further divided into smaller substructures, and so on. The benefits of structured programming include improved readability, reusability, and maintainability of code. \\n\\nStructured programming is a methodology of programming which includes dividing a larger program into smaller, modular sections called \\"structures.\\" These structures can be further divided into smaller substructures, and so on. The benefits of structured programming include improved readability, reusability, and maintainability of code. \\n\\nStructured programming is a methodology of programming which includes dividing a larger program into smaller, modular sections called \\"structures.\\" These structures can be further divided into smaller substructures, and so on. The benefits of structured programming include improved readability, reusability, and maintainability of code. \\n\\nStructured programming is a methodology of programming which includes dividing a larger program into smaller, modular sections called \\"structures.\\" These structures can be further divided into smaller substructures, and so on. The benefits of structured programming include improved readability, reusability, and maintainability of code. \\n\\nStructured programming is a methodology of programming which includes dividing a larger program into smaller, modular sections called \\"structures.\\" These structures can be further divided into smaller substructures, and so on. The benefits of structured programming include improved readability, reusability, and maintainability of code. \\n\\nStructured programming is a methodology of programming which includes dividing a larger program into smaller, modular sections called \\"structures.\\" These structures can be further divided into smaller substructures, and so on. The benefits of structured programming include improved readability, reusability, and maintainability of code. \\n\\nStructured programming is a methodology of programming which includes dividing a larger program into smaller, modular sections called \\"structures.\\" These structures can be further divided into smaller substructures, and so on. The benefits of structured programming include improved readability, reusability, and maintainability of code. \\n\\nStructured programming is a methodology of programming which includes dividing a larger program into smaller, modular sections called \\"structures.\\" These structures can be further divided into smaller substructures, and so on. The benefits of structured programming include improved readability, reusability, and maintainability of code. \\n\\nStructured programming is a methodology of programming which includes dividing a larger program into smaller, modular sections called \\"structures.\\" These structures can be further divided into smaller substructures, and so on. The benefits of structured programming include improved readability, reusability, and maintainability of code.\\n\\n2. What are the benefits of structured programming?\\n\\nThe benefits of structured programming include improved readability, reusability, and maintainability of code. In addition, structured programming can help make code more efficient and easier to debug.\\n\\n3. What are the disadvantages of structured programming?\\n\\nStructured programming can sometimes result in code that is more complex and difficult to read than nonstructured code. In addition, strict adherence to structured programming methodology can sometimes make it difficult to adapt code to new situations or to take advantage of new programming techniques.\\n\\n4. What are some common programming paradigms?\\n\\nSome common programming paradigms include object oriented programming, functional programming, and logic programming.\\n\\n5. What is the difference between a programming language and a script?\\n\\nA programming language is a formal language that includes a set of instructions for a computer to execute. A script, on the other hand, is a set of instructions for a program to follow. Scripts are often written in a scripting language, which is a simplified programming language designed for writing scripts.\\n\\n6. What is the difference between a high\\n\\nA highlevel programming language is a programming language that is designed to be easy for humans to read and write. Highlevel languages are generally closer to human languages than lowlevel languages, which are designed to be easy for computers to read and write.\\n\\n7. level language and a low\\n\\nA lowlevel language is a programming language that is designed to be easy for computers to read and write. Lowlevel languages are generally closer to machine code than highlevel languages, which are designed to be easy for humans to read and write.\\n\\n8. level language?\\n\\nA highlevel language is a programming language that is designed to be easy for humans to read and write. Highlevel languages are generally closer to human languages than lowlevel languages, which are designed to be easy for computers to read and write.\\n\\n9. What is a compiler?\\n\\nA compiler is a computer program that translates a program written in one language (the source language) into another language (the target language)\\n\\n10. What is an interpreter?\\n\\nAn interpreter is a computer program that executes a program written in a language line by line, instead of translating the whole program into another language all at once, as a compiler does.\\n\\n11. What is a virtual machine?\\n\\nA virtual machine is a software program that creates an environment that behaves like a physical computer. This environment can run on a physical computer or on a virtual server.\\n\\n12. What is an assembler?\\n\\nAn assembler is a program that converts assembly language into machine code, which can be run on a computer.It is also a person who assembles things.\\n\\n13. What is a linker?\\n\\nA linker is a computer program that links together various object files and libraries to create an executable.\\n\\n14. What is a loader?\\n\\n", "temperature": 1, "max_tokens": 128, "top_p": 1, "frequency_penalty": 0, "presence_penalty": 0, "n": 1, "stop": ["15.", "14."], "echo": false}' message='Post details'
[2022-11-17 22:42:19,476] DEBUG - https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 350
[2022-11-17 22:42:19,477] INFO - message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=840 request_id=be3fabd45517dc4a2e5be463df59f4c3 response_code=200
[2022-11-17 22:42:19,477] INFO - message='Request to OpenAI API' method=post path=https://api.openai.com/v1/edits
[2022-11-17 22:42:19,477] DEBUG - api_version=None data='{"model": "text-davinci-edit-001", "input": "A loader is a computer program that loads an executable into memory and runs it.", "instruction": "Replace all non-characters with their spoken counterpart. And fix grammar.", "temperature": 0, "top_p": 1}' message='Post details'
[2022-11-17 22:42:22,034] DEBUG - https://api.openai.com:443 "POST /v1/edits HTTP/1.1" 200 276
[2022-11-17 22:42:22,035] INFO - message='OpenAI API response' path=https://api.openai.com/v1/edits processing_ms=2407 request_id=a790857e95e2b6d99d1eb9ffe62f4191 response_code=200
[2022-11-17 22:42:22,037] DEBUG - Starting new HTTPS connection (1): www.googleapis.com:443
[2022-11-17 22:42:22,194] DEBUG - https://www.googleapis.com:443 "GET /youtube/v3/playlists?part=id&id=UC_x5XG1OV2P6uZZ5FSM9Ttw&key=AIzaSyDfv2ISoNjVh2oX2JRJUQ1loS-voHH3GlI&maxResults=2 HTTP/1.1" 200 None
[2022-11-17 22:42:22,199] DEBUG - Starting new HTTPS connection (1): www.googleapis.com:443
[2022-11-17 22:42:22,863] DEBUG - https://www.googleapis.com:443 "GET /youtube/v3/search?part=snippet&type=video&maxResults=50&order=relevance&key=AIzaSyDfv2ISoNjVh2oX2JRJUQ1loS-voHH3GlI&q=Breaking%20Down%20Structured%20Programming&publishedAfter=2000-01-01T00:00:00Z&publishedBefore=3000-01-01T00:00:00Z HTTP/1.1" 200 None
[2022-11-17 22:42:22,870] DEBUG - Starting new HTTPS connection (1): www.googleapis.com:443
[2022-11-17 22:42:22,957] DEBUG - https://www.googleapis.com:443 "GET /youtube/v3/videos?key=AIzaSyDfv2ISoNjVh2oX2JRJUQ1loS-voHH3GlI&fields=items(snippet(description,tags))&part=snippet&id=SFv8Wm2HdNM HTTP/1.1" 200 None
[2022-11-17 22:42:22,961] DEBUG - Starting new HTTPS connection (1): www.googleapis.com:443
[2022-11-17 22:42:23,027] DEBUG - https://www.googleapis.com:443 "GET /youtube/v3/videos?key=AIzaSyDfv2ISoNjVh2oX2JRJUQ1loS-voHH3GlI&fields=items(snippet(description,tags))&part=snippet&id=_l_wtpxgB7k HTTP/1.1" 200 None
[2022-11-17 22:42:23,030] DEBUG - Starting new HTTPS connection (1): www.googleapis.com:443
[2022-11-17 22:42:23,098] DEBUG - https://www.googleapis.com:443 "GET /youtube/v3/videos?key=AIzaSyDfv2ISoNjVh2oX2JRJUQ1loS-voHH3GlI&fields=items(snippet(description,tags))&part=snippet&id=tb0tnfm3miY HTTP/1.1" 200 None
[2022-11-17 22:42:23,104] DEBUG - Starting new HTTPS connection (1): www.googleapis.com:443
[2022-11-17 22:42:23,191] DEBUG - https://www.googleapis.com:443 "GET /youtube/v3/videos?key=AIzaSyDfv2ISoNjVh2oX2JRJUQ1loS-voHH3GlI&fields=items(snippet(description,tags))&part=snippet&id=jfQcKLKvjeQ HTTP/1.1" 200 None
[2022-11-17 22:42:23,196] DEBUG - Starting new HTTPS connection (1): www.googleapis.com:443
[2022-11-17 22:42:23,254] DEBUG - https://www.googleapis.com:443 "GET /youtube/v3/videos?key=AIzaSyDfv2ISoNjVh2oX2JRJUQ1loS-voHH3GlI&fields=items(snippet(description,tags))&part=snippet&id=TmtyFcLWXwo HTTP/1.1" 200 None
[2022-11-17 22:42:23,258] DEBUG - Starting new HTTPS connection (1): www.googleapis.com:443
[2022-11-17 22:42:23,331] DEBUG - https://www.googleapis.com:443 "GET /youtube/v3/videos?key=AIzaSyDfv2ISoNjVh2oX2JRJUQ1loS-voHH3GlI&fields=items(snippet(description,tags))&part=snippet&id=eEBOvqMfPoI HTTP/1.1" 200 None
[2022-11-17 22:42:23,337] DEBUG - Starting new HTTPS connection (1): www.googleapis.com:443
[2022-11-17 22:42:23,421] DEBUG - https://www.googleapis.com:443 "GET /youtube/v3/videos?key=AIzaSyDfv2ISoNjVh2oX2JRJUQ1loS-voHH3GlI&fields=items(snippet(description,tags))&part=snippet&id=M9Yu4FzmmZc HTTP/1.1" 200 None
[2022-11-17 22:42:23,426] DEBUG - Starting new HTTPS connection (1): www.googleapis.com:443
[2022-11-17 22:42:23,506] DEBUG - https://www.googleapis.com:443 "GET /youtube/v3/videos?key=AIzaSyDfv2ISoNjVh2oX2JRJUQ1loS-voHH3GlI&fields=items(snippet(description,tags))&part=snippet&id=L_heKLtCe9A HTTP/1.1" 200 None
[2022-11-17 22:42:23,512] DEBUG - Starting new HTTPS connection (1): www.googleapis.com:443
[2022-11-17 22:42:23,584] DEBUG - https://www.googleapis.com:443 "GET /youtube/v3/videos?key=AIzaSyDfv2ISoNjVh2oX2JRJUQ1loS-voHH3GlI&fields=items(snippet(description,tags))&part=snippet&id=FSV485hck7g HTTP/1.1" 200 None
[2022-11-17 22:42:23,589] DEBUG - Starting new HTTPS connection (1): www.googleapis.com:443
[2022-11-17 22:42:23,649] DEBUG - https://www.googleapis.com:443 "GET /youtube/v3/videos?key=AIzaSyDfv2ISoNjVh2oX2JRJUQ1loS-voHH3GlI&fields=items(snippet(description,tags))&part=snippet&id=mrY6xrWp3Gs HTTP/1.1" 200 None
[2022-11-17 22:42:23,654] DEBUG - Starting new HTTPS connection (1): www.googleapis.com:443
[2022-11-17 22:42:23,716] DEBUG - https://www.googleapis.com:443 "GET /youtube/v3/videos?key=AIzaSyDfv2ISoNjVh2oX2JRJUQ1loS-voHH3GlI&fields=items(snippet(description,tags))&part=snippet&id=mScqZcfNJak HTTP/1.1" 200 None
[2022-11-17 22:42:23,720] DEBUG - Starting new HTTPS connection (1): www.googleapis.com:443
[2022-11-17 22:42:23,801] DEBUG - https://www.googleapis.com:443 "GET /youtube/v3/videos?key=AIzaSyDfv2ISoNjVh2oX2JRJUQ1loS-voHH3GlI&fields=items(snippet(description,tags))&part=snippet&id=PyR2VLP3xnA HTTP/1.1" 200 None
[2022-11-17 22:42:23,806] DEBUG - Starting new HTTPS connection (1): www.googleapis.com:443
[2022-11-17 22:42:23,870] DEBUG - https://www.googleapis.com:443 "GET /youtube/v3/videos?key=AIzaSyDfv2ISoNjVh2oX2JRJUQ1loS-voHH3GlI&fields=items(snippet(description,tags))&part=snippet&id=78lGakMM1fw HTTP/1.1" 200 None
[2022-11-17 22:42:23,874] DEBUG - Starting new HTTPS connection (1): www.googleapis.com:443
[2022-11-17 22:42:23,934] DEBUG - https://www.googleapis.com:443 "GET /youtube/v3/videos?key=AIzaSyDfv2ISoNjVh2oX2JRJUQ1loS-voHH3GlI&fields=items(snippet(description,tags))&part=snippet&id=qpUQpxpeixA HTTP/1.1" 200 None
[2022-11-17 22:42:23,937] DEBUG - Starting new HTTPS connection (1): www.googleapis.com:443
[2022-11-17 22:42:24,004] DEBUG - https://www.googleapis.com:443 "GET /youtube/v3/videos?key=AIzaSyDfv2ISoNjVh2oX2JRJUQ1loS-voHH3GlI&fields=items(snippet(description,tags))&part=snippet&id=akO2Lf1fHmM HTTP/1.1" 200 None
[2022-11-17 22:42:24,009] DEBUG - Starting new HTTPS connection (1): www.googleapis.com:443
[2022-11-17 22:42:24,057] DEBUG - https://www.googleapis.com:443 "GET /youtube/v3/videos?key=AIzaSyDfv2ISoNjVh2oX2JRJUQ1loS-voHH3GlI&fields=items(snippet(description,tags))&part=snippet&id=dcljKmqrau0 HTTP/1.1" 200 None
[2022-11-17 22:42:24,062] DEBUG - Starting new HTTPS connection (1): www.googleapis.com:443
[2022-11-17 22:42:24,114] DEBUG - https://www.googleapis.com:443 "GET /youtube/v3/videos?key=AIzaSyDfv2ISoNjVh2oX2JRJUQ1loS-voHH3GlI&fields=items(snippet(description,tags))&part=snippet&id=rRyRSjL1nXw HTTP/1.1" 200 None
[2022-11-17 22:42:24,119] DEBUG - Starting new HTTPS connection (1): www.googleapis.com:443
[2022-11-17 22:42:24,180] DEBUG - https://www.googleapis.com:443 "GET /youtube/v3/videos?key=AIzaSyDfv2ISoNjVh2oX2JRJUQ1loS-voHH3GlI&fields=items(snippet(description,tags))&part=snippet&id=zOjov-2OZ0E HTTP/1.1" 200 None
[2022-11-17 22:42:24,182] DEBUG - Starting new HTTPS connection (1): www.googleapis.com:443
[2022-11-17 22:42:24,265] DEBUG - https://www.googleapis.com:443 "GET /youtube/v3/videos?key=AIzaSyDfv2ISoNjVh2oX2JRJUQ1loS-voHH3GlI&fields=items(snippet(description,tags))&part=snippet&id=JqATYCqGzXU HTTP/1.1" 200 None
[2022-11-17 22:42:24,268] DEBUG - Starting new HTTPS connection (1): www.googleapis.com:443
[2022-11-17 22:42:24,314] DEBUG - https://www.googleapis.com:443 "GET /youtube/v3/videos?key=AIzaSyDfv2ISoNjVh2oX2JRJUQ1loS-voHH3GlI&fields=items(snippet(description,tags))&part=snippet&id=B5O52_w-4Zg HTTP/1.1" 200 None
[2022-11-17 22:42:24,317] DEBUG - Starting new HTTPS connection (1): www.googleapis.com:443
[2022-11-17 22:42:24,386] DEBUG - https://www.googleapis.com:443 "GET /youtube/v3/videos?key=AIzaSyDfv2ISoNjVh2oX2JRJUQ1loS-voHH3GlI&fields=items(snippet(description,tags))&part=snippet&id=ymfVfi5atTk HTTP/1.1" 200 None
[2022-11-17 22:42:24,390] DEBUG - Starting new HTTPS connection (1): www.googleapis.com:443
[2022-11-17 22:42:24,448] DEBUG - https://www.googleapis.com:443 "GET /youtube/v3/videos?key=AIzaSyDfv2ISoNjVh2oX2JRJUQ1loS-voHH3GlI&fields=items(snippet(description,tags))&part=snippet&id=S_vg01ENoS0 HTTP/1.1" 200 None
[2022-11-17 22:42:24,451] DEBUG - Starting new HTTPS connection (1): www.googleapis.com:443
[2022-11-17 22:42:24,508] DEBUG - https://www.googleapis.com:443 "GET /youtube/v3/videos?key=AIzaSyDfv2ISoNjVh2oX2JRJUQ1loS-voHH3GlI&fields=items(snippet(description,tags))&part=snippet&id=2lNftP9Bq7k HTTP/1.1" 200 None
[2022-11-17 22:42:24,512] DEBUG - Starting new HTTPS connection (1): www.googleapis.com:443
[2022-11-17 22:42:24,566] DEBUG - https://www.googleapis.com:443 "GET /youtube/v3/videos?key=AIzaSyDfv2ISoNjVh2oX2JRJUQ1loS-voHH3GlI&fields=items(snippet(description,tags))&part=snippet&id=WLCUxpv-TmA HTTP/1.1" 200 None
[2022-11-17 22:42:24,571] DEBUG - Starting new HTTPS connection (1): www.googleapis.com:443
[2022-11-17 22:42:24,624] DEBUG - https://www.googleapis.com:443 "GET /youtube/v3/videos?key=AIzaSyDfv2ISoNjVh2oX2JRJUQ1loS-voHH3GlI&fields=items(snippet(description,tags))&part=snippet&id=1Ea_RlRTor4 HTTP/1.1" 200 None
[2022-11-17 22:42:24,628] DEBUG - Hashtags ['#itdays2019', '#programmingart', '#project', '#projectmanagement', '#wbs', '#compshaw', '#python', '#computerscience', '#gcsecs', '#forex', '#forextrading', '#forexanalysis', '#screenwriting', '#structure', '#breakingbad', '#walterwhite']
[2022-11-17 22:42:24,628] DEBUG - Top Hashtags ['#itdays2019', '#programmingart', '#project', '#projectmanagement', '#wbs']
[2022-11-17 22:42:24,628] DEBUG - Tags ['c++', 'c++ on sea', 'cpponsea', 'folkestone', 'c++ conference', 'conference', 'programming', 'c++ on sea 2019', 'c++ tutorial', 'c++ programming', 'computer science (field)', 'structured programming', 'the forgotten art of structured programming', 'the forgotten art of structured programming - kevlin henney', 'kevlin henney', 'kevlin henney c++', 'kevlin henney 2019', 'go to statement considered harmful', 'block-structured code', 'object orientation', 'computing', 'computer science', 'revise computer science', 'craigndave', 'gcse computer science', 'aqa computer science', 'aqa gcse computer science', 'aqa gcse computer science paper 1', 'aqa gcse computer science 9-1', 'programming', 'programming concepts', 'structured approach to programming', 'program interface', 'procedures', 'functions', 'parameters', 'return values', 'computer science for beginners', 'computing', 'computer', 'science', 'ocr', 'ezed', 'structuredprogramming', 'topdownanalysis', 'structuredcode', 'blockstructures', 'scopeofproblem', 'modules', 'ifelse', 'else', 'switch-case', 'controltransferstatements', 'computerprogramming', 'engineering', 'clanguage', 'procedural programming', 'programming', 'functional programming', 'software development', 'programming paradigm', 'learn how to code python', 'learn how to code for beginners', 'learn how to code java', 'learn how to code and hack', 'learn how to code an app', 'learn how to code a website', 'learn how to code and get a job', 'learn how to code beginner', 'learn how to code basics', 'how do i learn how to code', 'learn how to code easy', 'easiest way to learn how to code', 'everyone should learn how to code', 'learn how to code from scratch', 'learn how to code for dummies', 'how to learn how to code for free', 'c++', 'procedural', 'programming', 'coding', 'software development', 'accu', '2018', 'talk', 'seminar', 'conference', 'basic', 'variables', 'as', 'cambridge', 'talkthrough', 'eduqas', 'walkthrough', 'tutorial', 'gcse', 'computer science tutor', 'btec', 'explained', 'computer science', 'pearson', 'revision', 'lessons', 'igcse', 'ocr', 'past exam', 'edexcel', 'subprograms', 'wjec', 'local', 'computing', 'cie', 'global', 'parameter', 'argument', 'ap', 'a level', 'structured', 'aqa', 'past paper', 'subroutines', 'international', 'interface', 'programming', 'how to create a work breakdown structure', 'work breakdown structure', 'wbs', 'wbs structure', 'work breakdown', 'wbs project', 'wbs work breakdown structure', 'wbs project management', 'work breakdown structure project', 'work breakdown structure wbs', 'work breakdown structure (wbs)', 'project breakdown structure', 'work breakdown structure in project management', 'project planning', 'project management', 'project management tutorial', 'project management for beginners', 'project manager skills', 'mike clayton', 'python functions', 'functions in python', 'python function', 'python tutorial', 'functions', 'python (programming language)', 'functions tutorial python', 'python reduce function', 'python function return', 'learn python functions', 'python functions explained', 'python built in functions', 'using functions in python', 'python project structure', 'python defining functions', 'computer science', 'python parameters', 'beginners functions', 'parameters', 'structured programmingapa', 'software engineering', 'computer science', 'engineering class', 'structured programming', 'work breakdown structure', 'project breakdown structure', 'wbs work breakdown structure', 'work breakdown', 'wbs structure', 'wbs project', 'wbs project management', 'work breakdown structure project', 'work breakdown structure wbs', 'work breakdown structure definition', 'wbs', 'work breakdown structure in project management', 'onlinepmcourses', 'dr mike clayton', 'pmu5', 'mike clayton', 'project management', 'project planning', 'project management tools', 'what is wbs in project management', 'project management', 'luka hocevar', 'program design', 'vigor ground', 'gym', 'personal trainer', 'strength coach', 'how to design your workout', 'personal training', 'workout', 'athlete', 'performance', 'fitness', 'renton', 'seattle', 'group training', 'renton gym', 'renton personal trainer', 'smart training', 'joint friendly', 'joint friendly training', 'workout tips', 'build muscle', 'muscle building', 'body transformation', 'fat loss', 'structured programming concept', 'top-down analysis', 'modular programming', 'non-structured', 'process', 'structured code', 'programming process', 'sreekanthdeva', 'sreekanthdeva', 'sreekanth deva', 'functional programming', 'fp', 'oop', 'object orientated programming', 'procedural programming', 'programming paradigm', 'paradigm', 'object orientated', 'organizational breakdown structure', 'what is an organizational breakdown structure', 'obs', 'what is an obs', 'organogram', 'organizational chart', 'evenant', 'music', 'tutorial', 'lesson', 'lecture', 'online course', 'cinematic', 'composing', 'composition', 'creative', 'orchestration', 'sound design', 'sfx', 'composer', 'song', 'songwriting', 'skills', 'beginner', 'intermediate', 'advanced', 'forex', 'trading', 'investing', 'forex trading', 'forex market structure', 'how to trade market structure', 'forex analysis', 'forex strategy', 'price action', 'day trading', 'forex trend', 'forex market', 'forex beginner strategy', 'technical analysis', 'market structure', 'trading fanatic', 'forex for beginners', 'film analysis', 'movie review', 'tyler mowery', 'nerdwriter', 'lessons from the screenplay', 'every frame a painting', 'screenwriting', 'script breakdown', 'writing', 'workshop', 'writing course', 'teach screenwriting', 'oscar best screenplay', 'film school', 'story structure', 'tv structure', 'how to structure a tv show', 'how to structure a tv series']
[2022-11-17 22:42:24,629] DEBUG - Top Tags ['programming', 'computer science', 'computing', 'project management', 'c++', 'conference', 'structured programming', 'functions', 'parameters', 'ocr', 'procedural programming', 'functional programming', 'software development', 'programming paradigm']
[2022-11-17 22:42:41,481] CRITICAL - Failed to generate audio
[2022-11-17 22:42:41,482] INFO - Getting video script.
[2022-11-17 22:42:41,482] INFO - message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
[2022-11-17 22:42:41,482] DEBUG - api_version=None data='{"model": "text-davinci-002", "prompt": "Write a list of unique and interesting keywords relating to basic computer science:\\n\\n-", "temperature": 1, "max_tokens": 128, "top_p": 1, "frequency_penalty": 0, "presence_penalty": 0, "n": 1, "stop": "", "echo": false}' message='Post details'
[2022-11-17 22:42:47,026] DEBUG - https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 728
[2022-11-17 22:42:47,026] INFO - message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=5392 request_id=19bc3b1612288a1ebe010cac0b264a74 response_code=200
[2022-11-17 22:42:47,026] INFO - message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
[2022-11-17 22:42:47,026] DEBUG - api_version=None data='{"model": "text-curie-001", "prompt": "Write a list of 5 interesting beginner topics on where image processing is used in the context of computer science:\\n-", "temperature": 0.7, "max_tokens": 256, "top_p": 1, "frequency_penalty": 0, "presence_penalty": 0, "n": 1, "stop": "", "echo": false}' message='Post details'
[2022-11-17 22:42:47,414] DEBUG - https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 356
[2022-11-17 22:42:47,414] INFO - message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=228 request_id=7a39314d90cd318e5aeea7df32ada2b2 response_code=200
[2022-11-17 22:42:47,414] INFO - message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
[2022-11-17 22:42:47,415] DEBUG - api_version=None data='{"model": "text-davinci-002", "prompt": "Write a short, unique and interesting title relating to the theory of Image recognition in the form of a video essay title without involving numbers:", "temperature": 1, "max_tokens": 20, "top_p": 1, "frequency_penalty": 0, "presence_penalty": 0, "n": 1, "stop": "", "echo": false}' message='Post details'
[2022-11-17 22:42:48,701] DEBUG - https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 318
[2022-11-17 22:42:48,701] INFO - message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1134 request_id=f96d1f391443fcef5d862f550ad37fb5 response_code=200
[2022-11-17 22:42:48,707] DEBUG - Keyword image processing, Topics ['Image recognition', 'Image denoising', 'Image compression', 'Image enhancement', 'Image registration'], Topic Image Recognition: Turning a Blur into a Picture
[2022-11-17 22:42:48,707] INFO - message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
[2022-11-17 22:42:48,707] DEBUG - api_version=None data='{"model": "text-davinci-002", "prompt": "Write a list of beginner topics relating to what is Image Recognition: Turning a Blur into a Picture in the context of computer science:\\n\\n", "temperature": 0, "max_tokens": 256, "top_p": 1, "frequency_penalty": 0, "presence_penalty": 0, "n": 1, "stop": "", "echo": false}' message='Post details'
[2022-11-17 22:42:51,060] DEBUG - https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 498
[2022-11-17 22:42:51,061] INFO - message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=2209 request_id=c874e9551943c8960df09a62d5885f36 response_code=200
[2022-11-17 22:42:51,061] DEBUG - topic: Image Recognition: Turning a Blur into a Picture, sub topics 
1. What is image recognition?
2. What are the benefits of image recognition?
3. How does image recognition work?
4. What are some common image recognition algorithms?
5. How can image recognition be used in practical applications?
[2022-11-17 22:42:51,061] DEBUG - getting summary for topic
[2022-11-17 22:42:51,061] INFO - message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
[2022-11-17 22:42:51,062] DEBUG - api_version=None data='{"model": "text-curie-001", "prompt": "Write a summary for the following topic in the form of a youtube description in the context of computer science:\\n\\ntopic: Image Recognition: Turning a Blur into a Picture\\n\\nsummary:", "temperature": 0, "max_tokens": 256, "top_p": 1, "frequency_penalty": 0, "presence_penalty": 0, "n": 1, "stop": "", "echo": false}' message='Post details'
[2022-11-17 22:42:51,448] DEBUG - https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 352
[2022-11-17 22:42:51,449] INFO - message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=234 request_id=aca3200ce19feb31adf8cf2a0c9084e9 response_code=200
[2022-11-17 22:42:51,449] INFO - message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
[2022-11-17 22:42:51,449] DEBUG - api_version=None data='{"model": "text-davinci-002", "prompt": "Expand greatly upon the topic of Image Recognition: Turning a Blur into a Picture in the context of computer science summarised for a 9th grader:\\n\\n1. 1. What is image recognition?\\n2. What are the benefits of image recognition?\\n3. How does image recognition work?\\n4. What are some common image recognition algorithms?\\n5. How can image recognition be used in practical applications?\\n\\n", "temperature": 1, "max_tokens": 128, "top_p": 1, "frequency_penalty": 0, "presence_penalty": 0, "n": 1, "stop": ["2.", "1."], "echo": false}' message='Post details'
[2022-11-17 22:42:52,283] DEBUG - https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 265
[2022-11-17 22:42:52,284] INFO - message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=688 request_id=7ba153f1126c979c64528e65cb3014ff response_code=200
[2022-11-17 22:42:52,284] CRITICAL - Failed to generate video script
[2022-11-17 22:42:52,284] INFO - Getting video script.
[2022-11-17 22:42:52,284] INFO - message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
[2022-11-17 22:42:52,284] DEBUG - api_version=None data='{"model": "text-davinci-002", "prompt": "Write a list of unique and interesting keywords relating to basic computer science:\\n\\n-", "temperature": 1, "max_tokens": 128, "top_p": 1, "frequency_penalty": 0, "presence_penalty": 0, "n": 1, "stop": "", "echo": false}' message='Post details'
[2022-11-17 22:42:57,245] DEBUG - https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 708
[2022-11-17 22:42:57,245] INFO - message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=4808 request_id=77f025371850862cf7884e5e069d6633 response_code=200
[2022-11-17 22:42:57,245] INFO - message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
[2022-11-17 22:42:57,245] DEBUG - api_version=None data='{"model": "text-curie-001", "prompt": "Write a list of 5 interesting beginner topics on where Operating system is used in the context of computer science:\\n-", "temperature": 0.7, "max_tokens": 256, "top_p": 1, "frequency_penalty": 0, "presence_penalty": 0, "n": 1, "stop": "", "echo": false}' message='Post details'
[2022-11-17 22:42:57,549] DEBUG - https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 300
[2022-11-17 22:42:57,549] INFO - message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=151 request_id=08642cbc29411d486485ebae1f0ddf69 response_code=200
[2022-11-17 22:42:57,550] INFO - message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
[2022-11-17 22:42:57,550] DEBUG - api_version=None data='{"model": "text-davinci-002", "prompt": "Write a short, unique and interesting title relating to the theory of MacOS in the form of a video essay title without involving numbers:", "temperature": 1, "max_tokens": 20, "top_p": 1, "frequency_penalty": 0, "presence_penalty": 0, "n": 1, "stop": "", "echo": false}' message='Post details'
[2022-11-17 22:42:58,592] DEBUG - https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 293
[2022-11-17 22:42:58,593] INFO - message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=896 request_id=ecd9dba62f06b15dcd4170882b583615 response_code=200
[2022-11-17 22:42:58,599] DEBUG - Keyword Operating system, Topics ['Linux', 'Windows', 'MacOS', 'Unix', 'Android'], Topic A New Understanding of MacOS
[2022-11-17 22:42:58,599] INFO - message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
[2022-11-17 22:42:58,599] DEBUG - api_version=None data='{"model": "text-davinci-002", "prompt": "Write a list of beginner topics relating to what is A New Understanding of MacOS in the context of computer science:\\n\\n", "temperature": 0, "max_tokens": 256, "top_p": 1, "frequency_penalty": 0, "presence_penalty": 0, "n": 1, "stop": "", "echo": false}' message='Post details'
[2022-11-17 22:43:01,339] DEBUG - https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 452
[2022-11-17 22:43:01,340] INFO - message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=2589 request_id=f73dabe8a56418dbc9f514974246e0d1 response_code=200
[2022-11-17 22:43:01,340] DEBUG - topic: A New Understanding of MacOS, sub topics 
-What is MacOS?
-What are the different versions of MacOS?
-What are the features of MacOS?
-How is MacOS different from other operating systems?
-What are the benefits of using MacOS?
[2022-11-17 22:43:01,340] DEBUG - getting summary for topic
[2022-11-17 22:43:01,340] INFO - message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
[2022-11-17 22:43:01,340] DEBUG - api_version=None data='{"model": "text-curie-001", "prompt": "Write a summary for the following topic in the form of a youtube description in the context of computer science:\\n\\ntopic: A New Understanding of MacOS\\n\\nsummary:", "temperature": 0, "max_tokens": 256, "top_p": 1, "frequency_penalty": 0, "presence_penalty": 0, "n": 1, "stop": "", "echo": false}' message='Post details'
[2022-11-17 22:43:01,805] DEBUG - https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 379
[2022-11-17 22:43:01,805] INFO - message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=313 request_id=4860ce566d556e35fa491c18d2b6b242 response_code=200
[2022-11-17 22:43:01,806] INFO - message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
[2022-11-17 22:43:01,806] DEBUG - api_version=None data='{"model": "text-davinci-002", "prompt": "Expand greatly upon the topic of A New Understanding of MacOS in the context of computer science summarised for a 9th grader:\\n\\n1. What is MacOS?\\n\\n", "temperature": 1, "max_tokens": 128, "top_p": 1, "frequency_penalty": 0, "presence_penalty": 0, "n": 1, "stop": ["2.", "1."], "echo": false}' message='Post details'
[2022-11-17 22:43:03,769] DEBUG - https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 404
[2022-11-17 22:43:03,770] INFO - message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1817 request_id=793eeaf348371f72f79d1ecb7ae8a273 response_code=200
[2022-11-17 22:43:03,771] INFO - message='Request to OpenAI API' method=post path=https://api.openai.com/v1/edits
[2022-11-17 22:43:03,771] DEBUG - api_version=None data='{"model": "text-davinci-edit-001", "input": "MacOS is a computer operating system created by Apple Inc. It is a successor to the original Mac OS, which was first released in 1984.", "instruction": "Replace all non-characters with their spoken counterpart. And fix grammar.", "temperature": 0, "top_p": 1}' message='Post details'
[2022-11-17 22:43:05,243] DEBUG - https://api.openai.com:443 "POST /v1/edits HTTP/1.1" 200 289
[2022-11-17 22:43:05,244] INFO - message='OpenAI API response' path=https://api.openai.com/v1/edits processing_ms=1325 request_id=8ef32a7db46816897432a54275cfaa94 response_code=200
[2022-11-17 22:43:05,244] INFO - message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
[2022-11-17 22:43:05,244] DEBUG - api_version=None data='{"model": "text-davinci-002", "prompt": "Expand greatly upon the topic of A New Understanding of MacOS in the context of computer science summarised for a 9th grader:\\n\\n1. What is MacOS?\\n\\nMacOS is a computer operating system created by Apple Incorporated. It is a successor to the original Mac OS, which was first released in 1984.\\n\\n2. What are the different versions of MacOS?\\n\\n", "temperature": 1, "max_tokens": 128, "top_p": 1, "frequency_penalty": 0, "presence_penalty": 0, "n": 1, "stop": ["3.", "2."], "echo": false}' message='Post details'
[2022-11-17 22:43:07,419] DEBUG - https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 461
[2022-11-17 22:43:07,419] INFO - message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=2026 request_id=7eb661dae52b8dea8c63ca8d2eef216c response_code=200
[2022-11-17 22:43:07,420] INFO - message='Request to OpenAI API' method=post path=https://api.openai.com/v1/edits
[2022-11-17 22:43:07,420] DEBUG - api_version=None data='{"model": "text-davinci-edit-001", "input": "There have been several different versions of MacOS over the years, each one with its own unique features and improvements. The most recent version is MacOS Sierra, which was released in 2016.", "instruction": "Replace all non-characters with their spoken counterpart. And fix grammar.", "temperature": 0, "top_p": 1}' message='Post details'
[2022-11-17 22:43:10,155] DEBUG - https://api.openai.com:443 "POST /v1/edits HTTP/1.1" 200 354
[2022-11-17 22:43:10,156] INFO - message='OpenAI API response' path=https://api.openai.com/v1/edits processing_ms=2587 request_id=8acd17ab818b9a160873e87deba55c4f response_code=200
[2022-11-17 22:43:10,156] INFO - message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
[2022-11-17 22:43:10,156] DEBUG - api_version=None data='{"model": "text-davinci-002", "prompt": "Expand greatly upon the topic of A New Understanding of MacOS in the context of computer science summarised for a 9th grader:\\n\\n1. What is MacOS?\\n\\nMacOS is a computer operating system created by Apple Incorporated. It is a successor to the original Mac OS, which was first released in 1984.\\n\\n2. What are the different versions of MacOS?\\n\\nThere have been several different versions of MacOS over the years, each one with its own unique features and improvements. The most recent version is MacOS Sierra, which was released in two thousand sixteen.\\n\\n3. What are the features of MacOS?\\n\\n", "temperature": 1, "max_tokens": 128, "top_p": 1, "frequency_penalty": 0, "presence_penalty": 0, "n": 1, "stop": ["4.", "3."], "echo": false}' message='Post details'
[2022-11-17 22:43:12,560] DEBUG - https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 526
[2022-11-17 22:43:12,560] INFO - message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=2255 request_id=5cd63ecf97fdab5c9a99b161e0a541f5 response_code=200
[2022-11-17 22:43:12,561] INFO - message='Request to OpenAI API' method=post path=https://api.openai.com/v1/edits
[2022-11-17 22:43:12,561] DEBUG - api_version=None data='{"model": "text-davinci-edit-001", "input": "Some of the most notable features of MacOS include its easy-to-use interface, its support for a wide range of software applications, and its stability. Additionally, MacOS is known for its excellent compatibility with both Macintosh hardware and peripherals.", "instruction": "Replace all non-characters with their spoken counterpart. And fix grammar.", "temperature": 0, "top_p": 1}' message='Post details'
[2022-11-17 22:43:57,996] DEBUG - https://api.openai.com:443 "POST /v1/edits HTTP/1.1" 200 8317
[2022-11-17 22:43:57,997] INFO - message='OpenAI API response' path=https://api.openai.com/v1/edits processing_ms=45289 request_id=be57be8bdc03ba37d915f46c2aa351dd response_code=200
[2022-11-17 22:43:57,998] INFO - message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
[2022-11-17 22:43:57,998] DEBUG - api_version=None data='{"model": "text-davinci-002", "prompt": "Expand greatly upon the topic of A New Understanding of MacOS in the context of computer science summarised for a 9th grader:\\n\\n1. What is MacOS?\\n\\nMacOS is a computer operating system created by Apple Incorporated. It is a successor to the original Mac OS, which was first released in 1984.\\n\\n2. What are the different versions of MacOS?\\n\\nThere have been several different versions of MacOS over the years, each one with its own unique features and improvements. The most recent version is MacOS Sierra, which was released in two thousand sixteen.\\n\\n3. What are the features of MacOS?\\n\\nSome of the most notable features of MacOS include its easytouse interface, its support for a wide range of software applications, and its stability. Additionally, MacOS is known for its excellent compatibility with both Macintosh hardware and peripherals. \\n\\nMacOS is a proprietary operating system developed by Apple Inc. It is the primary operating system for Apple\'s Macintosh line of computers. Within the market of desktop, laptop and home computers, and by web usage, it is the second most widely used desktop OS, after Microsoft Windows.\\n\\nThe original Macintosh was introduced on January 24, 1984; it featured a graphical user interface in a machine aimed at consumers. In 1998, Apple introduced Mac OS 8, the final release of the \\"classic\\" Mac OS, which had been the primary Macintosh operating system since 1984. The transition to Mac OS X, based on NeXT\'s NeXTSTEP, was smooth, with Apple releasing two updates to Mac OS 8, Mac OS 8.5 and 8.6, that added some of the technologies in Mac OS X. These updates were the last versions of the \\"classic\\" Mac OS.\\n\\nMac OS X was originally presented as the tenth major version of Apple\'s operating system for Macintosh computers; current versions of macOS retain the major version number \\"10\\". Previous Macintosh operating systems (versions of the classic Mac OS) were named using Arabic numerals, as with Mac OS 8 and Mac OS 9. The letter \\"X\\" in Mac OS X\'s name refers to the number 10, a Roman numeral. It is therefore correctly pronounced \\"ten\\" in this context. However, it is commonly pronounced like the letter \\"X\\".\\n\\nThe first version of Mac OS X, Mac OS X Server 1.0, was a transitional product, featuring an interface resembling the classic Mac OS, though it was not compatible with software designed for the older system. Consumer releases of Mac OS X included more backward compatibility. Mac OS applications could be rewritten to run natively via the Carbon API; many could also be run directly through the Classic Environment with a reduction in performance.\\n\\nIn March 2001, Apple announced the introduction of the Xserve, a rack unit server that incorporated G4 processors and the Xserve RAID storage system. In May 2001, Apple began shipping the Xserve.\\n\\nIn October 2002, Apple announced the release of the Power Mac G4 Cube, a small form factor computer with a unique design. The Cube was discontinued in July 2001.\\n\\nIn January 2002, Apple introduced Mac OS X 10.1, codenamed Puma. It was the first version of Mac OS X to use its code name as its marketing name.\\n\\nIn March 2002, Apple introduced the Power Mac G4 \\"Mirrored Drive Doors\\" (MDD), which featured a new case design with a door that covered the optical drive bay and the hard drive bay.\\n\\nIn August 2002, Apple introduced the Power Mac G5, the first 64bit desktop computer, which featured the PowerPC G5 processor.\\n\\nIn January 2003, Apple introduced the iMac G4, which featured a new design with a 15inch (380 mm) LCD display mounted on an adjustable arm attached to a white hemisphere.\\n\\nIn April 2003, Apple introduced the PowerBook G4 Titanium, which replaced the PowerBook G4.\\n\\nIn June 2003, Apple introduced the Xserve G5, the first rack unit computer to use the PowerPC G5 processor.\\n\\nIn October 2003, Apple introduced the Power Mac G5, which replaced the Power Mac G4.\\n\\nIn January 2004, Apple introduced the iBook G4, which replaced the iBook G3.\\n\\nIn April 2004, Apple introduced the Power Mac G5 \\"June 2004\\" (Dual Core), which featured two PowerPC G5 processors.\\n\\nIn June 2004, Apple introduced the Xserve G5, which replaced the Xserve G4.\\n\\nIn August 2004, Apple introduced the iMac G5, which replaced the iMac G4.\\n\\nIn October 2004, Apple introduced the PowerBook G4 (12inch), which replaced the PowerBook G4 (12inch).\\n\\nIn January 2005, Apple introduced the Mac mini, a small form factor computer intended for digital audio and home theater enthusiasts.\\n\\nIn April 2005, Apple introduced the Power Mac G5 \\"April 2005\\" (Dual Core), which replaced the Power Mac G5 \\"June 2004\\" (Dual Core).\\n\\nIn June 2005, Apple introduced the Xserve G5 (Cluster Node), which replaced the Xserve G5.\\n\\nIn October 2005, Apple introduced the Power Mac G5 \\"October 2005\\" (Dual Core), which replaced the Power Mac G5 \\"April 2005\\" (Dual Core).\\n\\nIn January 2006, Apple introduced the MacBook Pro, which replaced the PowerBook G4.\\n\\nIn April 2006, Apple introduced the Mac Pro, which replaced the Power Mac G5.\\n\\nIn August 2006, Apple introduced the iMac G5 (iSight), which replaced the iMac G5.\\n\\nIn October 2006, Apple introduced the Mac Pro \\"Quad Core\\", which replaced the Mac Pro.\\n\\nIn January 2007, Apple introduced the MacBook, which replaced the iBook G4.\\n\\nIn February 2007, Apple introduced the Apple TV, a settop video device intended to bridge the sale of content from iTunes with highdefinition televisions.\\n\\nIn August 2007, Apple introduced the iMac \\"Core 2 Duo\\", which replaced the iMac G5 (iSight).\\n\\nIn October 2007, Apple introduced the Mac Pro \\"Quad Core\\" (Early 2008), which replaced the Mac Pro \\"Quad Core\\".\\n\\nIn January 2008, Apple introduced the MacBook Air, a ultraportable notebook computer intended to be the successor to the MacBook.\\n\\nIn February 2008, Apple introduced the MacBook Pro \\"Core 2 Duo\\" (Early 2008), which replaced the MacBook Pro.\\n\\nIn March 2008, Apple introduced the MacBook Air \\"Late 2008\\", which replaced the MacBook Air.\\n\\nIn April 2008, Apple introduced the Xserve \\"Early 2008\\", which replaced the Xserve G5 (Cluster Node).\\n\\nIn October 2008, Apple introduced the MacBook \\"Late 2008 Aluminum\\", which replaced the MacBook.\\n\\nIn November 2008, Apple introduced the MacBook Pro \\"Late 2008 Aluminum\\", which replaced the MacBook Pro \\"Core 2 Duo\\" (Early 2008).\\n\\nIn January 2009, Apple introduced the MacBook \\"Late 2009\\", which replaced the MacBook \\"Late 2008 Aluminum\\".\\n\\nIn March 2009, Apple introduced the MacBook Pro \\"Late 2009\\", which replaced the MacBook Pro \\"Late 2008 Aluminum\\".\\n\\nIn April 2009, Apple introduced the Xserve \\"Early 2009\\", which replaced the Xserve \\"Early 2008\\".\\n\\nIn October 2009, Apple introduced the MacBook \\"Late 2009 White\\", which replaced the MacBook \\"Late 2009\\".\\n\\nIn November 2009, Apple introduced the MacBook Pro \\"Late 2009\\", which replaced the MacBook Pro \\"Late 2009\\".\\n\\nIn January 2010, Apple introduced the MacBook \\"Late 2009 White\\" (Mid 2010), which replaced the MacBook \\"Late 2009 White\\".\\n\\nIn March 2010, Apple introduced the iPad, a tablet computer.\\n\\nIn April 2010, Apple introduced the MacBook Pro \\"Late 2009\\" (Mid 2010), which replaced the MacBook Pro \\"Late 2009\\".\\n\\nIn May 2010, Apple introduced the iPhone 4, which replaced the iPhone 3GS.\\n\\nIn October 2010, Apple introduced the MacBook Air \\"Late 2010\\", which replaced the MacBook Air \\"Late 2008\\".\\n\\nIn November 2010, Apple introduced the MacBook Pro \\"Late 2010\\", which replaced the MacBook Pro \\"Late 2009\\" (Mid 2010).\\n\\nIn January 2011, Apple introduced the MacBook \\"Late 2009 White\\" (Mid 2011), which replaced the MacBook \\"Late 2009 White\\" (Mid 2010).\\n\\nIn February 2011, Apple introduced the MacBook Pro \\"Late 2010\\" (Mid 2011), which replaced the MacBook Pro \\"Late 2010\\".\\n\\nIn March 2011, Apple introduced the iPad 2, which replaced the iPad.\\n\\nIn October 2011, Apple introduced the MacBook Air \\"Late 2010\\" (Mid 2011), which replaced the MacBook Air \\"Late 2010\\".\\n\\nIn November 2011, Apple introduced the MacBook Pro \\"Late 2011\\", which replaced the MacBook Pro \\"Late 2010\\" (Mid 2011).\\n\\nIn March 2012, Apple introduced the iPad (3rd generation), which replaced the iPad 2.\\n\\nIn October 2012, Apple introduced the iPad mini, a smaller version of the iPad.\\n\\nIn November 2012, Apple introduced the MacBook Pro \\"Late 2011\\" (Mid 2012), which replaced the MacBook Pro \\"Late 2011\\".\\n\\nIn October 2013, Apple introduced the iPad Air, which replaced the iPad (3rd generation).\\n\\nIn October 2014, Apple introduced the iPad Air 2, which replaced the iPad Air.\\n\\nIn September 2015, Apple introduced the iPad Pro, which replaced the iPad Air 2.\\n\\nIn\\n\\n4. How is MacOS different from other operating systems?\\n\\n", "temperature": 1, "max_tokens": 128, "top_p": 1, "frequency_penalty": 0, "presence_penalty": 0, "n": 1, "stop": ["5.", "4."], "echo": false}' message='Post details'
[2022-11-17 22:44:00,387] DEBUG - https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 677
[2022-11-17 22:44:00,387] INFO - message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=2236 request_id=e548dbbf57461c338a55218341477f13 response_code=200
[2022-11-17 22:44:00,388] INFO - message='Request to OpenAI API' method=post path=https://api.openai.com/v1/edits
[2022-11-17 22:44:00,388] DEBUG - api_version=None data='{"model": "text-davinci-edit-001", "input": "MacOS is different from other operating systems in a few ways. One of the most notable differences is the way that it handles updates and liberally allows for downgrades if an update is found to be buggy. Furthermore, MacOS is designed to be more user-friendly and visually appealing than other operating systems. Additionally, MacOS generally has better hardware compatibility than other operating systems.", "instruction": "Replace all non-characters with their spoken counterpart. And fix grammar.", "temperature": 0, "top_p": 1}' message='Post details'
[2022-11-17 22:44:04,850] DEBUG - https://api.openai.com:443 "POST /v1/edits HTTP/1.1" 200 593
[2022-11-17 22:44:04,851] INFO - message='OpenAI API response' path=https://api.openai.com/v1/edits processing_ms=4320 request_id=a18621f0beaff9c51ca8fb4d0c1e8443 response_code=200
[2022-11-17 22:44:04,852] INFO - message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
[2022-11-17 22:44:04,852] DEBUG - api_version=None data='{"model": "text-davinci-002", "prompt": "Expand greatly upon the topic of A New Understanding of MacOS in the context of computer science summarised for a 9th grader:\\n\\n1. What is MacOS?\\n\\nMacOS is a computer operating system created by Apple Incorporated. It is a successor to the original Mac OS, which was first released in 1984.\\n\\n2. What are the different versions of MacOS?\\n\\nThere have been several different versions of MacOS over the years, each one with its own unique features and improvements. The most recent version is MacOS Sierra, which was released in two thousand sixteen.\\n\\n3. What are the features of MacOS?\\n\\nSome of the most notable features of MacOS include its easytouse interface, its support for a wide range of software applications, and its stability. Additionally, MacOS is known for its excellent compatibility with both Macintosh hardware and peripherals. \\n\\nMacOS is a proprietary operating system developed by Apple Inc. It is the primary operating system for Apple\'s Macintosh line of computers. Within the market of desktop, laptop and home computers, and by web usage, it is the second most widely used desktop OS, after Microsoft Windows.\\n\\nThe original Macintosh was introduced on January 24, 1984; it featured a graphical user interface in a machine aimed at consumers. In 1998, Apple introduced Mac OS 8, the final release of the \\"classic\\" Mac OS, which had been the primary Macintosh operating system since 1984. The transition to Mac OS X, based on NeXT\'s NeXTSTEP, was smooth, with Apple releasing two updates to Mac OS 8, Mac OS 8.5 and 8.6, that added some of the technologies in Mac OS X. These updates were the last versions of the \\"classic\\" Mac OS.\\n\\nMac OS X was originally presented as the tenth major version of Apple\'s operating system for Macintosh computers; current versions of macOS retain the major version number \\"10\\". Previous Macintosh operating systems (versions of the classic Mac OS) were named using Arabic numerals, as with Mac OS 8 and Mac OS 9. The letter \\"X\\" in Mac OS X\'s name refers to the number 10, a Roman numeral. It is therefore correctly pronounced \\"ten\\" in this context. However, it is commonly pronounced like the letter \\"X\\".\\n\\nThe first version of Mac OS X, Mac OS X Server 1.0, was a transitional product, featuring an interface resembling the classic Mac OS, though it was not compatible with software designed for the older system. Consumer releases of Mac OS X included more backward compatibility. Mac OS applications could be rewritten to run natively via the Carbon API; many could also be run directly through the Classic Environment with a reduction in performance.\\n\\nIn March 2001, Apple announced the introduction of the Xserve, a rack unit server that incorporated G4 processors and the Xserve RAID storage system. In May 2001, Apple began shipping the Xserve.\\n\\nIn October 2002, Apple announced the release of the Power Mac G4 Cube, a small form factor computer with a unique design. The Cube was discontinued in July 2001.\\n\\nIn January 2002, Apple introduced Mac OS X 10.1, codenamed Puma. It was the first version of Mac OS X to use its code name as its marketing name.\\n\\nIn March 2002, Apple introduced the Power Mac G4 \\"Mirrored Drive Doors\\" (MDD), which featured a new case design with a door that covered the optical drive bay and the hard drive bay.\\n\\nIn August 2002, Apple introduced the Power Mac G5, the first 64bit desktop computer, which featured the PowerPC G5 processor.\\n\\nIn January 2003, Apple introduced the iMac G4, which featured a new design with a 15inch (380 mm) LCD display mounted on an adjustable arm attached to a white hemisphere.\\n\\nIn April 2003, Apple introduced the PowerBook G4 Titanium, which replaced the PowerBook G4.\\n\\nIn June 2003, Apple introduced the Xserve G5, the first rack unit computer to use the PowerPC G5 processor.\\n\\nIn October 2003, Apple introduced the Power Mac G5, which replaced the Power Mac G4.\\n\\nIn January 2004, Apple introduced the iBook G4, which replaced the iBook G3.\\n\\nIn April 2004, Apple introduced the Power Mac G5 \\"June 2004\\" (Dual Core), which featured two PowerPC G5 processors.\\n\\nIn June 2004, Apple introduced the Xserve G5, which replaced the Xserve G4.\\n\\nIn August 2004, Apple introduced the iMac G5, which replaced the iMac G4.\\n\\nIn October 2004, Apple introduced the PowerBook G4 (12inch), which replaced the PowerBook G4 (12inch).\\n\\nIn January 2005, Apple introduced the Mac mini, a small form factor computer intended for digital audio and home theater enthusiasts.\\n\\nIn April 2005, Apple introduced the Power Mac G5 \\"April 2005\\" (Dual Core), which replaced the Power Mac G5 \\"June 2004\\" (Dual Core).\\n\\nIn June 2005, Apple introduced the Xserve G5 (Cluster Node), which replaced the Xserve G5.\\n\\nIn October 2005, Apple introduced the Power Mac G5 \\"October 2005\\" (Dual Core), which replaced the Power Mac G5 \\"April 2005\\" (Dual Core).\\n\\nIn January 2006, Apple introduced the MacBook Pro, which replaced the PowerBook G4.\\n\\nIn April 2006, Apple introduced the Mac Pro, which replaced the Power Mac G5.\\n\\nIn August 2006, Apple introduced the iMac G5 (iSight), which replaced the iMac G5.\\n\\nIn October 2006, Apple introduced the Mac Pro \\"Quad Core\\", which replaced the Mac Pro.\\n\\nIn January 2007, Apple introduced the MacBook, which replaced the iBook G4.\\n\\nIn February 2007, Apple introduced the Apple TV, a settop video device intended to bridge the sale of content from iTunes with highdefinition televisions.\\n\\nIn August 2007, Apple introduced the iMac \\"Core 2 Duo\\", which replaced the iMac G5 (iSight).\\n\\nIn October 2007, Apple introduced the Mac Pro \\"Quad Core\\" (Early 2008), which replaced the Mac Pro \\"Quad Core\\".\\n\\nIn January 2008, Apple introduced the MacBook Air, a ultraportable notebook computer intended to be the successor to the MacBook.\\n\\nIn February 2008, Apple introduced the MacBook Pro \\"Core 2 Duo\\" (Early 2008), which replaced the MacBook Pro.\\n\\nIn March 2008, Apple introduced the MacBook Air \\"Late 2008\\", which replaced the MacBook Air.\\n\\nIn April 2008, Apple introduced the Xserve \\"Early 2008\\", which replaced the Xserve G5 (Cluster Node).\\n\\nIn October 2008, Apple introduced the MacBook \\"Late 2008 Aluminum\\", which replaced the MacBook.\\n\\nIn November 2008, Apple introduced the MacBook Pro \\"Late 2008 Aluminum\\", which replaced the MacBook Pro \\"Core 2 Duo\\" (Early 2008).\\n\\nIn January 2009, Apple introduced the MacBook \\"Late 2009\\", which replaced the MacBook \\"Late 2008 Aluminum\\".\\n\\nIn March 2009, Apple introduced the MacBook Pro \\"Late 2009\\", which replaced the MacBook Pro \\"Late 2008 Aluminum\\".\\n\\nIn April 2009, Apple introduced the Xserve \\"Early 2009\\", which replaced the Xserve \\"Early 2008\\".\\n\\nIn October 2009, Apple introduced the MacBook \\"Late 2009 White\\", which replaced the MacBook \\"Late 2009\\".\\n\\nIn November 2009, Apple introduced the MacBook Pro \\"Late 2009\\", which replaced the MacBook Pro \\"Late 2009\\".\\n\\nIn January 2010, Apple introduced the MacBook \\"Late 2009 White\\" (Mid 2010), which replaced the MacBook \\"Late 2009 White\\".\\n\\nIn March 2010, Apple introduced the iPad, a tablet computer.\\n\\nIn April 2010, Apple introduced the MacBook Pro \\"Late 2009\\" (Mid 2010), which replaced the MacBook Pro \\"Late 2009\\".\\n\\nIn May 2010, Apple introduced the iPhone 4, which replaced the iPhone 3GS.\\n\\nIn October 2010, Apple introduced the MacBook Air \\"Late 2010\\", which replaced the MacBook Air \\"Late 2008\\".\\n\\nIn November 2010, Apple introduced the MacBook Pro \\"Late 2010\\", which replaced the MacBook Pro \\"Late 2009\\" (Mid 2010).\\n\\nIn January 2011, Apple introduced the MacBook \\"Late 2009 White\\" (Mid 2011), which replaced the MacBook \\"Late 2009 White\\" (Mid 2010).\\n\\nIn February 2011, Apple introduced the MacBook Pro \\"Late 2010\\" (Mid 2011), which replaced the MacBook Pro \\"Late 2010\\".\\n\\nIn March 2011, Apple introduced the iPad 2, which replaced the iPad.\\n\\nIn October 2011, Apple introduced the MacBook Air \\"Late 2010\\" (Mid 2011), which replaced the MacBook Air \\"Late 2010\\".\\n\\nIn November 2011, Apple introduced the MacBook Pro \\"Late 2011\\", which replaced the MacBook Pro \\"Late 2010\\" (Mid 2011).\\n\\nIn March 2012, Apple introduced the iPad (3rd generation), which replaced the iPad 2.\\n\\nIn October 2012, Apple introduced the iPad mini, a smaller version of the iPad.\\n\\nIn November 2012, Apple introduced the MacBook Pro \\"Late 2011\\" (Mid 2012), which replaced the MacBook Pro \\"Late 2011\\".\\n\\nIn October 2013, Apple introduced the iPad Air, which replaced the iPad (3rd generation).\\n\\nIn October 2014, Apple introduced the iPad Air 2, which replaced the iPad Air.\\n\\nIn September 2015, Apple introduced the iPad Pro, which replaced the iPad Air 2.\\n\\nIn\\n\\n4. How is MacOS different from other operating systems?\\n\\nMacOS is different from other operating systems in a few ways. One of the most notable differences is the way that it handles updates and liberally allows for downgrades if an update is found to be buggy. Furthermore, MacOS is designed to be more userfriendly and visually appealing than other operating systems. Additionally, MacOS generally has better hardware compatibility than other operating systems. MacOS is also known for its security.\\n\\n5. What are the benefits of using MacOS?\\n\\n", "temperature": 1, "max_tokens": 128, "top_p": 1, "frequency_penalty": 0, "presence_penalty": 0, "n": 1, "stop": ["6.", "5."], "echo": false}' message='Post details'
[2022-11-17 22:44:06,588] DEBUG - https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 429
[2022-11-17 22:44:06,589] INFO - message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1591 request_id=10230a7fddce3485527358f3aa476e52 response_code=200
[2022-11-17 22:44:06,589] INFO - message='Request to OpenAI API' method=post path=https://api.openai.com/v1/edits
[2022-11-17 22:44:06,589] DEBUG - api_version=None data='{"model": "text-davinci-edit-001", "input": "MacOS is known for its userfriendliness, stability, and security. Additionally, MacOS is compatible with a wide range of software applications and peripherals.", "instruction": "Replace all non-characters with their spoken counterpart. And fix grammar.", "temperature": 0, "top_p": 1}' message='Post details'
[2022-11-17 22:44:08,617] DEBUG - https://api.openai.com:443 "POST /v1/edits HTTP/1.1" 200 306
[2022-11-17 22:44:08,618] INFO - message='OpenAI API response' path=https://api.openai.com/v1/edits processing_ms=1883 request_id=ceccccdc86a13c4bd47303423eff1828 response_code=200
[2022-11-17 22:44:08,620] DEBUG - Starting new HTTPS connection (1): www.googleapis.com:443
[2022-11-17 22:44:08,778] DEBUG - https://www.googleapis.com:443 "GET /youtube/v3/playlists?part=id&id=UC_x5XG1OV2P6uZZ5FSM9Ttw&key=AIzaSyDfv2ISoNjVh2oX2JRJUQ1loS-voHH3GlI&maxResults=2 HTTP/1.1" 200 None
[2022-11-17 22:44:08,782] DEBUG - Starting new HTTPS connection (1): www.googleapis.com:443
[2022-11-17 22:44:09,350] DEBUG - https://www.googleapis.com:443 "GET /youtube/v3/search?part=snippet&type=video&maxResults=50&order=relevance&key=AIzaSyDfv2ISoNjVh2oX2JRJUQ1loS-voHH3GlI&q=A%20New%20Understanding%20of%20MacOS&publishedAfter=2000-01-01T00:00:00Z&publishedBefore=3000-01-01T00:00:00Z HTTP/1.1" 200 None
[2022-11-17 22:44:09,355] DEBUG - Starting new HTTPS connection (1): www.googleapis.com:443
[2022-11-17 22:44:09,439] DEBUG - https://www.googleapis.com:443 "GET /youtube/v3/videos?key=AIzaSyDfv2ISoNjVh2oX2JRJUQ1loS-voHH3GlI&fields=items(snippet(description,tags))&part=snippet&id=uXu4TgKyth0 HTTP/1.1" 200 None
[2022-11-17 22:44:09,444] DEBUG - Starting new HTTPS connection (1): www.googleapis.com:443
[2022-11-17 22:44:09,526] DEBUG - https://www.googleapis.com:443 "GET /youtube/v3/videos?key=AIzaSyDfv2ISoNjVh2oX2JRJUQ1loS-voHH3GlI&fields=items(snippet(description,tags))&part=snippet&id=ZWrGZyRJFHU HTTP/1.1" 200 None
[2022-11-17 22:44:09,530] DEBUG - Starting new HTTPS connection (1): www.googleapis.com:443
[2022-11-17 22:44:09,593] DEBUG - https://www.googleapis.com:443 "GET /youtube/v3/videos?key=AIzaSyDfv2ISoNjVh2oX2JRJUQ1loS-voHH3GlI&fields=items(snippet(description,tags))&part=snippet&id=UQ6RqMioOkU HTTP/1.1" 200 None
[2022-11-17 22:44:09,597] DEBUG - Starting new HTTPS connection (1): www.googleapis.com:443
[2022-11-17 22:44:09,665] DEBUG - https://www.googleapis.com:443 "GET /youtube/v3/videos?key=AIzaSyDfv2ISoNjVh2oX2JRJUQ1loS-voHH3GlI&fields=items(snippet(description,tags))&part=snippet&id=S15FVwbHEqo HTTP/1.1" 200 None
[2022-11-17 22:44:09,669] DEBUG - Starting new HTTPS connection (1): www.googleapis.com:443
[2022-11-17 22:44:09,726] DEBUG - https://www.googleapis.com:443 "GET /youtube/v3/videos?key=AIzaSyDfv2ISoNjVh2oX2JRJUQ1loS-voHH3GlI&fields=items(snippet(description,tags))&part=snippet&id=rn11ZAi9z8Y HTTP/1.1" 200 None
[2022-11-17 22:44:09,731] DEBUG - Starting new HTTPS connection (1): www.googleapis.com:443
[2022-11-17 22:44:09,799] DEBUG - https://www.googleapis.com:443 "GET /youtube/v3/videos?key=AIzaSyDfv2ISoNjVh2oX2JRJUQ1loS-voHH3GlI&fields=items(snippet(description,tags))&part=snippet&id=VhROph79ruU HTTP/1.1" 200 None
[2022-11-17 22:44:09,805] DEBUG - Starting new HTTPS connection (1): www.googleapis.com:443
[2022-11-17 22:44:09,895] DEBUG - https://www.googleapis.com:443 "GET /youtube/v3/videos?key=AIzaSyDfv2ISoNjVh2oX2JRJUQ1loS-voHH3GlI&fields=items(snippet(description,tags))&part=snippet&id=ktTNcj0fAM4 HTTP/1.1" 200 None
[2022-11-17 22:44:09,899] DEBUG - Starting new HTTPS connection (1): www.googleapis.com:443
[2022-11-17 22:44:09,964] DEBUG - https://www.googleapis.com:443 "GET /youtube/v3/videos?key=AIzaSyDfv2ISoNjVh2oX2JRJUQ1loS-voHH3GlI&fields=items(snippet(description,tags))&part=snippet&id=m4j9KCRw96w HTTP/1.1" 200 None
[2022-11-17 22:44:09,970] DEBUG - Starting new HTTPS connection (1): www.googleapis.com:443
[2022-11-17 22:44:10,034] DEBUG - https://www.googleapis.com:443 "GET /youtube/v3/videos?key=AIzaSyDfv2ISoNjVh2oX2JRJUQ1loS-voHH3GlI&fields=items(snippet(description,tags))&part=snippet&id=OMCzROUlJTE HTTP/1.1" 200 None
[2022-11-17 22:44:10,039] DEBUG - Starting new HTTPS connection (1): www.googleapis.com:443
[2022-11-17 22:44:10,106] DEBUG - https://www.googleapis.com:443 "GET /youtube/v3/videos?key=AIzaSyDfv2ISoNjVh2oX2JRJUQ1loS-voHH3GlI&fields=items(snippet(description,tags))&part=snippet&id=q5D55G7Ejs8 HTTP/1.1" 200 None
[2022-11-17 22:44:10,111] DEBUG - Starting new HTTPS connection (1): www.googleapis.com:443
[2022-11-17 22:44:10,165] DEBUG - https://www.googleapis.com:443 "GET /youtube/v3/videos?key=AIzaSyDfv2ISoNjVh2oX2JRJUQ1loS-voHH3GlI&fields=items(snippet(description,tags))&part=snippet&id=F4TA8Wtf8XM HTTP/1.1" 200 None
[2022-11-17 22:44:10,168] DEBUG - Starting new HTTPS connection (1): www.googleapis.com:443
[2022-11-17 22:44:10,235] DEBUG - https://www.googleapis.com:443 "GET /youtube/v3/videos?key=AIzaSyDfv2ISoNjVh2oX2JRJUQ1loS-voHH3GlI&fields=items(snippet(description,tags))&part=snippet&id=caYfZWyN4CQ HTTP/1.1" 200 None
[2022-11-17 22:44:10,239] DEBUG - Starting new HTTPS connection (1): www.googleapis.com:443
[2022-11-17 22:44:10,296] DEBUG - https://www.googleapis.com:443 "GET /youtube/v3/videos?key=AIzaSyDfv2ISoNjVh2oX2JRJUQ1loS-voHH3GlI&fields=items(snippet(description,tags))&part=snippet&id=0TD96VTf0Xs HTTP/1.1" 200 None
[2022-11-17 22:44:10,301] DEBUG - Starting new HTTPS connection (1): www.googleapis.com:443
[2022-11-17 22:44:10,361] DEBUG - https://www.googleapis.com:443 "GET /youtube/v3/videos?key=AIzaSyDfv2ISoNjVh2oX2JRJUQ1loS-voHH3GlI&fields=items(snippet(description,tags))&part=snippet&id=BGGOn-H7s3Q HTTP/1.1" 200 None
[2022-11-17 22:44:10,366] DEBUG - Starting new HTTPS connection (1): www.googleapis.com:443
[2022-11-17 22:44:10,421] DEBUG - https://www.googleapis.com:443 "GET /youtube/v3/videos?key=AIzaSyDfv2ISoNjVh2oX2JRJUQ1loS-voHH3GlI&fields=items(snippet(description,tags))&part=snippet&id=aNnNBfcJzX4 HTTP/1.1" 200 None
[2022-11-17 22:44:10,426] DEBUG - Starting new HTTPS connection (1): www.googleapis.com:443
[2022-11-17 22:44:10,509] DEBUG - https://www.googleapis.com:443 "GET /youtube/v3/videos?key=AIzaSyDfv2ISoNjVh2oX2JRJUQ1loS-voHH3GlI&fields=items(snippet(description,tags))&part=snippet&id=AYRxDoUxcfQ HTTP/1.1" 200 None
[2022-11-17 22:44:10,514] DEBUG - Starting new HTTPS connection (1): www.googleapis.com:443
[2022-11-17 22:44:10,591] DEBUG - https://www.googleapis.com:443 "GET /youtube/v3/videos?key=AIzaSyDfv2ISoNjVh2oX2JRJUQ1loS-voHH3GlI&fields=items(snippet(description,tags))&part=snippet&id=psL_5RIBqnY HTTP/1.1" 200 None
[2022-11-17 22:44:10,595] DEBUG - Starting new HTTPS connection (1): www.googleapis.com:443
[2022-11-17 22:44:10,676] DEBUG - https://www.googleapis.com:443 "GET /youtube/v3/videos?key=AIzaSyDfv2ISoNjVh2oX2JRJUQ1loS-voHH3GlI&fields=items(snippet(description,tags))&part=snippet&id=p4TvnsR7YGA HTTP/1.1" 200 None
[2022-11-17 22:44:10,680] DEBUG - Starting new HTTPS connection (1): www.googleapis.com:443
[2022-11-17 22:44:10,745] DEBUG - https://www.googleapis.com:443 "GET /youtube/v3/videos?key=AIzaSyDfv2ISoNjVh2oX2JRJUQ1loS-voHH3GlI&fields=items(snippet(description,tags))&part=snippet&id=y-JqH1M4Ya8 HTTP/1.1" 200 None
[2022-11-17 22:44:10,750] DEBUG - Starting new HTTPS connection (1): www.googleapis.com:443
[2022-11-17 22:44:10,817] DEBUG - https://www.googleapis.com:443 "GET /youtube/v3/videos?key=AIzaSyDfv2ISoNjVh2oX2JRJUQ1loS-voHH3GlI&fields=items(snippet(description,tags))&part=snippet&id=GksehGJccqQ HTTP/1.1" 200 None
[2022-11-17 22:44:10,822] DEBUG - Starting new HTTPS connection (1): www.googleapis.com:443
[2022-11-17 22:44:10,885] DEBUG - https://www.googleapis.com:443 "GET /youtube/v3/videos?key=AIzaSyDfv2ISoNjVh2oX2JRJUQ1loS-voHH3GlI&fields=items(snippet(description,tags))&part=snippet&id=9Bh5v-DiNDA HTTP/1.1" 200 None
[2022-11-17 22:44:10,890] DEBUG - Starting new HTTPS connection (1): www.googleapis.com:443
[2022-11-17 22:44:10,960] DEBUG - https://www.googleapis.com:443 "GET /youtube/v3/videos?key=AIzaSyDfv2ISoNjVh2oX2JRJUQ1loS-voHH3GlI&fields=items(snippet(description,tags))&part=snippet&id=dlZs0GMRqT0 HTTP/1.1" 200 None
[2022-11-17 22:44:10,965] DEBUG - Starting new HTTPS connection (1): www.googleapis.com:443
[2022-11-17 22:44:11,031] DEBUG - https://www.googleapis.com:443 "GET /youtube/v3/videos?key=AIzaSyDfv2ISoNjVh2oX2JRJUQ1loS-voHH3GlI&fields=items(snippet(description,tags))&part=snippet&id=kYpoXcunhd8 HTTP/1.1" 200 None
[2022-11-17 22:44:11,036] DEBUG - Starting new HTTPS connection (1): www.googleapis.com:443
[2022-11-17 22:44:11,126] DEBUG - https://www.googleapis.com:443 "GET /youtube/v3/videos?key=AIzaSyDfv2ISoNjVh2oX2JRJUQ1loS-voHH3GlI&fields=items(snippet(description,tags))&part=snippet&id=8r22tJNYtWg HTTP/1.1" 200 None
[2022-11-17 22:44:11,131] DEBUG - Starting new HTTPS connection (1): www.googleapis.com:443
[2022-11-17 22:44:11,193] DEBUG - https://www.googleapis.com:443 "GET /youtube/v3/videos?key=AIzaSyDfv2ISoNjVh2oX2JRJUQ1loS-voHH3GlI&fields=items(snippet(description,tags))&part=snippet&id=EmWxvNGXxHY HTTP/1.1" 200 None
[2022-11-17 22:44:11,196] DEBUG - Hashtags ['#appleevent', '#wwdc22', '#applekeynote', '#descriptstoryboard', '#joelfeld', '#learnwithjoel', '#externalharddrive', '#diskformatting', '#appleevent', '#wwdc21', '#applekeynote', '#bbc', '#windows', '#windows11', '#windows12', '#concept', '#davidbowie', '#lazarus', '#rock']
[2022-11-17 22:44:11,196] DEBUG - Top Hashtags ['#appleevent', '#applekeynote', '#wwdc22', '#descriptstoryboard', '#joelfeld']
[2022-11-17 22:44:11,196] DEBUG - Tags ['macos', 'os', 'operating system', 'macintosh', 'annoying', 'apple', 'osx', 'os x', 'ventura', 'corner snapping', 'volume mixer', 'multi monitor', 'full screen', 'magic mouse', 'scroll direction', 'options', 'macos ventura', 'ventura', 'macos 13.0.1', 'macos 13.0.1', 'everything new in ventura 13.0.1', 'macos update', 'mac os ventura', 'macos ventura 13.0.1 features', 'macos 13.0.1 ventura', 'macos ventura 13.0.1 update', 'ventura 13.0.1', 'ventura 13.0.1 update', 'ventura update', '13.0.1', 'everything new in macos ventura 13.0.1', 'mattkc', 'kc', 'matt kc', 'macos training', 'lynda.com macos mojave essential training', 'learn mac operating system in hindi', 'learn mac operating system in urdu', 'basic mac tutorial', 'hindi', 'urdu', 'mac tutorial for beginners', 'how to use a mac', 'laptop', 'mac operating system in hindi', 'understanding macos desktop', 'beginner', 'new users', 'navigating mac desktop', 'dummies', 'learn macos x', 'basic introduction to mac os x', 'macos full course', 'macintosh', 'macos menu', 'dock', 'aobut this mac', 'mac tutorial for pc users and beginners', 'mac', 'macrumors show', 'john gruber', 'john gruber talk show', 'john gruber daring fireball', 'macos ventura review', 'macos ventura stage manager', 'macos ventura features', 'macos ventura', 'new 2022 macbook pro', 'm2 macbook pro', 'imac pro 2022', 'imac pro 2023', 'm2 imac pro', 'm2 imac', 'm2 14', 'macbook', 'pro', 'm2 16', 'macbook', 'pro', 'm2 pro', 'm2 max', 'apple', 'mac', 'mac pro m2', 'm2 ultra mac pro', '2023 mac pro', 'm2 extreme', 'm2 extreme mac pro', 'mac rumors', 'apple', 'mac', 'os', 'x', 'macworld', 'panther', '10.3', 'tiger', 'jaguar', 'osx86', 'world', 'wide', "developer's", 'conference', 'unix', 'darwin', 'expose', 'cnet', 'technology', 'tech', 'review', 'apple', 'macos', 'mac os', 'big sur', 'macos big sur', 'mac os big sur', 'macos big sur review', 'macos 11', 'macos big sur features', 'macos 11 review', 'mac', 'macos big sur review 2020', 'macos big sur top features', 'apple macos', 'macos 11 big sur', 'review', 'widgets', 'macos big sure changes', 'macos 11 features', 'macos big sur top changes', 'macos big sur release', 'safari', 'macos big sur new features', 'control center', 'jason hiner', 'macos', 'update', 'easy', 'hackintosh', 'mist', 'mac app', 'installer', 'latest macos', 'recommended', 'useful mac app', 'ventura', 'monterey', 'big sur', 'how to download ventura', 'how to downoload monterrey', 'how to download catalina', 'how to download ventura 2022 november', 'how to use mist mac os', 'mist software', 'how to use mist macos', 'apple', 'apple event', 'apple keynote', 'apple special event', 'apple wwdc', 'june', 'developers', 'worldwide developers conference', '2022', 'wwdc', 'wwdc 2022', 'keynote', 'macbook air', '13 inch macbook pro', 'ios 16', 'ipados 16', 'macos ventura', 'watchos 9', 'm2', 'mac time saving tips', 'mac time saving tips and trick', 'mac time saving tips and tricks', 'macos time saving tips', 'get more done with your mac', 'time saving tips for mac', 'time saving hacks for mac', 'apple', 'ios', 'osx', 'photo', 'photography', 'icloud', 'ipad', 'iphone', 'learn', 'photos', 'imovie', 'finder', 'mac basics', 'apple tutorials', 'fcpx', 'ios', 'icloud', 'apple photos', 'format external hard drive', 'how to format a mac', 'format drive for mac', 'format external drive for mac', 'apple file system', 'apfs', 'snapshots', 'fat32', 'hard drive', 'sandisk', 'external hard drive', 'exfat', 'mac os extended', 'encryption', 'ms-dos', 'fat', 'partitions', 'volumes', 'time machine', 'icloud backup', 'partition schemes', 'disk utility', 'how to use time machine', 'ntfs', 'tutorial', 'apple', 'apple event', 'apple keynote', 'apple special event', 'apple wwdc', 'june', 'developers', 'world wide developers conference', '2021', 'wwdc', 'wwdc 2021', 'iphone', 'keynote', 'mac', 'imac', 'ipad', 'm1', 'ios', 'ipad pro', 'swiftui', 'swift', 'ios 15', 'm1x macbook pro', 'm1x', 'comedy', 'bbc', 'apple', 'mac', 'computer', 'laptop', 'funny', 'television', 'nano', 'mac mini', 'iphone mini', 'security', 'github', 'devops', 'owasp', 'codeql', 'apple', 'wwdc', 'wwdc 2019', 'worldwide developer conference', 'mac pro', 'mac pro 2019', 'pro display xdr', 'ios', 'ios 13', 'ipados', 'new ios', 'dark mode', 'dark mode ios', 'apple display', 'iphone display', 'ipad display', 'macos catalina', 'watchos 6', 'memoji', 'coders', 'developers', 'engineers', 'intensity extreme', 'mac', 'apple', 'thunderbolt tutorial', 'port', 'black magic design', 'black magic intensity extreme', 'david bowie', 'david bowie lazarus', 'lazarus david bowie', 'lazarus', 'bowie', 'bowie lazarus', 'david bowie blackstar', 'lazarus bowie', 'david bowie last song', 'blackstar', 'black star david bowie', 'blackstar david bowie', 'bowie blackstar', 'black star', 'bowie blackstar full album', 'heroes', 'rebel rebel', 'starman', 'space oddity', 'lou reed', 'queen', 'roxy music', 'rock', 'classic rock', 'david bowie', 'iso/columbia', 'lazarus', 'rock', 'windows', 'windows 11', 'windows 10', 'introducing', 'microsoft', 'windows xp', 'windows 7', 'windows vista', 'windows 95', '2018 edition', 'update', 'new', 'start', 'dark mode', 'design', 'fluent design', 'file explorer', 'modern', 'consistent', 'surface', 'surface go', 'macbook', 'macbook air', 'surface book', 'surface pro', 'surface laptop', 'surface studio', 'macbook pro', 'mac os', 'apple', 'ios', 'ipad pro', 'avdan', 'concept', 'edition', 'kamer kaan avdan', 'review', 'hands on', 'diane sawyer special', 'diane sawyer interviews', 'diane sawyer hidden america', 'diane sawyer 20/20', 'documentary', 'abc news', 'prison', 'jail', 'women in prison', 'diane sawyer', 'behind bars', 'diane sawyer prison', 'women in prison', 'reality', 'prison life', 'tour', 'prison fight', 'freedom', 'inmates', 'america', 'this is america', 'youngest inmates', 'juvenile', 'interview', 'windows 10', 'window 10 တင်နည်း', 'windows 10 setup', 'window 10 new', 'windows 10 new update', 'windows 10 new ui', 'window 10 new concept', 'windows 11 official trailer', 'windows 11 download', 'new concept windows 11(meet the next generation of windows)', 'solution4tech', 'windows 11', 'windows 11 concept']
[2022-11-17 22:44:11,198] DEBUG - Top Tags ['apple', 'mac', 'ios', 'macos', 'ventura', 'macos ventura', 'macbook', 'review', 'developers', 'wwdc', 'os', 'macintosh', 'osx', 'macos 13.0.1', 'laptop', 'pro', 'mac os', 'big sur', 'update', 'apple event', 'apple keynote', 'apple special event', 'apple wwdc', 'june', 'keynote', 'macbook air', 'icloud']
[2022-11-17 22:44:27,057] CRITICAL - Failed to generate audio
[2022-11-17 22:44:27,058] INFO - Getting video script.
[2022-11-17 22:44:27,058] INFO - message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
[2022-11-17 22:44:27,058] DEBUG - api_version=None data='{"model": "text-davinci-002", "prompt": "Write a list of unique and interesting keywords relating to basic computer science:\\n\\n-", "temperature": 1, "max_tokens": 128, "top_p": 1, "frequency_penalty": 0, "presence_penalty": 0, "n": 1, "stop": "", "echo": false}' message='Post details'
[2022-11-17 22:44:30,062] DEBUG - https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 484
[2022-11-17 22:44:30,063] INFO - message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=2853 request_id=af184042bc8d37b7934ab3207243b485 response_code=200
[2022-11-17 22:44:30,064] INFO - message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
[2022-11-17 22:44:30,065] DEBUG - api_version=None data='{"model": "text-curie-001", "prompt": "Write a list of 5 interesting beginner topics on where user interface design is used in the context of computer science:\\n-", "temperature": 0.7, "max_tokens": 256, "top_p": 1, "frequency_penalty": 0, "presence_penalty": 0, "n": 1, "stop": "", "echo": false}' message='Post details'
[2022-11-17 22:44:30,581] DEBUG - https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 471
[2022-11-17 22:44:30,582] INFO - message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=361 request_id=ce224ec39e79431988a9a7d5513f1979 response_code=200
[2022-11-17 22:44:30,582] INFO - message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
[2022-11-17 22:44:30,582] DEBUG - api_version=None data='{"model": "text-davinci-002", "prompt": "Write a short, unique and interesting title relating to the theory of User interface design in general in the form of a video essay title without involving numbers:", "temperature": 1, "max_tokens": 20, "top_p": 1, "frequency_penalty": 0, "presence_penalty": 0, "n": 1, "stop": "", "echo": false}' message='Post details'
[2022-11-17 22:44:31,529] DEBUG - https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 333
[2022-11-17 22:44:31,529] INFO - message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=795 request_id=8c60fbebf0afa4ed31ff33748f170d5d response_code=200
[2022-11-17 22:44:31,548] DEBUG - Keyword user interface design, Topics ['User interface design in general', 'User interface design for mobile devices', 'User interface design for web applications', 'User interface design for desktop applications', 'User interface design for game consoles'], Topic Arresting user interface design: How to make your product stand out
[2022-11-17 22:44:31,548] INFO - message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
[2022-11-17 22:44:31,548] DEBUG - api_version=None data='{"model": "text-davinci-002", "prompt": "Write a list of beginner topics relating to what is Arresting user interface design: How to make your product stand out in the context of computer science:\\n\\n", "temperature": 0, "max_tokens": 256, "top_p": 1, "frequency_penalty": 0, "presence_penalty": 0, "n": 1, "stop": "", "echo": false}' message='Post details'
[2022-11-17 22:44:34,369] DEBUG - https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 580
[2022-11-17 22:44:34,370] INFO - message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=2670 request_id=8cf0218d49e4e850b36c2f5a9e8babe8 response_code=200
[2022-11-17 22:44:34,370] DEBUG - topic: Arresting user interface design: How to make your product stand out, sub topics 
-What is a user interface?
-What are the different types of user interfaces?
-What factors should you consider when designing a user interface?
-What are some common user interface design mistakes?
-How can you make your user interface design more user-friendly?
-What are some trends in user interface design?
[2022-11-17 22:44:34,370] DEBUG - getting summary for topic
[2022-11-17 22:44:34,371] INFO - message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
[2022-11-17 22:44:34,371] DEBUG - api_version=None data='{"model": "text-curie-001", "prompt": "Write a summary for the following topic in the form of a youtube description in the context of computer science:\\n\\ntopic: Arresting user interface design: How to make your product stand out\\n\\nsummary:", "temperature": 0, "max_tokens": 256, "top_p": 1, "frequency_penalty": 0, "presence_penalty": 0, "n": 1, "stop": "", "echo": false}' message='Post details'
[2022-11-17 22:44:35,074] DEBUG - https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 530
[2022-11-17 22:44:35,075] INFO - message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=550 request_id=4e253ab6d7c0b30e69fe98073dac8d52 response_code=200
[2022-11-17 22:44:35,076] INFO - message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
[2022-11-17 22:44:35,076] DEBUG - api_version=None data='{"model": "text-davinci-002", "prompt": "Expand greatly upon the topic of Arresting user interface design: How to make your product stand out in the context of computer science summarised for a 9th grader:\\n\\n1. What is a user interface?\\n\\n", "temperature": 1, "max_tokens": 128, "top_p": 1, "frequency_penalty": 0, "presence_penalty": 0, "n": 1, "stop": ["2.", "1."], "echo": false}' message='Post details'
[2022-11-17 22:44:35,640] DEBUG - https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 263
[2022-11-17 22:44:35,641] INFO - message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=415 request_id=984e69f001c96b3d0f993c596cb9a41a response_code=200
[2022-11-17 22:44:35,641] CRITICAL - Failed to generate video script
[2022-11-17 22:44:35,641] INFO - Getting video script.
[2022-11-17 22:44:35,641] INFO - message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
[2022-11-17 22:44:35,642] DEBUG - api_version=None data='{"model": "text-davinci-002", "prompt": "Write a list of unique and interesting keywords relating to basic computer science:\\n\\n-", "temperature": 1, "max_tokens": 128, "top_p": 1, "frequency_penalty": 0, "presence_penalty": 0, "n": 1, "stop": "", "echo": false}' message='Post details'
[2022-11-17 22:44:37,712] DEBUG - https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 534
[2022-11-17 22:44:37,712] INFO - message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1917 request_id=0398ee325e3f5c6708ee4d315fccabd8 response_code=200
[2022-11-17 22:44:37,712] INFO - message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
[2022-11-17 22:44:37,712] DEBUG - api_version=None data='{"model": "text-curie-001", "prompt": "Write a list of 5 interesting beginner topics on where Computer Science for Beginners is used in the context of computer science:\\n-", "temperature": 0.7, "max_tokens": 256, "top_p": 1, "frequency_penalty": 0, "presence_penalty": 0, "n": 1, "stop": "", "echo": false}' message='Post details'
[2022-11-17 22:44:38,104] DEBUG - https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 354
[2022-11-17 22:44:38,105] INFO - message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=238 request_id=d55d10a1be2f03239bb841ba826bd323 response_code=200
[2022-11-17 22:44:38,105] INFO - message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
[2022-11-17 22:44:38,105] DEBUG - api_version=None data='{"model": "text-davinci-002", "prompt": "Write a short, unique and interesting title relating to the theory of Programming in the form of a video essay title without involving numbers:", "temperature": 1, "max_tokens": 20, "top_p": 1, "frequency_penalty": 0, "presence_penalty": 0, "n": 1, "stop": "", "echo": false}' message='Post details'
[2022-11-17 22:44:38,879] DEBUG - https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 286
[2022-11-17 22:44:38,880] INFO - message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=623 request_id=3c72bda30b992925f93b96500e6761d1 response_code=200
[2022-11-17 22:44:38,895] DEBUG - Keyword Computer Science for Beginners, Topics ['Machine learning ', 'Database management ', 'Computer security ', 'Web development ', 'Programming'], Topic How Programming Works
[2022-11-17 22:44:38,895] INFO - message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
[2022-11-17 22:44:38,895] DEBUG - api_version=None data='{"model": "text-davinci-002", "prompt": "Write a list of beginner topics relating to what is How Programming Works in the context of computer science:\\n\\n", "temperature": 0, "max_tokens": 256, "top_p": 1, "frequency_penalty": 0, "presence_penalty": 0, "n": 1, "stop": "", "echo": false}' message='Post details'
[2022-11-17 22:44:42,044] DEBUG - https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 584
[2022-11-17 22:44:42,044] INFO - message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=3000 request_id=d246d5776450bd4910a83c6060769919 response_code=200
[2022-11-17 22:44:42,045] DEBUG - topic: How Programming Works, sub topics 
1. How does a computer program work?
2. How does a computer execute a program?
3. How is a program stored in memory?
4. How does a computer read a program?
5. What is a compiler?
6. What is an interpreter?
7. What is a linker?
8. What is a loader?
9. What is a virtual machine?
10. What is an operating system?
[2022-11-17 22:44:42,045] DEBUG - getting summary for topic
[2022-11-17 22:44:42,045] INFO - message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
[2022-11-17 22:44:42,045] DEBUG - api_version=None data='{"model": "text-curie-001", "prompt": "Write a summary for the following topic in the form of a youtube description in the context of computer science:\\n\\ntopic: How Programming Works\\n\\nsummary:", "temperature": 0, "max_tokens": 256, "top_p": 1, "frequency_penalty": 0, "presence_penalty": 0, "n": 1, "stop": "", "echo": false}' message='Post details'
[2022-11-17 22:44:42,669] DEBUG - https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 495
[2022-11-17 22:44:42,670] INFO - message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=457 request_id=29ac324476d031d49e970a5600be4935 response_code=200
[2022-11-17 22:44:42,670] INFO - message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
[2022-11-17 22:44:42,671] DEBUG - api_version=None data='{"model": "text-davinci-002", "prompt": "Expand greatly upon the topic of How Programming Works in the context of computer science summarised for a 9th grader:\\n\\n1. 1. How does a computer program work?\\n2. How does a computer execute a program?\\n3. How is a program stored in memory?\\n4. How does a computer read a program?\\n5. What is a compiler?\\n6. What is an interpreter?\\n7. What is a linker?\\n8. What is a loader?\\n9. What is a virtual machine?\\n10. What is an operating system?\\n\\n", "temperature": 1, "max_tokens": 128, "top_p": 1, "frequency_penalty": 0, "presence_penalty": 0, "n": 1, "stop": ["2.", "1."], "echo": false}' message='Post details'
[2022-11-17 22:44:47,554] DEBUG - https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 928
[2022-11-17 22:44:47,555] INFO - message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=4735 request_id=5e2403fc913d88af3fec846c6199851f response_code=200
[2022-11-17 22:44:47,555] INFO - message='Request to OpenAI API' method=post path=https://api.openai.com/v1/edits
[2022-11-17 22:44:47,555] DEBUG - api_version=None data='{"model": "text-davinci-edit-001", "input": "A computer program is a set of instructions that a computer follows to perform a task.\\n\\nA computer executes a program by reading the instructions in the program and carrying out the actions specified by those instructions.\\n\\nA program is stored in memory in a format that the computer can read. The computer reads the program from memory and executed it.\\n\\nA compiler is a program that takes a program written in one programming language and converts it into another language.\\n\\nAn interpreter is a program that takes a program written in one programming language and executes it without converting it into another language.\\n\\nA linker is a program that", "instruction": "Replace all non-characters with their spoken counterpart. And fix grammar.", "temperature": 0, "top_p": 1}' message='Post details'
[2022-11-17 22:44:56,073] DEBUG - https://api.openai.com:443 "POST /v1/edits HTTP/1.1" 200 889
[2022-11-17 22:44:56,074] INFO - message='OpenAI API response' path=https://api.openai.com/v1/edits processing_ms=8372 request_id=0bd9a706a4edbd65892d179404351f4b response_code=200
[2022-11-17 22:44:56,076] DEBUG - Starting new HTTPS connection (1): www.googleapis.com:443
[2022-11-17 22:44:56,218] DEBUG - https://www.googleapis.com:443 "GET /youtube/v3/playlists?part=id&id=UC_x5XG1OV2P6uZZ5FSM9Ttw&key=AIzaSyDfv2ISoNjVh2oX2JRJUQ1loS-voHH3GlI&maxResults=2 HTTP/1.1" 200 None
[2022-11-17 22:44:56,223] DEBUG - Starting new HTTPS connection (1): www.googleapis.com:443
[2022-11-17 22:44:56,771] DEBUG - https://www.googleapis.com:443 "GET /youtube/v3/search?part=snippet&type=video&maxResults=50&order=relevance&key=AIzaSyDfv2ISoNjVh2oX2JRJUQ1loS-voHH3GlI&q=How%20Programming%20Works&publishedAfter=2000-01-01T00:00:00Z&publishedBefore=3000-01-01T00:00:00Z HTTP/1.1" 200 None
[2022-11-17 22:44:56,776] DEBUG - Starting new HTTPS connection (1): www.googleapis.com:443
[2022-11-17 22:44:56,840] DEBUG - https://www.googleapis.com:443 "GET /youtube/v3/videos?key=AIzaSyDfv2ISoNjVh2oX2JRJUQ1loS-voHH3GlI&fields=items(snippet(description,tags))&part=snippet&id=bJzb-RuUcMU HTTP/1.1" 200 None
[2022-11-17 22:44:56,844] DEBUG - Starting new HTTPS connection (1): www.googleapis.com:443
[2022-11-17 22:44:56,928] DEBUG - https://www.googleapis.com:443 "GET /youtube/v3/videos?key=AIzaSyDfv2ISoNjVh2oX2JRJUQ1loS-voHH3GlI&fields=items(snippet(description,tags))&part=snippet&id=QXjU9qTsYCc HTTP/1.1" 200 None
[2022-11-17 22:44:56,933] DEBUG - Starting new HTTPS connection (1): www.googleapis.com:443
[2022-11-17 22:44:56,990] DEBUG - https://www.googleapis.com:443 "GET /youtube/v3/videos?key=AIzaSyDfv2ISoNjVh2oX2JRJUQ1loS-voHH3GlI&fields=items(snippet(description,tags))&part=snippet&id=zOjov-2OZ0E HTTP/1.1" 200 None
[2022-11-17 22:44:56,995] DEBUG - Starting new HTTPS connection (1): www.googleapis.com:443
[2022-11-17 22:44:57,054] DEBUG - https://www.googleapis.com:443 "GET /youtube/v3/videos?key=AIzaSyDfv2ISoNjVh2oX2JRJUQ1loS-voHH3GlI&fields=items(snippet(description,tags))&part=snippet&id=3wuMRPhSNd0 HTTP/1.1" 200 None
[2022-11-17 22:44:57,060] DEBUG - Starting new HTTPS connection (1): www.googleapis.com:443
[2022-11-17 22:44:57,115] DEBUG - https://www.googleapis.com:443 "GET /youtube/v3/videos?key=AIzaSyDfv2ISoNjVh2oX2JRJUQ1loS-voHH3GlI&fields=items(snippet(description,tags))&part=snippet&id=_zusEe3GOe8 HTTP/1.1" 200 None
[2022-11-17 22:44:57,120] DEBUG - Starting new HTTPS connection (1): www.googleapis.com:443
[2022-11-17 22:44:57,206] DEBUG - https://www.googleapis.com:443 "GET /youtube/v3/videos?key=AIzaSyDfv2ISoNjVh2oX2JRJUQ1loS-voHH3GlI&fields=items(snippet(description,tags))&part=snippet&id=CIRGjwYgdT4 HTTP/1.1" 200 None
[2022-11-17 22:44:57,210] DEBUG - Starting new HTTPS connection (1): www.googleapis.com:443
[2022-11-17 22:44:57,274] DEBUG - https://www.googleapis.com:443 "GET /youtube/v3/videos?key=AIzaSyDfv2ISoNjVh2oX2JRJUQ1loS-voHH3GlI&fields=items(snippet(description,tags))&part=snippet&id=wgbV6DLVezo HTTP/1.1" 200 None
[2022-11-17 22:44:57,279] DEBUG - Starting new HTTPS connection (1): www.googleapis.com:443
[2022-11-17 22:44:57,350] DEBUG - https://www.googleapis.com:443 "GET /youtube/v3/videos?key=AIzaSyDfv2ISoNjVh2oX2JRJUQ1loS-voHH3GlI&fields=items(snippet(description,tags))&part=snippet&id=QjMJsQx_O7o HTTP/1.1" 200 None
[2022-11-17 22:44:57,354] DEBUG - Starting new HTTPS connection (1): www.googleapis.com:443
[2022-11-17 22:44:57,441] DEBUG - https://www.googleapis.com:443 "GET /youtube/v3/videos?key=AIzaSyDfv2ISoNjVh2oX2JRJUQ1loS-voHH3GlI&fields=items(snippet(description,tags))&part=snippet&id=N7ZmPYaXoic HTTP/1.1" 200 None
[2022-11-17 22:44:57,445] DEBUG - Starting new HTTPS connection (1): www.googleapis.com:443
[2022-11-17 22:44:57,517] DEBUG - https://www.googleapis.com:443 "GET /youtube/v3/videos?key=AIzaSyDfv2ISoNjVh2oX2JRJUQ1loS-voHH3GlI&fields=items(snippet(description,tags))&part=snippet&id=akuSksb6p0Y HTTP/1.1" 200 None
[2022-11-17 22:44:57,521] DEBUG - Starting new HTTPS connection (1): www.googleapis.com:443
[2022-11-17 22:44:57,577] DEBUG - https://www.googleapis.com:443 "GET /youtube/v3/videos?key=AIzaSyDfv2ISoNjVh2oX2JRJUQ1loS-voHH3GlI&fields=items(snippet(description,tags))&part=snippet&id=HWpi9n2H3kE HTTP/1.1" 200 None
[2022-11-17 22:44:57,582] DEBUG - Starting new HTTPS connection (1): www.googleapis.com:443
[2022-11-17 22:44:57,631] DEBUG - https://www.googleapis.com:443 "GET /youtube/v3/videos?key=AIzaSyDfv2ISoNjVh2oX2JRJUQ1loS-voHH3GlI&fields=items(snippet(description,tags))&part=snippet&id=g4a7_HH9Wbg HTTP/1.1" 200 None
[2022-11-17 22:44:57,636] DEBUG - Starting new HTTPS connection (1): www.googleapis.com:443
[2022-11-17 22:44:57,724] DEBUG - https://www.googleapis.com:443 "GET /youtube/v3/videos?key=AIzaSyDfv2ISoNjVh2oX2JRJUQ1loS-voHH3GlI&fields=items(snippet(description,tags))&part=snippet&id=YmWMi1kVCG8 HTTP/1.1" 200 None
[2022-11-17 22:44:57,728] DEBUG - Starting new HTTPS connection (1): www.googleapis.com:443
[2022-11-17 22:44:57,804] DEBUG - https://www.googleapis.com:443 "GET /youtube/v3/videos?key=AIzaSyDfv2ISoNjVh2oX2JRJUQ1loS-voHH3GlI&fields=items(snippet(description,tags))&part=snippet&id=I-k-iTUMQAY HTTP/1.1" 200 None
[2022-11-17 22:44:57,809] DEBUG - Starting new HTTPS connection (1): www.googleapis.com:443
[2022-11-17 22:44:57,863] DEBUG - https://www.googleapis.com:443 "GET /youtube/v3/videos?key=AIzaSyDfv2ISoNjVh2oX2JRJUQ1loS-voHH3GlI&fields=items(snippet(description,tags))&part=snippet&id=EGQh5SZctaE HTTP/1.1" 200 None
[2022-11-17 22:44:57,868] DEBUG - Starting new HTTPS connection (1): www.googleapis.com:443
[2022-11-17 22:44:57,930] DEBUG - https://www.googleapis.com:443 "GET /youtube/v3/videos?key=AIzaSyDfv2ISoNjVh2oX2JRJUQ1loS-voHH3GlI&fields=items(snippet(description,tags))&part=snippet&id=IP5s13qEB4A HTTP/1.1" 200 None
[2022-11-17 22:44:57,933] DEBUG - Starting new HTTPS connection (1): www.googleapis.com:443
[2022-11-17 22:44:58,001] DEBUG - https://www.googleapis.com:443 "GET /youtube/v3/videos?key=AIzaSyDfv2ISoNjVh2oX2JRJUQ1loS-voHH3GlI&fields=items(snippet(description,tags))&part=snippet&id=RU1u-js7db8 HTTP/1.1" 200 None
[2022-11-17 22:44:58,006] DEBUG - Starting new HTTPS connection (1): www.googleapis.com:443
[2022-11-17 22:44:58,068] DEBUG - https://www.googleapis.com:443 "GET /youtube/v3/videos?key=AIzaSyDfv2ISoNjVh2oX2JRJUQ1loS-voHH3GlI&fields=items(snippet(description,tags))&part=snippet&id=nwDq4adJwzM HTTP/1.1" 200 None
[2022-11-17 22:44:58,074] DEBUG - Starting new HTTPS connection (1): www.googleapis.com:443
[2022-11-17 22:44:58,129] DEBUG - https://www.googleapis.com:443 "GET /youtube/v3/videos?key=AIzaSyDfv2ISoNjVh2oX2JRJUQ1loS-voHH3GlI&fields=items(snippet(description,tags))&part=snippet&id=qol2X_8JF9I HTTP/1.1" 200 None
[2022-11-17 22:44:58,132] DEBUG - Starting new HTTPS connection (1): www.googleapis.com:443
[2022-11-17 22:44:58,189] DEBUG - https://www.googleapis.com:443 "GET /youtube/v3/videos?key=AIzaSyDfv2ISoNjVh2oX2JRJUQ1loS-voHH3GlI&fields=items(snippet(description,tags))&part=snippet&id=de2Hsvxaf8M HTTP/1.1" 200 None
[2022-11-17 22:44:58,194] DEBUG - Starting new HTTPS connection (1): www.googleapis.com:443
[2022-11-17 22:44:58,243] DEBUG - https://www.googleapis.com:443 "GET /youtube/v3/videos?key=AIzaSyDfv2ISoNjVh2oX2JRJUQ1loS-voHH3GlI&fields=items(snippet(description,tags))&part=snippet&id=2lVDktWK-pc HTTP/1.1" 200 None
[2022-11-17 22:44:58,248] DEBUG - Starting new HTTPS connection (1): www.googleapis.com:443
[2022-11-17 22:44:58,309] DEBUG - https://www.googleapis.com:443 "GET /youtube/v3/videos?key=AIzaSyDfv2ISoNjVh2oX2JRJUQ1loS-voHH3GlI&fields=items(snippet(description,tags))&part=snippet&id=QZwneRb-zqA HTTP/1.1" 200 None
[2022-11-17 22:44:58,314] DEBUG - Starting new HTTPS connection (1): www.googleapis.com:443
[2022-11-17 22:44:58,370] DEBUG - https://www.googleapis.com:443 "GET /youtube/v3/videos?key=AIzaSyDfv2ISoNjVh2oX2JRJUQ1loS-voHH3GlI&fields=items(snippet(description,tags))&part=snippet&id=Kpk67-nfpR0 HTTP/1.1" 200 None
[2022-11-17 22:44:58,375] DEBUG - Starting new HTTPS connection (1): www.googleapis.com:443
[2022-11-17 22:44:58,447] DEBUG - https://www.googleapis.com:443 "GET /youtube/v3/videos?key=AIzaSyDfv2ISoNjVh2oX2JRJUQ1loS-voHH3GlI&fields=items(snippet(description,tags))&part=snippet&id=5QUSeBAMjoo HTTP/1.1" 200 None
[2022-11-17 22:44:58,452] DEBUG - Starting new HTTPS connection (1): www.googleapis.com:443
[2022-11-17 22:44:58,509] DEBUG - https://www.googleapis.com:443 "GET /youtube/v3/videos?key=AIzaSyDfv2ISoNjVh2oX2JRJUQ1loS-voHH3GlI&fields=items(snippet(description,tags))&part=snippet&id=HIj8wU_rGIU HTTP/1.1" 200 None
[2022-11-17 22:44:58,512] DEBUG - Hashtags ['#software', '#coding', '#softwaredevelopment', '#programming', '#howtocode', '#coding', '#programming', '#development', '#computerprogram', '#computerprogramming', '#eyeontech', '#howtostartcoding', '#programmingforbeginners', '#learncoding', '#python', '#php', '#java', '#jbpm', '#angular', '#c', '#c', '#django', '#linux', '#webdevelopement']
[2022-11-17 22:44:58,512] DEBUG - Top Hashtags ['#coding', '#programming', '#c', '#software', '#softwaredevelopment']
[2022-11-17 22:44:58,512] DEBUG - Tags ['how to learn programming', 'how to learn programming for beginners', 'how to learn to code', 'how to learn code', 'computer programming', 'how to code', 'learn to code', 'programming for beginners', 'coding for beginners', 'coding programs', 'codeschool', 'computer programming courses', 'web development', '2019', 'compiler', 'programming', 'assembly', 'machine code', 'source code', 'computers', 'how computers understand code', 'how computers read code', 'how computers work', 'how do computers read code', 'how do computers understand programming languages', 'machine code', 'compilation process in c', 'source code to machine code', 'compiler', 'programming', 'assembly', 'techraj', 'programming', 'languages', 'programming languages', 'code', 'java', 'python', 'ruby', 'c++', 'computer science', 'computer engineering', 'software', 'coding', 'software engineering', 'programming', 'web development', 'javascript', 'react', 'learn programming', 'learn to code', 'coding', 'software development', 'become a software developer', 'software developer', 'freelancing', 'freelance developer', 'coding tutorials', 'development', 'ted', 'ted-ed', 'ted ed', 'teded', 'ted education', 'josé américo n l f de freitas', "qa'ed mai", 'binary', 'code', 'internet', 'numbers', 'language', 'technology', 'string', 'data', 'coding', 'tech', 'programming', 'a day in the life of a software engineer', 'day in the life of a software engineer', 'what programmers actually do', 'what programmers do at work', 'what programmers do', 'how programming works', 'a day in the life of a programmer', 'day in the life', 'coding', 'computer programming', 'jacquard loom', 'what is coding', 'jacquard coding', 'jacquard punchcards', 'loom', 'computer coding', 'hour of code', 'history of coding', 'history', 'binary', 'programming for beginners', 'how programming works', 'pfb', 'programming course', 'learn programming', 'how programming languages work', 'techraj', 'machine language', 'assembly language', 'basic', 'programming', 'binary', 'hexadecimal', 'coding', 'commodore', 'apple', 'microprocessor', '6502', '8088', 'ms-dos', 'physics', 'software engineering', 'how to', 'career', 'programmer', 'coder', 'computer scientist', 'job', 'physics girl', 'dianna cowern', 'jacob collier', 'youtube', 'stem', 'engineer', 'education', 'chemistry', 'rainbow', 'student', 'pbs', 'pbs digital studios', 'science', 'space time', 'computer science', 'devon crawford', 'programming', 'the reality of programming', 'programming: reality vs expectations', 'software development', 'engineering', 'university student', 'confusion', 'frustration', 'stack overflow', 'reinventing the wheel', 'learning how to code', 'expert programmer', 'coding', 'react', 'driver programming', 'c programming', 'low level programming', 'adobe premiere', 'adobe premiere sdk', 'video editing automation', 'docker', 'containerization', 'cloud computing', 'java programming', 'api', 'programming language', 'programming languages', 'programming', 'java', 'python', 'c++', 'explainer', 'explainer video', 'software engineering', 'computer program', 'program', 'computer programming', 'eye on tech', 'basics of computer programming', 'computer science', 'what is programming', 'programming language', 'python (programming language)', 'java (programming language)', 'john green', 'hank green', 'vlogbrothers', 'crash course', 'crashcourse', 'education', 'computer science', 'compsci', 'programming', 'computer programming', 'coding', 'software', 'machine code', 'assembly code', 'pseudo-code', 'assembly', 'punch card', 'grace hopper', 'harvard mark i', 'a-0', 'compiler', 'fortran', 'cobol', 'python', 'pascal', 'c++', 'ruby', 'java', 'swift', 'john green', 'hank green', 'vlogbrothers', 'crash course', 'crashcourse', 'education', 'programming', 'plugboards', 'punch cards', 'punched paper tape', 'neumann architecture', 'panel programming', 'switches', 'jacquard', 'loom', 'computers', 'computing', 'computer science', 'programming languages', 'history', 'programmers', 'stack overflow', 'all programmers can relate', 'coding comedy', 'software development', 'black in tech', 'coding', 'coding bugs', 'relatable coding', 'software engineering', 'programmer', 'engineer', 'stuck on coding problem', 'computer science', 'software engineer', 'web development', 'computers', 'computerphile', 'c programming language', 'the c programming language', 'bwk', 'professor brian kernighan', 'dennis ritchie (computer scientist)', 'brian kernighan', 'unix', 'university of nottingham', 'computer science (field of study)', 'programming', 'programming languages', 'coding', 'best programming language', 'machine code', 'assembly language', 'c programming', 'c++', 'rustlang', 'c#', 'java', 'javascript', 'golang', 'kotlin', 'ruby', 'python', 'swift', 'php', 'audio programming', 'coding', 'programming', 'creative coding', 'creative programming', 'digital signal processing', 'dsp', 'juce', 'maximilian', 'ofx', 'software development', 'coding for beginners', 'music', 'audio', 'instruments', 'ableton', 'logic', 'max msp', 'c++', 'processing', 'compiler', 'c++', 'java', 'python', 'javascript', 'interpreter', 'assembler', 'binary', 'binary system', 'programming', 'coding', 'programming language', 'programming languages', 'grace hopper', 'ibm', 'how to start coding', 'how to learn programming', 'programming for beginners', 'learn coding', 'programming', 'how to learn python', 'how to learn to code', 'programming language', 'learn programming', 'python programming', 'learn to code', 'programming languages', 'top programming languages', 'intellipaat', 'best programming language', 'how to learn programming for beginners', 'programming languages 2020', 'how to learn to code for beginners', 'how to learn coding']
[2022-11-17 22:44:58,514] DEBUG - Top Tags ['programming', 'coding', 'programming languages', 'c++', 'computer science', 'java', 'python', 'computer programming', 'compiler', 'machine code', 'software engineering', 'software development', 'binary', 'programming language', 'learn to code']
[2022-11-17 22:45:13,950] CRITICAL - Failed to generate audio
[2022-11-17 22:45:13,951] INFO - Getting video script.
[2022-11-17 22:45:13,951] INFO - message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
[2022-11-17 22:45:13,952] DEBUG - api_version=None data='{"model": "text-davinci-002", "prompt": "Write a list of unique and interesting keywords relating to basic computer science:\\n\\n-", "temperature": 1, "max_tokens": 128, "top_p": 1, "frequency_penalty": 0, "presence_penalty": 0, "n": 1, "stop": "", "echo": false}' message='Post details'
[2022-11-17 22:45:16,160] DEBUG - https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 428
[2022-11-17 22:45:16,160] INFO - message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=2062 request_id=8900c998ba2991ce1a4eb1a9e4adaa52 response_code=200
[2022-11-17 22:45:16,161] INFO - message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
[2022-11-17 22:45:16,161] DEBUG - api_version=None data='{"model": "text-curie-001", "prompt": "Write a list of 5 interesting beginner topics on where Hertz is used in the context of computer science:\\n-", "temperature": 0.7, "max_tokens": 256, "top_p": 1, "frequency_penalty": 0, "presence_penalty": 0, "n": 1, "stop": "", "echo": false}' message='Post details'
[2022-11-17 22:45:17,082] DEBUG - https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 564
[2022-11-17 22:45:17,083] INFO - message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=752 request_id=b75d74ace575a5715351a96003f1c68f response_code=200
[2022-11-17 22:45:17,083] INFO - message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
[2022-11-17 22:45:17,083] DEBUG - api_version=None data='{"model": "text-davinci-002", "prompt": "Write a short, unique and interesting title relating to the theory of Hertz is used in the context of computer science to represent frequencies. in the form of a video essay title without involving numbers:", "temperature": 1, "max_tokens": 20, "top_p": 1, "frequency_penalty": 0, "presence_penalty": 0, "n": 1, "stop": "", "echo": false}' message='Post details'
[2022-11-17 22:45:18,123] DEBUG - https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 315
[2022-11-17 22:45:18,124] INFO - message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=895 request_id=0e02afeafbb8ccc62a711f2a1c2a08be response_code=200
[2022-11-17 22:45:18,155] DEBUG - Keyword Hertz, Topics ['Hertz is used in the context of computer science to represent frequencies.', 'Hertz is used in the context of computer science to represent time.', 'Hertz is used in the context of computer science to represent digital signals.', 'Hertz is used in the context of computer science to represent communication.'], Topic Hertz Discovery: Unlocking the Power of Frequency
[2022-11-17 22:45:18,155] INFO - message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
[2022-11-17 22:45:18,155] DEBUG - api_version=None data='{"model": "text-davinci-002", "prompt": "Write a list of beginner topics relating to what is Hertz Discovery: Unlocking the Power of Frequency in the context of computer science:\\n\\n", "temperature": 0, "max_tokens": 256, "top_p": 1, "frequency_penalty": 0, "presence_penalty": 0, "n": 1, "stop": "", "echo": false}' message='Post details'
[2022-11-17 22:45:20,350] DEBUG - https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 446
[2022-11-17 22:45:20,351] INFO - message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=2043 request_id=6dec312a3dcd1bf82a160cf2618a6f6f response_code=200
[2022-11-17 22:45:20,352] DEBUG - topic: Hertz Discovery: Unlocking the Power of Frequency, sub topics 
-What is Hertz?
-What is the power of frequency?
-What is computer science?
-What are the basics of computer science?
-What is Hertz Discovery in the context of computer science?
[2022-11-17 22:45:20,352] DEBUG - getting summary for topic
[2022-11-17 22:45:20,352] INFO - message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
[2022-11-17 22:45:20,352] DEBUG - api_version=None data='{"model": "text-curie-001", "prompt": "Write a summary for the following topic in the form of a youtube description in the context of computer science:\\n\\ntopic: Hertz Discovery: Unlocking the Power of Frequency\\n\\nsummary:", "temperature": 0, "max_tokens": 256, "top_p": 1, "frequency_penalty": 0, "presence_penalty": 0, "n": 1, "stop": "", "echo": false}' message='Post details'
[2022-11-17 22:45:20,896] DEBUG - https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 459
[2022-11-17 22:45:20,896] INFO - message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=386 request_id=296011cc15bb91f1ef3b08b42831fa8a response_code=200
[2022-11-17 22:45:20,897] INFO - message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
[2022-11-17 22:45:20,897] DEBUG - api_version=None data='{"model": "text-davinci-002", "prompt": "Expand greatly upon the topic of Hertz Discovery: Unlocking the Power of Frequency in the context of computer science summarised for a 9th grader:\\n\\n1. What is Hertz?\\n\\n", "temperature": 1, "max_tokens": 128, "top_p": 1, "frequency_penalty": 0, "presence_penalty": 0, "n": 1, "stop": ["2.", "1."], "echo": false}' message='Post details'
[2022-11-17 22:45:22,888] DEBUG - https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 460
[2022-11-17 22:45:22,888] INFO - message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1846 request_id=e152f254f7ac62913955f48aba286cb8 response_code=200
[2022-11-17 22:45:22,889] INFO - message='Request to OpenAI API' method=post path=https://api.openai.com/v1/edits
[2022-11-17 22:45:22,889] DEBUG - api_version=None data='{"model": "text-davinci-edit-001", "input": "Hertz is a unit of measurement that refers to the number of times a particular wave oscillates per second. This can be applied to any type of wave, whether it be sound, light, or electrical.", "instruction": "Replace all non-characters with their spoken counterpart. And fix grammar.", "temperature": 0, "top_p": 1}' message='Post details'
[2022-11-17 22:45:25,731] DEBUG - https://api.openai.com:443 "POST /v1/edits HTTP/1.1" 200 401
[2022-11-17 22:45:25,732] INFO - message='OpenAI API response' path=https://api.openai.com/v1/edits processing_ms=2697 request_id=f27773388f146cb8577fc8365d91cf9c response_code=200
[2022-11-17 22:45:25,733] INFO - message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
[2022-11-17 22:45:25,733] DEBUG - api_version=None data='{"model": "text-davinci-002", "prompt": "Expand greatly upon the topic of Hertz Discovery: Unlocking the Power of Frequency in the context of computer science summarised for a 9th grader:\\n\\n1. What is Hertz?\\n\\nHertz is a unit of measurement that refers to the number of times a particular wave oscillates per second. This can be applied to any type of wave, whether it be sound, light, or electrical. \\n\\nThe unit is named after Heinrich Hertz, a German physicist.\\n\\n2. What is the power of frequency?\\n\\n", "temperature": 1, "max_tokens": 128, "top_p": 1, "frequency_penalty": 0, "presence_penalty": 0, "n": 1, "stop": ["3.", "2."], "echo": false}' message='Post details'
[2022-11-17 22:45:27,180] DEBUG - https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 494
[2022-11-17 22:45:27,180] INFO - message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1293 request_id=f9eeebc52cea08e4a8665c3b52ebda15 response_code=200
[2022-11-17 22:45:27,181] INFO - message='Request to OpenAI API' method=post path=https://api.openai.com/v1/edits
[2022-11-17 22:45:27,181] DEBUG - api_version=None data='{"model": "text-davinci-edit-001", "input": "The power of frequency refers to the fact that different frequencies can be used to affect different things. For example, certain frequencies can be used to break apart molecules, while others can be used to kill bacteria.", "instruction": "Replace all non-characters with their spoken counterpart. And fix grammar.", "temperature": 0, "top_p": 1}' message='Post details'
[2022-11-17 22:45:30,309] DEBUG - https://api.openai.com:443 "POST /v1/edits HTTP/1.1" 200 544
[2022-11-17 22:45:30,310] INFO - message='OpenAI API response' path=https://api.openai.com/v1/edits processing_ms=2978 request_id=c95602206f869d9caee9b9d329d41c13 response_code=200
[2022-11-17 22:45:30,310] INFO - message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
[2022-11-17 22:45:30,310] DEBUG - api_version=None data='{"model": "text-davinci-002", "prompt": "Expand greatly upon the topic of Hertz Discovery: Unlocking the Power of Frequency in the context of computer science summarised for a 9th grader:\\n\\n1. What is Hertz?\\n\\nHertz is a unit of measurement that refers to the number of times a particular wave oscillates per second. This can be applied to any type of wave, whether it be sound, light, or electrical. \\n\\nThe unit is named after Heinrich Hertz, a German physicist.\\n\\n2. What is the power of frequency?\\n\\nThe power of frequency refers to the fact that different frequencies can be used to affect different things.\\nFor example, certain frequencies can be used to break apart molecules, while others can be used to kill bacteria.\\nThe power of frequency is also used in the field of medicine.\\nFor example, certain frequencies can be used to kill cancer cells, while others can be used to kill bacteria.\\n\\n3. What is computer science?\\n\\n", "temperature": 1, "max_tokens": 128, "top_p": 1, "frequency_penalty": 0, "presence_penalty": 0, "n": 1, "stop": ["4.", "3."], "echo": false}' message='Post details'
[2022-11-17 22:45:32,419] DEBUG - https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 470
[2022-11-17 22:45:32,421] INFO - message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1943 request_id=16f0e2889f14d197b9707a066ab1ab94 response_code=200
[2022-11-17 22:45:32,421] INFO - message='Request to OpenAI API' method=post path=https://api.openai.com/v1/edits
[2022-11-17 22:45:32,421] DEBUG - api_version=None data='{"model": "text-davinci-edit-001", "input": "Computer science is the scientific and practical approach to computation and its applications. It is the systematic study of the feasibility, structure, expression, and implementation of software systems.", "instruction": "Replace all non-characters with their spoken counterpart. And fix grammar.", "temperature": 0, "top_p": 1}' message='Post details'
[2022-11-17 22:45:34,297] DEBUG - https://api.openai.com:443 "POST /v1/edits HTTP/1.1" 200 351
[2022-11-17 22:45:34,298] INFO - message='OpenAI API response' path=https://api.openai.com/v1/edits processing_ms=1736 request_id=62290747be50c3af2da8093a1e33c11a response_code=200
[2022-11-17 22:45:34,298] INFO - message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
[2022-11-17 22:45:34,298] DEBUG - api_version=None data='{"model": "text-davinci-002", "prompt": "Expand greatly upon the topic of Hertz Discovery: Unlocking the Power of Frequency in the context of computer science summarised for a 9th grader:\\n\\n1. What is Hertz?\\n\\nHertz is a unit of measurement that refers to the number of times a particular wave oscillates per second. This can be applied to any type of wave, whether it be sound, light, or electrical. \\n\\nThe unit is named after Heinrich Hertz, a German physicist.\\n\\n2. What is the power of frequency?\\n\\nThe power of frequency refers to the fact that different frequencies can be used to affect different things.\\nFor example, certain frequencies can be used to break apart molecules, while others can be used to kill bacteria.\\nThe power of frequency is also used in the field of medicine.\\nFor example, certain frequencies can be used to kill cancer cells, while others can be used to kill bacteria.\\n\\n3. What is computer science?\\n\\nComputer science is the scientific and practical approach to computation and its applications.\\nIt is the systematic study of the feasibility, structure, expression, and implementation of software systems.\\n\\n4. What are the basics of computer science?\\n\\n", "temperature": 1, "max_tokens": 128, "top_p": 1, "frequency_penalty": 0, "presence_penalty": 0, "n": 1, "stop": ["5.", "4."], "echo": false}' message='Post details'
[2022-11-17 22:45:36,183] DEBUG - https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 428
[2022-11-17 22:45:36,185] INFO - message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1737 request_id=0da12848428f74f3121ae4fc4b8aad6e response_code=200
[2022-11-17 22:45:36,185] INFO - message='Request to OpenAI API' method=post path=https://api.openai.com/v1/edits
[2022-11-17 22:45:36,186] DEBUG - api_version=None data='{"model": "text-davinci-edit-001", "input": "The basics of computer science include but are not limited to: algorithms, data structures, artificial intelligence, computer graphics, and programming languages.", "instruction": "Replace all non-characters with their spoken counterpart. And fix grammar.", "temperature": 0, "top_p": 1}' message='Post details'
[2022-11-17 22:45:37,871] DEBUG - https://api.openai.com:443 "POST /v1/edits HTTP/1.1" 200 309
[2022-11-17 22:45:37,872] INFO - message='OpenAI API response' path=https://api.openai.com/v1/edits processing_ms=1546 request_id=6551139abd8f48b674a199499b23ddc4 response_code=200
[2022-11-17 22:45:37,872] INFO - message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
[2022-11-17 22:45:37,872] DEBUG - api_version=None data='{"model": "text-davinci-002", "prompt": "Expand greatly upon the topic of Hertz Discovery: Unlocking the Power of Frequency in the context of computer science summarised for a 9th grader:\\n\\n1. What is Hertz?\\n\\nHertz is a unit of measurement that refers to the number of times a particular wave oscillates per second. This can be applied to any type of wave, whether it be sound, light, or electrical. \\n\\nThe unit is named after Heinrich Hertz, a German physicist.\\n\\n2. What is the power of frequency?\\n\\nThe power of frequency refers to the fact that different frequencies can be used to affect different things.\\nFor example, certain frequencies can be used to break apart molecules, while others can be used to kill bacteria.\\nThe power of frequency is also used in the field of medicine.\\nFor example, certain frequencies can be used to kill cancer cells, while others can be used to kill bacteria.\\n\\n3. What is computer science?\\n\\nComputer science is the scientific and practical approach to computation and its applications.\\nIt is the systematic study of the feasibility, structure, expression, and implementation of software systems.\\n\\n4. What are the basics of computer science?\\n\\nThe basics of computer science include, but are not limited to, algorithms, data structures, artificial intelligence, computer graphics, and programming languages.\\n\\n5. What is Hertz Discovery in the context of computer science?\\n\\n", "temperature": 1, "max_tokens": 128, "top_p": 1, "frequency_penalty": 0, "presence_penalty": 0, "n": 1, "stop": ["6.", "5."], "echo": false}' message='Post details'
[2022-11-17 22:45:41,430] DEBUG - https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 589
[2022-11-17 22:45:41,430] INFO - message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=3415 request_id=268899097668a3ac33419daed8758be7 response_code=200
[2022-11-17 22:45:41,430] INFO - message='Request to OpenAI API' method=post path=https://api.openai.com/v1/edits
[2022-11-17 22:45:41,430] DEBUG - api_version=None data='{"model": "text-davinci-edit-001", "input": "Hertz Discovery is the application of the power of frequency to the field of computer science.\\nThis can be used to improve algorithms, data structures, artificial intelligence, and other aspects of computer science.\\nThe use of Hertz Discovery in computer science can help to make computers more efficient and effective.", "instruction": "Replace all non-characters with their spoken counterpart. And fix grammar.", "temperature": 0, "top_p": 1}' message='Post details'
[2022-11-17 22:45:44,855] DEBUG - https://api.openai.com:443 "POST /v1/edits HTTP/1.1" 200 555
[2022-11-17 22:45:44,855] INFO - message='OpenAI API response' path=https://api.openai.com/v1/edits processing_ms=3283 request_id=2d3e3ccb38e262ec8fcfa86dec5795e9 response_code=200
[2022-11-17 22:45:44,859] DEBUG - Starting new HTTPS connection (1): www.googleapis.com:443
[2022-11-17 22:45:45,004] DEBUG - https://www.googleapis.com:443 "GET /youtube/v3/playlists?part=id&id=UC_x5XG1OV2P6uZZ5FSM9Ttw&key=AIzaSyDfv2ISoNjVh2oX2JRJUQ1loS-voHH3GlI&maxResults=2 HTTP/1.1" 200 None
[2022-11-17 22:45:45,009] DEBUG - Starting new HTTPS connection (1): www.googleapis.com:443
[2022-11-17 22:45:45,546] DEBUG - https://www.googleapis.com:443 "GET /youtube/v3/search?part=snippet&type=video&maxResults=50&order=relevance&key=AIzaSyDfv2ISoNjVh2oX2JRJUQ1loS-voHH3GlI&q=Hertz%20Discovery:%20Unlocking%20the%20Power%20of%20Frequency&publishedAfter=2000-01-01T00:00:00Z&publishedBefore=3000-01-01T00:00:00Z HTTP/1.1" 200 None
[2022-11-17 22:45:45,554] DEBUG - Starting new HTTPS connection (1): www.googleapis.com:443
[2022-11-17 22:45:45,638] DEBUG - https://www.googleapis.com:443 "GET /youtube/v3/videos?key=AIzaSyDfv2ISoNjVh2oX2JRJUQ1loS-voHH3GlI&fields=items(snippet(description,tags))&part=snippet&id=E46ZU2rsupA HTTP/1.1" 200 None
[2022-11-17 22:45:45,642] DEBUG - Starting new HTTPS connection (1): www.googleapis.com:443
[2022-11-17 22:45:45,730] DEBUG - https://www.googleapis.com:443 "GET /youtube/v3/videos?key=AIzaSyDfv2ISoNjVh2oX2JRJUQ1loS-voHH3GlI&fields=items(snippet(description,tags))&part=snippet&id=JsTFCcUBYfE HTTP/1.1" 200 None
[2022-11-17 22:45:45,735] DEBUG - Starting new HTTPS connection (1): www.googleapis.com:443
[2022-11-17 22:45:45,799] DEBUG - https://www.googleapis.com:443 "GET /youtube/v3/videos?key=AIzaSyDfv2ISoNjVh2oX2JRJUQ1loS-voHH3GlI&fields=items(snippet(description,tags))&part=snippet&id=0nO48UIzLk8 HTTP/1.1" 200 None
[2022-11-17 22:45:45,805] DEBUG - Starting new HTTPS connection (1): www.googleapis.com:443
[2022-11-17 22:45:45,866] DEBUG - https://www.googleapis.com:443 "GET /youtube/v3/videos?key=AIzaSyDfv2ISoNjVh2oX2JRJUQ1loS-voHH3GlI&fields=items(snippet(description,tags))&part=snippet&id=mBL9pS6GMdA HTTP/1.1" 200 None
[2022-11-17 22:45:45,872] DEBUG - Starting new HTTPS connection (1): www.googleapis.com:443
[2022-11-17 22:45:45,933] DEBUG - https://www.googleapis.com:443 "GET /youtube/v3/videos?key=AIzaSyDfv2ISoNjVh2oX2JRJUQ1loS-voHH3GlI&fields=items(snippet(description,tags))&part=snippet&id=3q8thydY9bI HTTP/1.1" 200 None
[2022-11-17 22:45:45,939] DEBUG - Starting new HTTPS connection (1): www.googleapis.com:443
[2022-11-17 22:45:45,997] DEBUG - https://www.googleapis.com:443 "GET /youtube/v3/videos?key=AIzaSyDfv2ISoNjVh2oX2JRJUQ1loS-voHH3GlI&fields=items(snippet(description,tags))&part=snippet&id=PqMZfr3wMHE HTTP/1.1" 200 None
[2022-11-17 22:45:46,003] DEBUG - Starting new HTTPS connection (1): www.googleapis.com:443
[2022-11-17 22:45:46,064] DEBUG - https://www.googleapis.com:443 "GET /youtube/v3/videos?key=AIzaSyDfv2ISoNjVh2oX2JRJUQ1loS-voHH3GlI&fields=items(snippet(description,tags))&part=snippet&id=3n4mnRszNhw HTTP/1.1" 200 None
[2022-11-17 22:45:46,070] DEBUG - Starting new HTTPS connection (1): www.googleapis.com:443
[2022-11-17 22:45:46,125] DEBUG - https://www.googleapis.com:443 "GET /youtube/v3/videos?key=AIzaSyDfv2ISoNjVh2oX2JRJUQ1loS-voHH3GlI&fields=items(snippet(description,tags))&part=snippet&id=i0BxhBszU2A HTTP/1.1" 200 None
[2022-11-17 22:45:46,129] DEBUG - Starting new HTTPS connection (1): www.googleapis.com:443
[2022-11-17 22:45:46,191] DEBUG - https://www.googleapis.com:443 "GET /youtube/v3/videos?key=AIzaSyDfv2ISoNjVh2oX2JRJUQ1loS-voHH3GlI&fields=items(snippet(description,tags))&part=snippet&id=w2x2JrHYQu4 HTTP/1.1" 200 None
[2022-11-17 22:45:46,195] DEBUG - Starting new HTTPS connection (1): www.googleapis.com:443
[2022-11-17 22:45:46,252] DEBUG - https://www.googleapis.com:443 "GET /youtube/v3/videos?key=AIzaSyDfv2ISoNjVh2oX2JRJUQ1loS-voHH3GlI&fields=items(snippet(description,tags))&part=snippet&id=NR351WlGC4I HTTP/1.1" 200 None
[2022-11-17 22:45:46,257] DEBUG - Starting new HTTPS connection (1): www.googleapis.com:443
[2022-11-17 22:45:46,323] DEBUG - https://www.googleapis.com:443 "GET /youtube/v3/videos?key=AIzaSyDfv2ISoNjVh2oX2JRJUQ1loS-voHH3GlI&fields=items(snippet(description,tags))&part=snippet&id=0V4DgxlnYug HTTP/1.1" 200 None
[2022-11-17 22:45:46,329] DEBUG - Starting new HTTPS connection (1): www.googleapis.com:443
[2022-11-17 22:45:46,385] DEBUG - https://www.googleapis.com:443 "GET /youtube/v3/videos?key=AIzaSyDfv2ISoNjVh2oX2JRJUQ1loS-voHH3GlI&fields=items(snippet(description,tags))&part=snippet&id=xDIbyz70brE HTTP/1.1" 200 None
[2022-11-17 22:45:46,388] DEBUG - Starting new HTTPS connection (1): www.googleapis.com:443
[2022-11-17 22:45:46,455] DEBUG - https://www.googleapis.com:443 "GET /youtube/v3/videos?key=AIzaSyDfv2ISoNjVh2oX2JRJUQ1loS-voHH3GlI&fields=items(snippet(description,tags))&part=snippet&id=qWkLtHxV63Y HTTP/1.1" 200 None
[2022-11-17 22:45:46,460] DEBUG - Starting new HTTPS connection (1): www.googleapis.com:443
[2022-11-17 22:45:46,530] DEBUG - https://www.googleapis.com:443 "GET /youtube/v3/videos?key=AIzaSyDfv2ISoNjVh2oX2JRJUQ1loS-voHH3GlI&fields=items(snippet(description,tags))&part=snippet&id=XU49FSIx0_g HTTP/1.1" 200 None
[2022-11-17 22:45:46,535] DEBUG - Starting new HTTPS connection (1): www.googleapis.com:443
[2022-11-17 22:45:46,602] DEBUG - https://www.googleapis.com:443 "GET /youtube/v3/videos?key=AIzaSyDfv2ISoNjVh2oX2JRJUQ1loS-voHH3GlI&fields=items(snippet(description,tags))&part=snippet&id=YFR5EtO_zdM HTTP/1.1" 200 None
[2022-11-17 22:45:46,606] DEBUG - Starting new HTTPS connection (1): www.googleapis.com:443
[2022-11-17 22:45:46,677] DEBUG - https://www.googleapis.com:443 "GET /youtube/v3/videos?key=AIzaSyDfv2ISoNjVh2oX2JRJUQ1loS-voHH3GlI&fields=items(snippet(description,tags))&part=snippet&id=Hsh5fqejLIM HTTP/1.1" 200 None
[2022-11-17 22:45:46,681] DEBUG - Starting new HTTPS connection (1): www.googleapis.com:443
[2022-11-17 22:45:46,749] DEBUG - https://www.googleapis.com:443 "GET /youtube/v3/videos?key=AIzaSyDfv2ISoNjVh2oX2JRJUQ1loS-voHH3GlI&fields=items(snippet(description,tags))&part=snippet&id=4mfrJMvsIWg HTTP/1.1" 200 None
[2022-11-17 22:45:46,755] DEBUG - Starting new HTTPS connection (1): www.googleapis.com:443
[2022-11-17 22:45:46,815] DEBUG - https://www.googleapis.com:443 "GET /youtube/v3/videos?key=AIzaSyDfv2ISoNjVh2oX2JRJUQ1loS-voHH3GlI&fields=items(snippet(description,tags))&part=snippet&id=jA_conleEqM HTTP/1.1" 200 None
[2022-11-17 22:45:46,820] DEBUG - Starting new HTTPS connection (1): www.googleapis.com:443
[2022-11-17 22:45:46,888] DEBUG - https://www.googleapis.com:443 "GET /youtube/v3/videos?key=AIzaSyDfv2ISoNjVh2oX2JRJUQ1loS-voHH3GlI&fields=items(snippet(description,tags))&part=snippet&id=TRozVSAROH8 HTTP/1.1" 200 None
[2022-11-17 22:45:46,892] DEBUG - Starting new HTTPS connection (1): www.googleapis.com:443
[2022-11-17 22:45:46,953] DEBUG - https://www.googleapis.com:443 "GET /youtube/v3/videos?key=AIzaSyDfv2ISoNjVh2oX2JRJUQ1loS-voHH3GlI&fields=items(snippet(description,tags))&part=snippet&id=Z0aTM9OmLCA HTTP/1.1" 200 None
[2022-11-17 22:45:46,957] DEBUG - Starting new HTTPS connection (1): www.googleapis.com:443
[2022-11-17 22:45:47,030] DEBUG - https://www.googleapis.com:443 "GET /youtube/v3/videos?key=AIzaSyDfv2ISoNjVh2oX2JRJUQ1loS-voHH3GlI&fields=items(snippet(description,tags))&part=snippet&id=2RuCfTiCDjs HTTP/1.1" 200 None
[2022-11-17 22:45:47,036] DEBUG - Starting new HTTPS connection (1): www.googleapis.com:443
[2022-11-17 22:45:47,128] DEBUG - https://www.googleapis.com:443 "GET /youtube/v3/videos?key=AIzaSyDfv2ISoNjVh2oX2JRJUQ1loS-voHH3GlI&fields=items(snippet(description,tags))&part=snippet&id=l56q8bxs1ak HTTP/1.1" 200 None
[2022-11-17 22:45:47,133] DEBUG - Starting new HTTPS connection (1): www.googleapis.com:443
[2022-11-17 22:45:47,188] DEBUG - https://www.googleapis.com:443 "GET /youtube/v3/videos?key=AIzaSyDfv2ISoNjVh2oX2JRJUQ1loS-voHH3GlI&fields=items(snippet(description,tags))&part=snippet&id=GEKvOB-rhc4 HTTP/1.1" 200 None
[2022-11-17 22:45:47,193] DEBUG - Starting new HTTPS connection (1): www.googleapis.com:443
[2022-11-17 22:45:47,262] DEBUG - https://www.googleapis.com:443 "GET /youtube/v3/videos?key=AIzaSyDfv2ISoNjVh2oX2JRJUQ1loS-voHH3GlI&fields=items(snippet(description,tags))&part=snippet&id=_4WTBW4O5DI HTTP/1.1" 200 None
[2022-11-17 22:45:47,266] DEBUG - Starting new HTTPS connection (1): www.googleapis.com:443
[2022-11-17 22:45:47,321] DEBUG - https://www.googleapis.com:443 "GET /youtube/v3/videos?key=AIzaSyDfv2ISoNjVh2oX2JRJUQ1loS-voHH3GlI&fields=items(snippet(description,tags))&part=snippet&id=0W-EUVhqv98 HTTP/1.1" 200 None
[2022-11-17 22:45:47,325] DEBUG - Hashtags ['#lawofattraction', '#vibration', '#frequency', '#sleepmusic', '#deepsleep', '#432hz', '#meditativemind', '#solfeggio', '#963hz', '#tesla', '#mystery', '#pyramids', '#gv892', '#nikolatesla', '#nikolatesla369', '#manifest', '#432hz', '#healingmusic', '#meditationmusic', '#guidedmeditation', '#meditation', '#thirdeyemeditation', '#sleepmeditation', '#outerspacetoinnerspace', '#quantumjumping', '#shiftingrealities', '#manifestingmeditation']
[2022-11-17 22:45:47,325] DEBUG - Top Hashtags ['#432hz', '#lawofattraction', '#vibration', '#frequency', '#sleepmusic']
[2022-11-17 22:45:47,325] DEBUG - Tags ['who discovered radio', 'heinrich hertz', "hertz's experiment", 'how did hertz discover radio', "maxwell's equations", 'law of attraction', 'hidden', 'power', 'vibration', 'frequency', 'law of vibration', 'resonance', 'the law of attraction', 'law of attraction the secret', 'how frequency and vibration affect your energy', 'vibrations', 'frequency (dimension)', 'vibration of earth', 'chladni', 'plate', 'experiment', 'science', 'amazing', 'vibrate', 'vibrating', 'brusspup', 'sound', 'universe', 'nikola', 'tesla', 'mystery', 'solved', 'resonating', 'resonated', 'your youniverse', 'your youniverse channel', 'cymatics', 'law of attraction vibration', 'law of attraction frequency', 'youniverse', "poor people don't have to know about it", '528 hz frequency', '528 hz', 'the 528 hz frequency', '528', 'be inspired 528', 'be inspired transform dna', 'transform dna', 'it will transform your entire dna', 'be inspired channel', '528 hz frequency dna', 'video advice', 'video advice channel', 'video advice frequency', 'the magic frequency', 'found the magic frequency', 'magic frequency', 'nikola tesla was right', 'nikola tesla frequency', 'revolutionize the future', 'our future', 'this will revolutionize our future', 'anthony holland', 'anthony holland the magic frequency', 'activa el 100 % de tu cerebro y alcanza todo lo que deseas', 'activa el 100 % de tu cerebro', '100 % de tu cerebro', '100 activacion del potencial cerebral', 'activacion del cerebro al 100', 'activate 100% of your brain and achieve everything you want', 'activate 100% of your brain', '100% of your brain', '100 of your brain', 'use 100 percent of your brain', 'nrg8', 'be inspired', 'be inspired channel', 'video advice', 'video advice channel', 'video advice tesla', 'nikola tesla video', 'nikola tesla millions', 'real and alive tesla', 'real and alive nikola tesla', 'use them carefully tesla', 'nikola tesla millions real and alive', 'dmt', 'dmt activation frequency', 'dmt frequency', 'meditation music', 'activation', 'frequency', 'frequencies', 'teleport', 'telepathy', 'psychokinesis', 'spirit', 'deep trance', 'dmt pineal gland activation', 'deep meditation trance', 'dmt experience explained', 'dmt music', 'dmt trip simulation enter the void', 'dmt visuals', 'experience', 'release', 'pineal gland', 'dmt psychedelic', 'drug', 'dimethyltryptamine', 'third eye', 'ayahuasca', 'psychedelic trip', 'dmt experiences', 'spiritual', 'journey', 'vibration', 'pineal gland activation frequency', 'om', 'documentary', 'frequency', 'energy', 'vibrations', 'new age', 'science', 'sound', 'cymatics', 'universe', 'laws', 'physics', 'physical', 'matter', 'material', 'interesting', 'waves', 'wavelengths', 'binaural beats', 'synesthesia', 'masaru emoto', 'experiment', 'spirit science', 'spirituality', 'secrets of universe', 'how sound affects', 'humans', 'animals', 'nature', 'emotions', 'patterns', 'what is', 'how does sound work', 'hearing', 'neuroscience', 'music', '2014', '2019', 'nasa', 'science of sound', 'g codex', 'chakra', 'third eye', 'relieve stress', 'meditation', 'balance', 'open third eye', 'mystical', 'spiritual', 'spirituality', 'trance', 'yoga', 'well being', 'relaxation', 'bliss', 'healing', 'enlightenment', 'meditate', 'sound waves', 'aura', 'hamony', 'sacred', 'spirit', 'divine', 'metaphysical', 'new age music', 'consciousness', 'visualization', 'kundalini', 'universal', 'ascension', 'vibration', 'activation', 'psychic', 'chi', 'meditation music', 'buddha', 'hindu deities', 'native american', 'indian gods', 'gods', 'deities', 'goddess', 'goddessess', 'buddhism', 'chakra colors', 'frequencies', 'akashic records', '963hz', 'manifest what you want', 'manifest destiny', "manifest your soul's purpose", 'universe is calling', 'meditative mind', '963 hz', '963hz music', '963 hz music', 'law of attraction', 'manifest miracles', 'manifest anything', 'manifest while you sleep', '963 hz pure tone', '963 hz frequency', '963 hz solfeggio', 'music to manifest', 'miracles do happen', 'manifest anything you want', 'life purpose', 'manifest abundance', 'manifest meditation', 'miracle tones', 'akashic records meditation', 'awaken intuition', '852 hz', 'release subconscious fear', 'erase self doubt', 'clearing subconscious negativity', 'emotional healing', 'positive thinking', 'solfeggio frequency music', 'let go of self doubt', 'solfeggio frequency', 'freedom from unconscious fear', 'unconscious fear', 'meditative mind', 'fear self sabotage', 'meditation music', 'cleanse self doubt', '852 hz music', '852 hz pure tone', 'solfeggio frequencies', 'stop self doubt', 'remove negative thoughts', 'remove negativity', 'tedxtalks', 'english', 'life', 'control', 'freedom', 'life development', 'mental health', 'nikola tesla', 'great pyramid', 'nikola tesla free energy', 'limitless energy', 'ancient civilizations', 'mystery of the pyramids', 'tesla pyramid', 'wireless energy', 'pyramids and energy', 'inside pyramid of giza', 'nikola tesla 369', 'nikola tesla documentary', 'nikola tesla quotes', 'nikola tesla vs thomas edison', 'great pyramid of giza', 'great pyramids of egypt', 'nikola tesla inventions', 'nikola tesla free energy tower', 'education', 'emf', 'health effects', 'mobile phones', 'sar', 'resonance', 'cellular reproduction', 'cryptochrome', 'bee extinction', 'find yourself', '852 hz', 'develop self awareness', 'binaural beats', 'inner guidance', 'true self', 'find your true self', 'meditation', 'find yourself meditation', 'self-realisation', 'meditation to find yourself', 'higher self meditation', 'self hypnosis', 'deep relaxation', 'meditation music', 'inner peace', 'inner self', 'life purpose', 'find your life purpose', 'find your purpose', 'self awareness', 'inner guidance meditation', 'binaural beats meditation', '369 manifestation', '369 method', 'law of attraction technique', 'manifesting with tesla code 369', 'nikola tesla', 'nikola tesla divine code 369', 'nikola tesla vortex math', 'tesla code 369', 'tesla secret code 369', 'tesla 369', 'law of attraction', 'nikola tesla 369', 'how to use 369 method', 'manifest whatever you want', 'jake ducey', 'how to manifest', 'manifest', 'daily motivation', 'daily motivation channel', 'matias de stefano', 'vibrate correctly at a higher frequency', 'the most powerful way to raise your vibration instantl', 'matías de stefano the most powerful way to raise your vibration instantly', 'matías de stefano raise your vibration instantly', 'raise your vibration', 'matías de stefano raise your vibration', 'raise your vibration at a higher frequency', 'raise your vibration frequency', 'daily motivation matias de stefano', 'vibration', 'frequency', 'instantly', 'psychic meditation guided', 'clairvoyance guided meditation', 'meditation psychic abilities', 'psychic meditation', 'psychic abilities meditation', 'psychic ability meditation', 'clairvoyance meditaiton', 'clairvoyance meditation', 'opening the third eye meditation', 'opening the third eye', 'enhance psychic abilities', 'third eye activation', '3rd eye meditation', 'third eye meditation', 'psychic abilities', 'clairvoyance', 'clairvoyant', '3rd eye', 'new horizon', 'guided meditation', 'meditation', 'third eye', 'tedxtalks', 'english', 'life', 'dreams', 'self', 'self-help', 'meditation music', 'deep meditation music', 'vibration', 'sagittarius', 'pisces', 'horoscope', 'capricorn', 'aries', 'scorpio', 'virgo', 'taurus', 'cancer', 'leo', 'signs', 'libra', 'aquarius', 'astrology', 'gemini', 'zodiac signs', 'personality', 'horoscopes', 'astrological', 'astral projection music', 'astral travel journey deep meditation music', 'visualization', 'dmt', 'dmt frequency', 'ayahuasca', 'beta waves', 'beta', 'ascension', 'awakening', 'awareness', 'ascension music', 'sleep meditation', 'advance meditation', 'frequency', 'open third eye meditation', 'metratons cube', 'self healing without medication', 'self healing 432 hz', 'guided meditation straight to your subconscious', 'journey through space in 4k', 'meditation and affirmation', '432 hz tesla guided meditation straight to your subconscious - journey through space in 4k', 'dare to do. meditation video', 'subconscious meditation', 'straight to your subconscious mind', '432 hz tesla guided meditation straight to your subconscious mind - journey through space in 4k', 'guided meditation subconscious mind', 'binaural beats', 'quantum shifting', 'quantum jumping', 'quantum jumping techniques', 'quantum shift', 'quantum jump', 'quantum jumping meditation', 'theta waves', 'quantum manifestation', 'manifest', 'manifestation', 'law of attraction meditation', 'parallel reality meditation', 'raise your vibration', 'spiritual', 'manifesting', 'brainwave entertainment', 'manifest miracles', 'miracle manifestation', 'music to manifest', 'hz to manifest', 'spiritual awakening', 'enlightenment', 'how to manifest', '432 hz', 'law of attraction', 'tesla oscillator', 'free vibration', 'forced vibration', 'resonance']
[2022-11-17 22:45:47,327] DEBUG - Top Tags ['vibration', 'frequency', 'meditation music', 'law of attraction', 'resonance', 'third eye', 'spiritual', 'binaural beats', 'meditation', 'vibrations', 'experiment', 'science', 'sound', 'universe', 'cymatics', 'be inspired channel', 'video advice']
[2022-11-17 22:46:02,551] CRITICAL - Failed to generate audio
[2022-11-17 22:46:02,551] INFO - Getting video script.
[2022-11-17 22:46:02,552] INFO - message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
[2022-11-17 22:46:02,552] DEBUG - api_version=None data='{"model": "text-davinci-002", "prompt": "Write a list of unique and interesting keywords relating to basic computer science:\\n\\n-", "temperature": 1, "max_tokens": 128, "top_p": 1, "frequency_penalty": 0, "presence_penalty": 0, "n": 1, "stop": "", "echo": false}' message='Post details'
[2022-11-17 22:46:05,195] DEBUG - https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 467
[2022-11-17 22:46:05,196] INFO - message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=2495 request_id=4b56356a16720684df7fe0d4f7bf5ed9 response_code=200
[2022-11-17 22:46:05,197] INFO - message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
[2022-11-17 22:46:05,197] DEBUG - api_version=None data='{"model": "text-curie-001", "prompt": "Write a list of 5 interesting beginner topics on where Algorithms is used in the context of computer science:\\n-", "temperature": 0.7, "max_tokens": 256, "top_p": 1, "frequency_penalty": 0, "presence_penalty": 0, "n": 1, "stop": "", "echo": false}' message='Post details'
[2022-11-17 22:46:05,577] DEBUG - https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 377
[2022-11-17 22:46:05,578] INFO - message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=233 request_id=4f0d0aeaa6a5084e91b2324632d6396b response_code=200
[2022-11-17 22:46:05,578] INFO - message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
[2022-11-17 22:46:05,578] DEBUG - api_version=None data='{"model": "text-davinci-002", "prompt": "Write a short, unique and interesting title relating to the theory of Swift programming in the form of a video essay title without involving numbers:", "temperature": 1, "max_tokens": 20, "top_p": 1, "frequency_penalty": 0, "presence_penalty": 0, "n": 1, "stop": "", "echo": false}' message='Post details'
[2022-11-17 22:46:07,706] DEBUG - https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 305
[2022-11-17 22:46:07,707] INFO - message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1979 request_id=b0f1ee8d87e5eb415161637cafd71da6 response_code=200
[2022-11-17 22:46:07,715] DEBUG - Keyword Algorithms, Topics ['Data structures and algorithms', 'Swift programming', 'Computer vision', 'Natural language processing', 'Machine learning'], Topic A Beginner's Guide to Swift Programming
[2022-11-17 22:46:07,715] INFO - message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
[2022-11-17 22:46:07,715] DEBUG - api_version=None data='{"model": "text-davinci-002", "prompt": "Write a list of beginner topics relating to what is A Beginner\'s Guide to Swift Programming in the context of computer science:\\n\\n", "temperature": 0, "max_tokens": 256, "top_p": 1, "frequency_penalty": 0, "presence_penalty": 0, "n": 1, "stop": "", "echo": false}' message='Post details'
[2022-11-17 22:46:09,510] DEBUG - https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 435
[2022-11-17 22:46:09,510] INFO - message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1642 request_id=886ffab7685d5e21d485d836ce3a8062 response_code=200
[2022-11-17 22:46:09,510] DEBUG - topic: A Beginner's Guide to Swift Programming, sub topics 
-What is Swift?
-Why is Swift a good language for beginners?
-What are the basic features of Swift?
-How do you write a Swift program?
-What are the benefits of Swift?
[2022-11-17 22:46:09,510] DEBUG - getting summary for topic
[2022-11-17 22:46:09,512] INFO - message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
[2022-11-17 22:46:09,512] DEBUG - api_version=None data='{"model": "text-curie-001", "prompt": "Write a summary for the following topic in the form of a youtube description in the context of computer science:\\n\\ntopic: A Beginner\'s Guide to Swift Programming\\n\\nsummary:", "temperature": 0, "max_tokens": 256, "top_p": 1, "frequency_penalty": 0, "presence_penalty": 0, "n": 1, "stop": "", "echo": false}' message='Post details'
[2022-11-17 22:46:10,292] DEBUG - https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 557
[2022-11-17 22:46:10,292] INFO - message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=630 request_id=7818655e2a0ea0a03cafe9cb8ab63048 response_code=200
[2022-11-17 22:46:10,292] INFO - message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
[2022-11-17 22:46:10,292] DEBUG - api_version=None data='{"model": "text-davinci-002", "prompt": "Expand greatly upon the topic of A Beginner\'s Guide to Swift Programming in the context of computer science summarised for a 9th grader:\\n\\n1. What is Swift?\\n\\n", "temperature": 1, "max_tokens": 128, "top_p": 1, "frequency_penalty": 0, "presence_penalty": 0, "n": 1, "stop": ["2.", "1."], "echo": false}' message='Post details'
[2022-11-17 22:46:13,212] DEBUG - https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 None
[2022-11-17 22:46:13,212] INFO - message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=2777 request_id=4dc28b670c9634507888b463af3945ee response_code=200
[2022-11-17 22:46:13,213] INFO - message='Request to OpenAI API' method=post path=https://api.openai.com/v1/edits
[2022-11-17 22:46:13,214] DEBUG - api_version=None data='{"model": "text-davinci-edit-001", "input": "Swift is a programming language created by Apple Inc. It is a powerful and fast programming language for iOS, macOS, tvOS, and watchOS. Swift is easy to learn and use, and it\\u2019s open source, so anyone can contribute to its development.", "instruction": "Replace all non-characters with their spoken counterpart. And fix grammar.", "temperature": 0, "top_p": 1}' message='Post details'
[2022-11-17 22:46:16,315] DEBUG - https://api.openai.com:443 "POST /v1/edits HTTP/1.1" 200 382
[2022-11-17 22:46:16,315] INFO - message='OpenAI API response' path=https://api.openai.com/v1/edits processing_ms=2961 request_id=2c69a54ddb0be18f30c97343a016a149 response_code=200
[2022-11-17 22:46:16,315] INFO - message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
[2022-11-17 22:46:16,316] DEBUG - api_version=None data='{"model": "text-davinci-002", "prompt": "Expand greatly upon the topic of A Beginner\'s Guide to Swift Programming in the context of computer science summarised for a 9th grader:\\n\\n1. What is Swift?\\n\\nSwift is a programming language created by Apple Inc. It is a powerful and fast programming language for iOS, macOS, tvOS, and watchOS. Swift is easy to learn and use, and it is open source, so anyone can contribute to its development.\\n\\n2. Why is Swift a good language for beginners?\\n\\n", "temperature": 1, "max_tokens": 128, "top_p": 1, "frequency_penalty": 0, "presence_penalty": 0, "n": 1, "stop": ["3.", "2."], "echo": false}' message='Post details'
[2022-11-17 22:46:19,046] DEBUG - https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 500
[2022-11-17 22:46:19,047] INFO - message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=2589 request_id=575e75864dff42e77f756c0075150260 response_code=200
[2022-11-17 22:46:19,048] INFO - message='Request to OpenAI API' method=post path=https://api.openai.com/v1/edits
[2022-11-17 22:46:19,048] DEBUG - api_version=None data='{"model": "text-davinci-edit-001", "input": "Swift is a great language for beginners because it is easy to learn and use. It is also powerful and fast, so you can create sophisticated apps with it. And because Swift is open source, anyone can contribute to its development.", "instruction": "Replace all non-characters with their spoken counterpart. And fix grammar.", "temperature": 0, "top_p": 1}' message='Post details'
[2022-11-17 22:46:22,168] DEBUG - https://api.openai.com:443 "POST /v1/edits HTTP/1.1" 200 376
[2022-11-17 22:46:22,169] INFO - message='OpenAI API response' path=https://api.openai.com/v1/edits processing_ms=2969 request_id=d90551e10f25cac13eabe3e5b4aaa57c response_code=200
[2022-11-17 22:46:22,169] INFO - message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
[2022-11-17 22:46:22,169] DEBUG - api_version=None data='{"model": "text-davinci-002", "prompt": "Expand greatly upon the topic of A Beginner\'s Guide to Swift Programming in the context of computer science summarised for a 9th grader:\\n\\n1. What is Swift?\\n\\nSwift is a programming language created by Apple Inc. It is a powerful and fast programming language for iOS, macOS, tvOS, and watchOS. Swift is easy to learn and use, and it is open source, so anyone can contribute to its development.\\n\\n2. Why is Swift a good language for beginners?\\n\\nSwift is a great language for beginners because it is easy to learn and use. It is also powerful and fast, so you can create sophisticated apps with it. And because Swift is open source, anyone can contribute to its development.\\n\\n3. What are the basic features of Swift?\\n\\n", "temperature": 1, "max_tokens": 128, "top_p": 1, "frequency_penalty": 0, "presence_penalty": 0, "n": 1, "stop": ["4.", "3."], "echo": false}' message='Post details'
[2022-11-17 22:46:25,472] DEBUG - https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 579
[2022-11-17 22:46:25,473] INFO - message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=3162 request_id=5f2a9cb72c8894a0e7704d097d208780 response_code=200
[2022-11-17 22:46:25,473] INFO - message='Request to OpenAI API' method=post path=https://api.openai.com/v1/edits
[2022-11-17 22:46:25,473] DEBUG - api_version=None data='{"model": "text-davinci-edit-001", "input": "The basic features of Swift include variables, constants, data types, control flow, and functions. These features are relatively easy to learn and use, so you can start programming in Swift quickly. Additionally, Swift has many advanced features that you can explore as you become more familiar with the language.", "instruction": "Replace all non-characters with their spoken counterpart. And fix grammar.", "temperature": 0, "top_p": 1}' message='Post details'
[2022-11-17 22:46:28,374] DEBUG - https://api.openai.com:443 "POST /v1/edits HTTP/1.1" 200 461
[2022-11-17 22:46:28,374] INFO - message='OpenAI API response' path=https://api.openai.com/v1/edits processing_ms=2761 request_id=895428f6601ed682ee50cac4f2009a43 response_code=200
[2022-11-17 22:46:28,375] INFO - message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
[2022-11-17 22:46:28,375] DEBUG - api_version=None data='{"model": "text-davinci-002", "prompt": "Expand greatly upon the topic of A Beginner\'s Guide to Swift Programming in the context of computer science summarised for a 9th grader:\\n\\n1. What is Swift?\\n\\nSwift is a programming language created by Apple Inc. It is a powerful and fast programming language for iOS, macOS, tvOS, and watchOS. Swift is easy to learn and use, and it is open source, so anyone can contribute to its development.\\n\\n2. Why is Swift a good language for beginners?\\n\\nSwift is a great language for beginners because it is easy to learn and use. It is also powerful and fast, so you can create sophisticated apps with it. And because Swift is open source, anyone can contribute to its development.\\n\\n3. What are the basic features of Swift?\\n\\nThe basic features of Swift include variables, constants, data types, control flow, and functions. These features are relatively easy to learn and use, so you can start programming in Swift quickly. Additionally, Swift has many advanced features that you can explore as you become more familiar with the language.\\n\\n4. How do you write a Swift program?\\n\\n", "temperature": 1, "max_tokens": 128, "top_p": 1, "frequency_penalty": 0, "presence_penalty": 0, "n": 1, "stop": ["5.", "4."], "echo": false}' message='Post details'
[2022-11-17 22:46:32,037] DEBUG - https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 579
[2022-11-17 22:46:32,037] INFO - message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=3517 request_id=03d973e4637ca929b47afd28afa9cc34 response_code=200
[2022-11-17 22:46:32,038] INFO - message='Request to OpenAI API' method=post path=https://api.openai.com/v1/edits
[2022-11-17 22:46:32,038] DEBUG - api_version=None data='{"model": "text-davinci-edit-001", "input": "To write a Swift program, you will need a text editor and the Swift programming language. You can use any text editor, but we recommend using Atom, which is a free and open source text editor. Once you have Atom installed, you can open it and create a new file. In this file, you will write your Swift code.", "instruction": "Replace all non-characters with their spoken counterpart. And fix grammar.", "temperature": 0, "top_p": 1}' message='Post details'
[2022-11-17 22:46:36,498] DEBUG - https://api.openai.com:443 "POST /v1/edits HTTP/1.1" 200 455
[2022-11-17 22:46:36,499] INFO - message='OpenAI API response' path=https://api.openai.com/v1/edits processing_ms=4316 request_id=4a6097b40b3dd50da1912ccf7d6b514a response_code=200
[2022-11-17 22:46:36,500] INFO - message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
[2022-11-17 22:46:36,500] DEBUG - api_version=None data='{"model": "text-davinci-002", "prompt": "Expand greatly upon the topic of A Beginner\'s Guide to Swift Programming in the context of computer science summarised for a 9th grader:\\n\\n1. What is Swift?\\n\\nSwift is a programming language created by Apple Inc. It is a powerful and fast programming language for iOS, macOS, tvOS, and watchOS. Swift is easy to learn and use, and it is open source, so anyone can contribute to its development.\\n\\n2. Why is Swift a good language for beginners?\\n\\nSwift is a great language for beginners because it is easy to learn and use. It is also powerful and fast, so you can create sophisticated apps with it. And because Swift is open source, anyone can contribute to its development.\\n\\n3. What are the basic features of Swift?\\n\\nThe basic features of Swift include variables, constants, data types, control flow, and functions. These features are relatively easy to learn and use, so you can start programming in Swift quickly. Additionally, Swift has many advanced features that you can explore as you become more familiar with the language.\\n\\n4. How do you write a Swift program?\\n\\nTo write a Swift program, you will need a text editor and the Swift programming language. You can use any text editor, but we recommend using Atom, which is a free and open source text editor. Once you have Atom installed, you can open it and create a new file. In this file, you will write your Swift code.\\n\\n5. What are the benefits of Swift?\\n\\n", "temperature": 1, "max_tokens": 128, "top_p": 1, "frequency_penalty": 0, "presence_penalty": 0, "n": 1, "stop": ["6.", "5."], "echo": false}' message='Post details'
[2022-11-17 22:46:36,502] DEBUG - Resetting dropped connection: api.openai.com
[2022-11-17 22:46:39,834] DEBUG - https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 493
[2022-11-17 22:46:39,835] INFO - message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=2917 request_id=5b3faa2e98255a274ed22e5ff6a7007b response_code=200
[2022-11-17 22:46:39,836] INFO - message='Request to OpenAI API' method=post path=https://api.openai.com/v1/edits
[2022-11-17 22:46:39,836] DEBUG - api_version=None data='{"model": "text-davinci-edit-001", "input": "Some benefits of Swift include that it is powerful and fast, it is easy to learn and use, it is open source, and it runs on all Apple platforms. Additionally, Swift code is safe by design and helps prevent programming errors.", "instruction": "Replace all non-characters with their spoken counterpart. And fix grammar.", "temperature": 0, "top_p": 1}' message='Post details'
[2022-11-17 22:46:42,824] DEBUG - https://api.openai.com:443 "POST /v1/edits HTTP/1.1" 200 373
[2022-11-17 22:46:42,825] INFO - message='OpenAI API response' path=https://api.openai.com/v1/edits processing_ms=2844 request_id=37f4f061b02474d4d1aeabad8edd775d response_code=200
[2022-11-17 22:46:42,827] DEBUG - Starting new HTTPS connection (1): www.googleapis.com:443
[2022-11-17 22:46:42,984] DEBUG - https://www.googleapis.com:443 "GET /youtube/v3/playlists?part=id&id=UC_x5XG1OV2P6uZZ5FSM9Ttw&key=AIzaSyDfv2ISoNjVh2oX2JRJUQ1loS-voHH3GlI&maxResults=2 HTTP/1.1" 200 None
[2022-11-17 22:46:42,989] DEBUG - Starting new HTTPS connection (1): www.googleapis.com:443
[2022-11-17 22:46:43,641] DEBUG - https://www.googleapis.com:443 "GET /youtube/v3/search?part=snippet&type=video&maxResults=50&order=relevance&key=AIzaSyDfv2ISoNjVh2oX2JRJUQ1loS-voHH3GlI&q=A%20Beginner's%20Guide%20to%20Swift%20Programming&publishedAfter=2000-01-01T00:00:00Z&publishedBefore=3000-01-01T00:00:00Z HTTP/1.1" 200 None
[2022-11-17 22:46:43,647] DEBUG - Starting new HTTPS connection (1): www.googleapis.com:443
[2022-11-17 22:46:43,724] DEBUG - https://www.googleapis.com:443 "GET /youtube/v3/videos?key=AIzaSyDfv2ISoNjVh2oX2JRJUQ1loS-voHH3GlI&fields=items(snippet(description,tags))&part=snippet&id=Ulp1Kimblg0 HTTP/1.1" 200 None
[2022-11-17 22:46:43,729] DEBUG - Starting new HTTPS connection (1): www.googleapis.com:443
[2022-11-17 22:46:43,799] DEBUG - https://www.googleapis.com:443 "GET /youtube/v3/videos?key=AIzaSyDfv2ISoNjVh2oX2JRJUQ1loS-voHH3GlI&fields=items(snippet(description,tags))&part=snippet&id=CwA1VWP0Ldw HTTP/1.1" 200 None
[2022-11-17 22:46:43,803] DEBUG - Starting new HTTPS connection (1): www.googleapis.com:443
[2022-11-17 22:46:43,863] DEBUG - https://www.googleapis.com:443 "GET /youtube/v3/videos?key=AIzaSyDfv2ISoNjVh2oX2JRJUQ1loS-voHH3GlI&fields=items(snippet(description,tags))&part=snippet&id=FcsY1YPBwzQ HTTP/1.1" 200 None
[2022-11-17 22:46:43,867] DEBUG - Starting new HTTPS connection (1): www.googleapis.com:443
[2022-11-17 22:46:43,923] DEBUG - https://www.googleapis.com:443 "GET /youtube/v3/videos?key=AIzaSyDfv2ISoNjVh2oX2JRJUQ1loS-voHH3GlI&fields=items(snippet(description,tags))&part=snippet&id=yuo50-TiKgo HTTP/1.1" 200 None
[2022-11-17 22:46:43,927] DEBUG - Starting new HTTPS connection (1): www.googleapis.com:443
[2022-11-17 22:46:43,996] DEBUG - https://www.googleapis.com:443 "GET /youtube/v3/videos?key=AIzaSyDfv2ISoNjVh2oX2JRJUQ1loS-voHH3GlI&fields=items(snippet(description,tags))&part=snippet&id=comQ1-x2a1Q HTTP/1.1" 200 None
[2022-11-17 22:46:44,000] DEBUG - Starting new HTTPS connection (1): www.googleapis.com:443
[2022-11-17 22:46:44,075] DEBUG - https://www.googleapis.com:443 "GET /youtube/v3/videos?key=AIzaSyDfv2ISoNjVh2oX2JRJUQ1loS-voHH3GlI&fields=items(snippet(description,tags))&part=snippet&id=M2Ro5wEuY2o HTTP/1.1" 200 None
[2022-11-17 22:46:44,080] DEBUG - Starting new HTTPS connection (1): www.googleapis.com:443
[2022-11-17 22:46:44,148] DEBUG - https://www.googleapis.com:443 "GET /youtube/v3/videos?key=AIzaSyDfv2ISoNjVh2oX2JRJUQ1loS-voHH3GlI&fields=items(snippet(description,tags))&part=snippet&id=n5X_V81OYnQ HTTP/1.1" 200 None
[2022-11-17 22:46:44,153] DEBUG - Starting new HTTPS connection (1): www.googleapis.com:443
[2022-11-17 22:46:44,210] DEBUG - https://www.googleapis.com:443 "GET /youtube/v3/videos?key=AIzaSyDfv2ISoNjVh2oX2JRJUQ1loS-voHH3GlI&fields=items(snippet(description,tags))&part=snippet&id=ySa58y1SRy0 HTTP/1.1" 200 None
[2022-11-17 22:46:44,215] DEBUG - Starting new HTTPS connection (1): www.googleapis.com:443
[2022-11-17 22:46:44,273] DEBUG - https://www.googleapis.com:443 "GET /youtube/v3/videos?key=AIzaSyDfv2ISoNjVh2oX2JRJUQ1loS-voHH3GlI&fields=items(snippet(description,tags))&part=snippet&id=nAchMctX4YA HTTP/1.1" 200 None
[2022-11-17 22:46:44,277] DEBUG - Starting new HTTPS connection (1): www.googleapis.com:443
[2022-11-17 22:46:44,335] DEBUG - https://www.googleapis.com:443 "GET /youtube/v3/videos?key=AIzaSyDfv2ISoNjVh2oX2JRJUQ1loS-voHH3GlI&fields=items(snippet(description,tags))&part=snippet&id=4P_ZsOqELBo HTTP/1.1" 200 None
[2022-11-17 22:46:44,339] DEBUG - Starting new HTTPS connection (1): www.googleapis.com:443
[2022-11-17 22:46:44,393] DEBUG - https://www.googleapis.com:443 "GET /youtube/v3/videos?key=AIzaSyDfv2ISoNjVh2oX2JRJUQ1loS-voHH3GlI&fields=items(snippet(description,tags))&part=snippet&id=pSzkQiGdZrY HTTP/1.1" 200 None
[2022-11-17 22:46:44,399] DEBUG - Starting new HTTPS connection (1): www.googleapis.com:443
[2022-11-17 22:46:44,453] DEBUG - https://www.googleapis.com:443 "GET /youtube/v3/videos?key=AIzaSyDfv2ISoNjVh2oX2JRJUQ1loS-voHH3GlI&fields=items(snippet(description,tags))&part=snippet&id=aiXvvL1wNUc HTTP/1.1" 200 None
[2022-11-17 22:46:44,457] DEBUG - Starting new HTTPS connection (1): www.googleapis.com:443
[2022-11-17 22:46:44,523] DEBUG - https://www.googleapis.com:443 "GET /youtube/v3/videos?key=AIzaSyDfv2ISoNjVh2oX2JRJUQ1loS-voHH3GlI&fields=items(snippet(description,tags))&part=snippet&id=mhE-Mp07RTo HTTP/1.1" 200 None
[2022-11-17 22:46:44,527] DEBUG - Starting new HTTPS connection (1): www.googleapis.com:443
[2022-11-17 22:46:44,588] DEBUG - https://www.googleapis.com:443 "GET /youtube/v3/videos?key=AIzaSyDfv2ISoNjVh2oX2JRJUQ1loS-voHH3GlI&fields=items(snippet(description,tags))&part=snippet&id=ZGBnws3WEA8 HTTP/1.1" 200 None
[2022-11-17 22:46:44,593] DEBUG - Starting new HTTPS connection (1): www.googleapis.com:443
[2022-11-17 22:46:44,652] DEBUG - https://www.googleapis.com:443 "GET /youtube/v3/videos?key=AIzaSyDfv2ISoNjVh2oX2JRJUQ1loS-voHH3GlI&fields=items(snippet(description,tags))&part=snippet&id=ot1AKV9kfAo HTTP/1.1" 200 None
[2022-11-17 22:46:44,656] DEBUG - Starting new HTTPS connection (1): www.googleapis.com:443
[2022-11-17 22:46:44,732] DEBUG - https://www.googleapis.com:443 "GET /youtube/v3/videos?key=AIzaSyDfv2ISoNjVh2oX2JRJUQ1loS-voHH3GlI&fields=items(snippet(description,tags))&part=snippet&id=UTgp_6_mc4c HTTP/1.1" 200 None
[2022-11-17 22:46:44,735] DEBUG - Starting new HTTPS connection (1): www.googleapis.com:443
[2022-11-17 22:46:44,785] DEBUG - https://www.googleapis.com:443 "GET /youtube/v3/videos?key=AIzaSyDfv2ISoNjVh2oX2JRJUQ1loS-voHH3GlI&fields=items(snippet(description,tags))&part=snippet&id=VhCc2DzIX00 HTTP/1.1" 200 None
[2022-11-17 22:46:44,788] DEBUG - Starting new HTTPS connection (1): www.googleapis.com:443
[2022-11-17 22:46:44,858] DEBUG - https://www.googleapis.com:443 "GET /youtube/v3/videos?key=AIzaSyDfv2ISoNjVh2oX2JRJUQ1loS-voHH3GlI&fields=items(snippet(description,tags))&part=snippet&id=YHBNjgBtr9U HTTP/1.1" 200 None
[2022-11-17 22:46:44,862] DEBUG - Starting new HTTPS connection (1): www.googleapis.com:443
[2022-11-17 22:46:44,934] DEBUG - https://www.googleapis.com:443 "GET /youtube/v3/videos?key=AIzaSyDfv2ISoNjVh2oX2JRJUQ1loS-voHH3GlI&fields=items(snippet(description,tags))&part=snippet&id=KCgYDCKqato HTTP/1.1" 200 None
[2022-11-17 22:46:44,937] DEBUG - Starting new HTTPS connection (1): www.googleapis.com:443
[2022-11-17 22:46:44,993] DEBUG - https://www.googleapis.com:443 "GET /youtube/v3/videos?key=AIzaSyDfv2ISoNjVh2oX2JRJUQ1loS-voHH3GlI&fields=items(snippet(description,tags))&part=snippet&id=R4U42rkmHDk HTTP/1.1" 200 None
[2022-11-17 22:46:44,998] DEBUG - Starting new HTTPS connection (1): www.googleapis.com:443
[2022-11-17 22:46:45,080] DEBUG - https://www.googleapis.com:443 "GET /youtube/v3/videos?key=AIzaSyDfv2ISoNjVh2oX2JRJUQ1loS-voHH3GlI&fields=items(snippet(description,tags))&part=snippet&id=MO7Ta0DvEWA HTTP/1.1" 200 None
[2022-11-17 22:46:45,085] DEBUG - Starting new HTTPS connection (1): www.googleapis.com:443
[2022-11-17 22:46:45,155] DEBUG - https://www.googleapis.com:443 "GET /youtube/v3/videos?key=AIzaSyDfv2ISoNjVh2oX2JRJUQ1loS-voHH3GlI&fields=items(snippet(description,tags))&part=snippet&id=leezZ9wlytk HTTP/1.1" 200 None
[2022-11-17 22:46:45,161] DEBUG - Starting new HTTPS connection (1): www.googleapis.com:443
[2022-11-17 22:46:45,225] DEBUG - https://www.googleapis.com:443 "GET /youtube/v3/videos?key=AIzaSyDfv2ISoNjVh2oX2JRJUQ1loS-voHH3GlI&fields=items(snippet(description,tags))&part=snippet&id=fGAIgnUzLc0 HTTP/1.1" 200 None
[2022-11-17 22:46:45,229] DEBUG - Starting new HTTPS connection (1): www.googleapis.com:443
[2022-11-17 22:46:45,297] DEBUG - https://www.googleapis.com:443 "GET /youtube/v3/videos?key=AIzaSyDfv2ISoNjVh2oX2JRJUQ1loS-voHH3GlI&fields=items(snippet(description,tags))&part=snippet&id=tdT1gvIZwSE HTTP/1.1" 200 None
[2022-11-17 22:46:45,301] DEBUG - Starting new HTTPS connection (1): www.googleapis.com:443
[2022-11-17 22:46:45,358] DEBUG - https://www.googleapis.com:443 "GET /youtube/v3/videos?key=AIzaSyDfv2ISoNjVh2oX2JRJUQ1loS-voHH3GlI&fields=items(snippet(description,tags))&part=snippet&id=GG7bu0NRyYM HTTP/1.1" 200 None
[2022-11-17 22:46:45,363] DEBUG - Hashtags ['#swift', '#softwaredeveloper', '#iosdeveloper', '#learnswift', '#swifttutorial', '#codewithchris', '#swift', '#beginner', '#firstapp', '#codewithchris', '#swifttutorial', '#learnswift', '#apple', '#programming', '#100secondsofcode', '#swift', '#softwaredeveloper', '#iosdeveloper', '#swift', '#softwaredeveloper', '#iosdeveloper', '#swift', '#iosappdevelopment', '#edureka', '#swiftui', '#swiftbasics', '#iosdevelopment', '#codewithchris', '#swifttutorial', '#learnswift', '#swift', '#codewithchris']
[2022-11-17 22:46:45,363] DEBUG - Top Hashtags ['#swift', '#codewithchris', '#softwaredeveloper', '#iosdeveloper', '#learnswift']
[2022-11-17 22:46:45,363] DEBUG - Tags ['swift programming', 'swift tutorial', 'learn swift', 'swift programming language', 'ios', 'ios development', 'swift', 'swift tutorial', 'ios developer', 'ios development', 'swift app tutorial', 'swift beginner', 'beginner swift', 'swift beginner tutorial', 'swift beginner app', 'swift beginner course', 'beginner swift programming', 'beginner swift tutorial', 'beginner swift projects', 'ios swift beginner', 'ios development course', 'ios development for beginners', 'swift first app', 'swift programming language', 'what is swift', 'xcode for beginners', 'swift programming course', 'swift for beginners', 'ios dev for beginners', 'learn swift', 'learn swift programming', 'learn swift 5', 'learn swift in one video', 'learn swift programming language', 'learn swift fast', 'swift tutorial', 'swift 5', 'swift programming', 'swift tutorial for beginners', 'learn swift 2019', 'learn swift with bob', 'learn swift ios', 'learn swift for beginners', 'ios', 'app development', 'mobile development', 'apps', 'developer', 'programming', 'tutorial', 'code', 'ios development', 'learn to code', 'swift language', 'learn swift from scratch', 'swift programming tutorial', 'how to build app', 'swift beginners', 'swift build app', 'how to make app', 'swift make app', 'make iphone app', 'swiftui app', 'swift', 'swiftui tutorial', 'make first app', 'build first app', 'iphone app tutorial', 'how to make ios app', 'swift build first app', 'swift first app', 'swift app tutorial', 'how to make app tutorial', 'swift for beginner', 'swift basics', 'swift basics tutorial', 'swift tutorial', 'swift beginner 2021', '2021 make app', 'swift xcode', 'xcode 12', 'make app', 'learn to make app', 'swift 2021', 'swift course', 'swift programming', 'swift tutorial', 'learn swift', 'swift programming language', 'ios', 'ios development', 'swift tutorial for beginners', 'swift course for beginners', 'ios programming', 'swift', 'ios', 'swift tutorial', 'swift programming', 'learn swift', 'ios development', 'swift programming language', 'learn swift fast', 'learn swift programming language', 'swift language', 'ios development swift', 'swift tutorial', 'swift programming', 'learn swift', 'swift 5', 'swift 4', 'swift programming language', 'swift tutorial for beginners', 'swift programming for beginners', 'swift beginner tutorial', 'swift language', 'ios development', 'ios tutorial', 'variables', 'constants', 'webdev', 'app development', 'lesson', 'tutorial', 'swift', 'swift tutorial', 'ios developer', 'ios development', 'swift code tutorial', 'swift app tutorial', 'swift beginner', 'beginner swift', 'swift beginner tutorial', 'swift beginner app', 'swift beginner course', 'beginner swift programming', 'beginner swift tutorial', 'beginner swift projects', 'ios swift beginner', 'ios development course', 'ios development for beginners', 'sean allen', 'swift first app', 'swift programming language', 'what is swift', 'yt:cc=on', 'swift tutorial', 'swift tutorial for beginners', 'swift programming language tutorial', 'swift programming', 'swift programming tutorials', 'swift 3 programming', 'what is swift programming', 'swift programming for beginners', 'swift programming ios', 'swift programming course', 'reactive programming swift', 'swift programming code', 'ios swift tutorial', 'swift ios tutorial', 'swift ios development', 'swift ios app development tutorial', 'swift programming training', 'great learning', 'learn swift', 'swift first app', 'swift beginner', 'swift', 'swift 3', 'swift beginner tutorial', 'learn swift', 'learn ios', 'xcode', 'swift tutorial', 'ios tutorial', 'xcode tutorial', 'build my first app', 'swift beginner guide', 'build ios app', 'build ios app swift', 'swift beginner app', 'swift first app', 'ios first app tutorial', 'ios first app', 'ios first application tutorial', 'first ios app swift', 'first ios app xcode', 'my first ios app', 'build your first ios app with swift', 'how to build your first ios app', 'learn ios', 'learn app development', 'build apps', 'flutter', 'ios12', 'programming', 'app development', 'programmer', 'learn to code', 'app tutorial', 'ios tutorial', 'coding tutorial', 'swift tutorial', 'swift tutorial for beginners', 'swift tutorial 2019', 'swift tutorial 2020', 'swift tutorial - full course for beginners', 'learn swift 2020', 'learn swift fast', 'ios', 'mobile app', 'developer', 'apple', 'mac', 'software', 'engineer', 'ios developer', 'macos', 'swift', 'iphone', 'app', 'app dev', 'dev', 'software developer', 'programming', 'software engineering', 'learn ios', 'beginner ios developer', 'learn ios programming', 'ios programming course', 'learn', 'angela yu udemy', 'stanford ios', '100 days of swift', 'paul hudson', 'hacking with swift', 'ios development', 'ios dev', 'learn ios development', 'how to become an ios developer', 'app development', 'ios app development', 'learn swift', 'swift tutorial', 'yt:cc=on', 'swift tutorial', 'swift tutorial for beginners', 'swift programming language tutorial', 'swift programming', 'swift programming tutorials', 'swift 3 programming', 'what is swift programming', 'swift programming for beginners', 'swift programming ios', 'swift programming course', 'reactive programming swift', 'swift programming code', 'ios swift tutorial', 'swift ios tutorial', 'swift ios development', 'swift ios app development tutorial', 'swift programming training', 'edureka', 'swift programming tutorial for beginners 2022', 'swift ios tutorial for beginners', 'swift laguage tutorial for beginners', 'swift programming for begginers 2021', 'swift course for beginners', 'swift language tutorial for beginners', 'swift programming for beginners 2021', 'swift programming tutorial for begginers 2022', 'swift language tutorial for begginers', 'functional programming', 'map reduce', 'functional programming tutorial', 'hackingwithswift', 'raywenderlich', 'swift', 'xcode', 'xcode 12', 'ios development swift', 'swiftui', 'swift language', 'swift language tutorial', 'swift language tutorial for beginners', 'swift tutorial', 'swift code tutorial', 'swift beginner app', 'swift first app', 'swiftui first app', 'build your first ios app with swiftui', 'swift naming', 'swift naming conventions', 'swift type system', 'type inference', 'type safety', 'swift bool', 'swift float', 'swift string manipulation', 'swift beginner tutorial', 'swift 5', 'swift programming tutorial', 'swift programming language', 'how to make an app', 'how to create an app', 'how build a mobile app', 'xcode', 'swift', 'ios', 'coding', 'programming', 'ios development', 'ipod', 'iphone', 'itouch', 'iphone', 'ipod', 'itouch', 'macbook', 'macbook', 'ipod', 'macbook pro', 'macbook', 'ios 7', 'ios', 'ios', 'ios 7', 'ios', 'steve jobs', 'tim cook', 'phil schiller', '5c', 'iphone 5s', 'apple tv', 'airport', 'apple keynotes', 'ipod 5', 'ipod nano', 'ipod shuffle', 'introduction', 'apple worldwide developers conference (conference series)', 'apple inc. (organization)', 'swift', 'swift introduction', 'xcode', 'swift', 'ios', 'coding', 'programming', 'ios development', 'swift development', 'swift tips', 'swift coding', 'swift programming language', 'swift tutorial', 'swift 5', 'learn to code', 'learn swift', 'swift', 'swift programming', 'software (industry)', 'swift programming', 'swift', 'ios', 'osx', 'development', 'swift programming', 'swift programming for beginners', 'swift programming basics', 'mac development', 'xcode', 'iphone development', 'apple', 'new', 'peter entwistle', 'peterentwistletv', 'computer programming (professional field)', 'lesson', 'for beginners', 'tutorial']
[2022-11-17 22:46:45,364] DEBUG - Top Tags ['swift tutorial', 'swift', 'ios', 'swift programming', 'ios development', 'learn swift', 'swift programming language', 'swift first app', 'swift tutorial for beginners', 'swift beginner tutorial', 'programming', 'xcode', 'swift beginner app', 'swift 5']
[2022-11-17 22:46:59,916] DEBUG - processing 20 tts sections
[2022-11-17 22:46:59,917] DEBUG - Text-to-speech: What is Swift?
[2022-11-17 22:46:59,917] DEBUG - [#1] Subsection: What is Swift?
[2022-11-17 22:47:28,457] DEBUG - Text-to-speech: Swift is a programming language created by Apple Inc. It is a powerful and fast programming language for iOS, macOS, tvOS, and watchOS. Swift is easy to learn and use, and it is open source, so anyone can contribute to its development.
[2022-11-17 22:47:28,457] DEBUG - [#1] Subsection: Swift is a programming language created by Apple Inc. It is a powerful and fast programming language for iOS, macOS, tvOS, and watchOS. Swift is easy to learn and use, and it is open source, so anyone can contribute to its development.
[2022-11-17 22:48:05,400] DEBUG - [#2] Subsection: Swift is a programming language created by Apple Inc. It is a powerful and fast programming language for iOS, macOS, tvOS, and watchOS. Swift is easy to learn and use, and it is open source, so anyone can contribute to its development.
[2022-11-17 22:49:04,390] DEBUG - [#3] Subsection: Swift is a programming language created by Apple Inc. It is a powerful and fast programming language for iOS, macOS, tvOS, and watchOS. Swift is easy to learn and use, and it is open source, so anyone can contribute to its development.
[2022-11-17 22:49:47,359] DEBUG - Text-to-speech: Why is Swift a good language for beginners?
[2022-11-17 22:49:47,359] DEBUG - [#1] Subsection: Why is Swift a good language for beginners?
[2022-11-17 22:50:06,687] DEBUG - Text-to-speech: Swift is a great language for beginners because it is easy to learn and use. It is also powerful and fast, so you can create sophisticated apps with it. And because Swift is open source, anyone can contribute to its development.
[2022-11-17 22:50:06,687] DEBUG - [#1] Subsection: Swift is a great language for beginners because it is easy to learn and use. It is also powerful and fast, so you can create sophisticated apps with it. And because Swift is open source, anyone can contribute to its development.
[2022-11-17 22:50:34,058] DEBUG - [#2] Subsection: Swift is a great language for beginners because it is easy to learn and use. It is also powerful and fast, so you can create sophisticated apps with it. And because Swift is open source, anyone can contribute to its development.
[2022-11-17 22:51:00,033] DEBUG - [#3] Subsection: Swift is a great language for beginners because it is easy to learn and use. It is also powerful and fast, so you can create sophisticated apps with it. And because Swift is open source, anyone can contribute to its development.
[2022-11-17 22:51:26,721] DEBUG - Text-to-speech: What are the basic features of Swift?
[2022-11-17 22:51:26,721] DEBUG - [#1] Subsection: What are the basic features of Swift?
[2022-11-17 22:51:42,627] DEBUG - Text-to-speech: The basic features of Swift include variables, constants, data types, control flow, and functions. These features are relatively easy to learn and use, so you can start programming in Swift quickly. Additionally, Swift has many advanced features that you can explore as you become more familiar with the language.
[2022-11-17 22:51:42,627] DEBUG - [#1] Subsection: The basic features of Swift include variables, constants, data types, control flow, and functions. These features are relatively easy to learn and use, so you can start programming in Swift quickly. Additionally, Swift has many advanced features that you can explore as you become more familiar with the language.
[2022-11-17 22:52:24,537] DEBUG - [#2] Subsection: The basic features of Swift include variables, constants, data types, control flow, and functions. These features are relatively easy to learn and use, so you can start programming in Swift quickly. Additionally, Swift has many advanced features that you can explore as you become more familiar with the language.
[2022-11-17 22:53:10,785] DEBUG - [#3] Subsection: The basic features of Swift include variables, constants, data types, control flow, and functions. These features are relatively easy to learn and use, so you can start programming in Swift quickly. Additionally, Swift has many advanced features that you can explore as you become more familiar with the language.
[2022-11-17 22:54:05,674] DEBUG - Text-to-speech: How do you write a Swift program?
[2022-11-17 22:54:05,674] DEBUG - [#1] Subsection: How do you write a Swift program?
[2022-11-17 22:54:31,842] DEBUG - Text-to-speech: To write a Swift program, you will need a text editor and the Swift programming language. You can use any text editor, but we recommend using Atom, which is a free and open source text editor. Once you have Atom installed, you can open it and create a new file. In this file, you will write your Swift code.
[2022-11-17 22:54:31,842] DEBUG - [#1] Subsection: To write a Swift program, you will need a text editor and the Swift programming language. You can use any text editor, but we recommend using Atom, which is a free and open source text editor. Once you have Atom installed, you can open it and create a new file. In this file, you will write your Swift code.
[2022-11-17 22:55:16,260] DEBUG - [#2] Subsection: To write a Swift program, you will need a text editor and the Swift programming language. You can use any text editor, but we recommend using Atom, which is a free and open source text editor. Once you have Atom installed, you can open it and create a new file. In this file, you will write your Swift code.
[2022-11-17 22:56:08,254] DEBUG - [#3] Subsection: To write a Swift program, you will need a text editor and the Swift programming language. You can use any text editor, but we recommend using Atom, which is a free and open source text editor. Once you have Atom installed, you can open it and create a new file. In this file, you will write your Swift code.
[2022-11-17 22:56:42,227] DEBUG - [#4] Subsection: To write a Swift program, you will need a text editor and the Swift programming language. You can use any text editor, but we recommend using Atom, which is a free and open source text editor. Once you have Atom installed, you can open it and create a new file. In this file, you will write your Swift code.
[2022-11-17 22:57:05,336] DEBUG - Text-to-speech: What are the benefits of Swift?
[2022-11-17 22:57:05,336] DEBUG - [#1] Subsection: What are the benefits of Swift?
[2022-11-17 22:57:25,121] DEBUG - Text-to-speech: Some benefits of Swift include that it is powerful and fast, it is easy to learn and use, it is open source, and it runs on all Apple platforms. Additionally, Swift code is safe by design and helps prevent programming errors.
[2022-11-17 22:57:25,121] DEBUG - [#1] Subsection: Some benefits of Swift include that it is powerful and fast, it is easy to learn and use, it is open source, and it runs on all Apple platforms. Additionally, Swift code is safe by design and helps prevent programming errors.
[2022-11-17 22:58:27,923] DEBUG - [#2] Subsection: Some benefits of Swift include that it is powerful and fast, it is easy to learn and use, it is open source, and it runs on all Apple platforms. Additionally, Swift code is safe by design and helps prevent programming errors.
[2022-11-17 22:59:00,314] CRITICAL - Failed to generate audio
[2022-11-17 22:59:00,314] INFO - Getting video script.
[2022-11-17 22:59:00,314] INFO - message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
[2022-11-17 22:59:00,315] DEBUG - api_version=None data='{"model": "text-davinci-002", "prompt": "Write a list of unique and interesting keywords relating to basic computer science:\\n\\n-", "temperature": 1, "max_tokens": 128, "top_p": 1, "frequency_penalty": 0, "presence_penalty": 0, "n": 1, "stop": "", "echo": false}' message='Post details'
[2022-11-17 22:59:00,316] DEBUG - Resetting dropped connection: api.openai.com
[2022-11-17 22:59:02,299] DEBUG - https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 483
[2022-11-17 22:59:02,300] INFO - message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1509 request_id=f69f1848add2d09dd1526ccbeba1c1e6 response_code=200
[2022-11-17 22:59:02,300] INFO - message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
[2022-11-17 22:59:02,300] DEBUG - api_version=None data='{"model": "text-curie-001", "prompt": "Write a list of 5 interesting beginner topics on where Databases is used in the context of computer science:\\n-", "temperature": 0.7, "max_tokens": 256, "top_p": 1, "frequency_penalty": 0, "presence_penalty": 0, "n": 1, "stop": "", "echo": false}' message='Post details'
[2022-11-17 22:59:02,713] DEBUG - https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 357
[2022-11-17 22:59:02,713] INFO - message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=259 request_id=0aeba1fc28abe4e3208ea69a626816cb response_code=200
[2022-11-17 22:59:02,714] INFO - message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
[2022-11-17 22:59:02,714] DEBUG - api_version=None data='{"model": "text-davinci-002", "prompt": "Write a short, unique and interesting title relating to the theory of Database Design in the form of a video essay title without involving numbers:", "temperature": 1, "max_tokens": 20, "top_p": 1, "frequency_penalty": 0, "presence_penalty": 0, "n": 1, "stop": "", "echo": false}' message='Post details'
[2022-11-17 22:59:03,491] DEBUG - https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 302
[2022-11-17 22:59:03,492] INFO - message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=633 request_id=dc8d7cba62899f8838338bd40722bfea response_code=200
[2022-11-17 22:59:03,530] DEBUG - Keyword Databases, Topics ['Online Databases', 'Text Databases', 'Databases as a Service', 'Big Data Databases', 'Database Design'], Topic The Dangers of a Bad Database Design
[2022-11-17 22:59:03,530] INFO - message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
[2022-11-17 22:59:03,530] DEBUG - api_version=None data='{"model": "text-davinci-002", "prompt": "Write a list of beginner topics relating to what is The Dangers of a Bad Database Design in the context of computer science:\\n\\n", "temperature": 0, "max_tokens": 256, "top_p": 1, "frequency_penalty": 0, "presence_penalty": 0, "n": 1, "stop": "", "echo": false}' message='Post details'
[2022-11-17 22:59:05,556] DEBUG - https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 448
[2022-11-17 22:59:05,557] INFO - message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1880 request_id=fd738eb463538f9f8f9ea4c1d12148c5 response_code=200
[2022-11-17 22:59:05,557] DEBUG - topic: The Dangers of a Bad Database Design, sub topics 
-The Dangers of a Bad Database Design
-How to Design a Good Database
-The Benefits of a Good Database Design
-The Importance of Database Design
-The Fundamentals of Database Design
[2022-11-17 22:59:05,557] DEBUG - getting summary for topic
[2022-11-17 22:59:05,557] INFO - message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
[2022-11-17 22:59:05,557] DEBUG - api_version=None data='{"model": "text-curie-001", "prompt": "Write a summary for the following topic in the form of a youtube description in the context of computer science:\\n\\ntopic: The Dangers of a Bad Database Design\\n\\nsummary:", "temperature": 0, "max_tokens": 256, "top_p": 1, "frequency_penalty": 0, "presence_penalty": 0, "n": 1, "stop": "", "echo": false}' message='Post details'
[2022-11-17 22:59:06,458] DEBUG - https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 621
[2022-11-17 22:59:06,458] INFO - message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=754 request_id=115595989bb5bf79c238e2a69ac5cd11 response_code=200
[2022-11-17 22:59:06,458] INFO - message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
[2022-11-17 22:59:06,458] DEBUG - api_version=None data='{"model": "text-davinci-002", "prompt": "Expand greatly upon the topic of The Dangers of a Bad Database Design in the context of computer science summarised for a 9th grader:\\n\\n1. The Dangers of a Bad Database Design\\n\\n", "temperature": 1, "max_tokens": 128, "top_p": 1, "frequency_penalty": 0, "presence_penalty": 0, "n": 1, "stop": ["2.", "1."], "echo": false}' message='Post details'
[2022-11-17 22:59:09,869] DEBUG - https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 604
[2022-11-17 22:59:09,869] INFO - message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=3270 request_id=27692f09e593e8a94cbde6373f2147b8 response_code=200
[2022-11-17 22:59:09,870] INFO - message='Request to OpenAI API' method=post path=https://api.openai.com/v1/edits
[2022-11-17 22:59:09,870] DEBUG - api_version=None data='{"model": "text-davinci-edit-001", "input": "The main dangers of a bad database design are data inconsistency and dataIntegrity problems. Data inconsistency means that the data in the database is inaccurate or incorrect. Data integrity means that the data in the database is complete and accurate. Both of these problems can lead to serious problems for the users of the database.", "instruction": "Replace all non-characters with their spoken counterpart. And fix grammar.", "temperature": 0, "top_p": 1}' message='Post details'
[2022-11-17 22:59:13,991] DEBUG - https://api.openai.com:443 "POST /v1/edits HTTP/1.1" 200 483
[2022-11-17 22:59:13,991] INFO - message='OpenAI API response' path=https://api.openai.com/v1/edits processing_ms=3979 request_id=f0eb0d9860b16454cc36fd288136dfb7 response_code=200
[2022-11-17 22:59:13,991] INFO - message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
[2022-11-17 22:59:13,991] DEBUG - api_version=None data='{"model": "text-davinci-002", "prompt": "Expand greatly upon the topic of The Dangers of a Bad Database Design in the context of computer science summarised for a 9th grader:\\n\\n1. The Dangers of a Bad Database Design\\n\\nThe main dangers of a bad database design are data inconsistency and data integrity problems. Data inconsistency means that the data in the database is inaccurate or incorrect. Data integrity means that the data in the database is complete and accurate. Both of these problems can lead to serious problems for the users of the database.\\n\\n2. How to Design a Good Database\\n\\n", "temperature": 1, "max_tokens": 128, "top_p": 1, "frequency_penalty": 0, "presence_penalty": 0, "n": 1, "stop": ["3.", "2."], "echo": false}' message='Post details'
[2022-11-17 22:59:16,751] DEBUG - https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 576
[2022-11-17 22:59:16,752] INFO - message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=2618 request_id=a01cd359d192c36fee30709eea4324b1 response_code=200
[2022-11-17 22:59:16,752] INFO - message='Request to OpenAI API' method=post path=https://api.openai.com/v1/edits
[2022-11-17 22:59:16,752] DEBUG - api_version=None data='{"model": "text-davinci-edit-001", "input": "In order to design a good database, you need to understand the requirements of the application that will be using the database. You also need to understand the relationships between the data elements in the database. Once you understand these things, you can design a database that is reliable and efficient.", "instruction": "Replace all non-characters with their spoken counterpart. And fix grammar.", "temperature": 0, "top_p": 1}' message='Post details'
[2022-11-17 22:59:21,012] DEBUG - https://api.openai.com:443 "POST /v1/edits HTTP/1.1" 200 456
[2022-11-17 22:59:21,013] INFO - message='OpenAI API response' path=https://api.openai.com/v1/edits processing_ms=4118 request_id=182592b4c1d698123da5b108b65d6a83 response_code=200
[2022-11-17 22:59:21,014] INFO - message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
[2022-11-17 22:59:21,015] DEBUG - api_version=None data='{"model": "text-davinci-002", "prompt": "Expand greatly upon the topic of The Dangers of a Bad Database Design in the context of computer science summarised for a 9th grader:\\n\\n1. The Dangers of a Bad Database Design\\n\\nThe main dangers of a bad database design are data inconsistency and data integrity problems. Data inconsistency means that the data in the database is inaccurate or incorrect. Data integrity means that the data in the database is complete and accurate. Both of these problems can lead to serious problems for the users of the database.\\n\\n2. How to Design a Good Database\\n\\nIn order to design a good database, you need to understand the requirements of the application that will be using the database. You also need to understand the relationships between the data elements in the database. Once you understand these things, you can design a database that is reliable and efficient.\\n\\n3. The Benefits of a Good Database Design\\n\\n", "temperature": 1, "max_tokens": 128, "top_p": 1, "frequency_penalty": 0, "presence_penalty": 0, "n": 1, "stop": ["4.", "3."], "echo": false}' message='Post details'
[2022-11-17 22:59:24,177] DEBUG - https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 567
[2022-11-17 22:59:24,177] INFO - message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=3021 request_id=301b60d265701febdf2b952504d744c2 response_code=200
[2022-11-17 22:59:24,177] INFO - message='Request to OpenAI API' method=post path=https://api.openai.com/v1/edits
[2022-11-17 22:59:24,178] DEBUG - api_version=None data='{"model": "text-davinci-edit-001", "input": "A well-designed database can be a valuable asset to an organization. It can help to improve the efficiency of the organization and help to reduce the cost of data storage and retrieval. A good database can also help to improve the accuracy of data and make it easier to use the data in decision-making.", "instruction": "Replace all non-characters with their spoken counterpart. And fix grammar.", "temperature": 0, "top_p": 1}' message='Post details'
[2022-11-17 22:59:29,548] DEBUG - https://api.openai.com:443 "POST /v1/edits HTTP/1.1" 200 449
[2022-11-17 22:59:29,548] INFO - message='OpenAI API response' path=https://api.openai.com/v1/edits processing_ms=5233 request_id=d334bd73f42e26c4adb1c402f5ef1972 response_code=200
[2022-11-17 22:59:29,549] INFO - message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
[2022-11-17 22:59:29,549] DEBUG - api_version=None data='{"model": "text-davinci-002", "prompt": "Expand greatly upon the topic of The Dangers of a Bad Database Design in the context of computer science summarised for a 9th grader:\\n\\n1. The Dangers of a Bad Database Design\\n\\nThe main dangers of a bad database design are data inconsistency and data integrity problems. Data inconsistency means that the data in the database is inaccurate or incorrect. Data integrity means that the data in the database is complete and accurate. Both of these problems can lead to serious problems for the users of the database.\\n\\n2. How to Design a Good Database\\n\\nIn order to design a good database, you need to understand the requirements of the application that will be using the database. You also need to understand the relationships between the data elements in the database. Once you understand these things, you can design a database that is reliable and efficient.\\n\\n3. The Benefits of a Good Database Design\\n\\nA welldesigned database can be a valuable asset to an organization. It can help to improve the efficiency of the organization and help to reduce the cost of data storage and retrieval. A good database can also help to improve the accuracy of data and make it easier to use the data in decision making.\\n\\n4. The Importance of Database Design\\n\\n", "temperature": 1, "max_tokens": 128, "top_p": 1, "frequency_penalty": 0, "presence_penalty": 0, "n": 1, "stop": ["5.", "4."], "echo": false}' message='Post details'
[2022-11-17 22:59:31,363] DEBUG - https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 471
[2022-11-17 22:59:31,364] INFO - message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1675 request_id=5f8d58d6221886cc9a79b4ffcd6798dc response_code=200
[2022-11-17 22:59:31,364] INFO - message='Request to OpenAI API' method=post path=https://api.openai.com/v1/edits
[2022-11-17 22:59:31,364] DEBUG - api_version=None data='{"model": "text-davinci-edit-001", "input": "Database design is important because it helps to ensure that the database is effective and efficient. A good database design can help to improve the performance of the database and make it easier to use.", "instruction": "Replace all non-characters with their spoken counterpart. And fix grammar.", "temperature": 0, "top_p": 1}' message='Post details'
[2022-11-17 22:59:34,885] DEBUG - https://api.openai.com:443 "POST /v1/edits HTTP/1.1" 200 350
[2022-11-17 22:59:34,885] INFO - message='OpenAI API response' path=https://api.openai.com/v1/edits processing_ms=3382 request_id=27f3781ba7f7a75d83d0223bb2061e63 response_code=200
[2022-11-17 22:59:34,886] INFO - message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
[2022-11-17 22:59:34,886] DEBUG - api_version=None data='{"model": "text-davinci-002", "prompt": "Expand greatly upon the topic of The Dangers of a Bad Database Design in the context of computer science summarised for a 9th grader:\\n\\n1. The Dangers of a Bad Database Design\\n\\nThe main dangers of a bad database design are data inconsistency and data integrity problems. Data inconsistency means that the data in the database is inaccurate or incorrect. Data integrity means that the data in the database is complete and accurate. Both of these problems can lead to serious problems for the users of the database.\\n\\n2. How to Design a Good Database\\n\\nIn order to design a good database, you need to understand the requirements of the application that will be using the database. You also need to understand the relationships between the data elements in the database. Once you understand these things, you can design a database that is reliable and efficient.\\n\\n3. The Benefits of a Good Database Design\\n\\nA welldesigned database can be a valuable asset to an organization. It can help to improve the efficiency of the organization and help to reduce the cost of data storage and retrieval. A good database can also help to improve the accuracy of data and make it easier to use the data in decision making.\\n\\n4. The Importance of Database Design\\n\\nDatabase design is important because it helps to ensure that the database is effective and efficient. A good database design can help to improve the performance of the database and make it easier to use.\\n\\n5. The Fundamentals of Database Design\\n\\n", "temperature": 1, "max_tokens": 128, "top_p": 1, "frequency_penalty": 0, "presence_penalty": 0, "n": 1, "stop": ["6.", "5."], "echo": false}' message='Post details'
[2022-11-17 22:59:39,865] DEBUG - https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 786
[2022-11-17 22:59:39,865] INFO - message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=4837 request_id=7cecf44778caab7646e335660d869f38 response_code=200
[2022-11-17 22:59:39,866] INFO - message='Request to OpenAI API' method=post path=https://api.openai.com/v1/edits
[2022-11-17 22:59:39,866] DEBUG - api_version=None data='{"model": "text-davinci-edit-001", "input": "There are four basic principles of database design:\\n\\nEntity Relationship Modelling - This is the process of identifying the relationships between the data elements in the database.\\n\\nData Normalization - This is the process of ensuring that the data in the database is stored in a consistent format.\\n\\nData Integrity - This is the process of ensuring that the data in the database is accurate and complete.\\n\\nDatabase Security - This is the process of ensuring that the database is secure from unauthorized access.", "instruction": "Replace all non-characters with their spoken counterpart. And fix grammar.", "temperature": 0, "top_p": 1}' message='Post details'
[2022-11-17 22:59:49,992] DEBUG - https://api.openai.com:443 "POST /v1/edits HTTP/1.1" 200 632
[2022-11-17 22:59:49,992] INFO - message='OpenAI API response' path=https://api.openai.com/v1/edits processing_ms=9986 request_id=b110622a90142ea76ab13293f506e6da response_code=200
[2022-11-17 22:59:49,993] DEBUG - Starting new HTTPS connection (1): www.googleapis.com:443
[2022-11-17 22:59:50,138] DEBUG - https://www.googleapis.com:443 "GET /youtube/v3/playlists?part=id&id=UC_x5XG1OV2P6uZZ5FSM9Ttw&key=AIzaSyDfv2ISoNjVh2oX2JRJUQ1loS-voHH3GlI&maxResults=2 HTTP/1.1" 200 None
[2022-11-17 22:59:50,141] DEBUG - Starting new HTTPS connection (1): www.googleapis.com:443
[2022-11-17 22:59:50,852] DEBUG - https://www.googleapis.com:443 "GET /youtube/v3/search?part=snippet&type=video&maxResults=50&order=relevance&key=AIzaSyDfv2ISoNjVh2oX2JRJUQ1loS-voHH3GlI&q=The%20Dangers%20of%20a%20Bad%20Database%20Design&publishedAfter=2000-01-01T00:00:00Z&publishedBefore=3000-01-01T00:00:00Z HTTP/1.1" 200 None
[2022-11-17 22:59:50,857] DEBUG - Starting new HTTPS connection (1): www.googleapis.com:443
[2022-11-17 22:59:50,915] DEBUG - https://www.googleapis.com:443 "GET /youtube/v3/videos?key=AIzaSyDfv2ISoNjVh2oX2JRJUQ1loS-voHH3GlI&fields=items(snippet(description,tags))&part=snippet&id=s6m8Aby2at8 HTTP/1.1" 200 None
[2022-11-17 22:59:50,917] DEBUG - Starting new HTTPS connection (1): www.googleapis.com:443
[2022-11-17 22:59:50,989] DEBUG - https://www.googleapis.com:443 "GET /youtube/v3/videos?key=AIzaSyDfv2ISoNjVh2oX2JRJUQ1loS-voHH3GlI&fields=items(snippet(description,tags))&part=snippet&id=56whqcSnzUU HTTP/1.1" 200 None
[2022-11-17 22:59:50,993] DEBUG - Starting new HTTPS connection (1): www.googleapis.com:443
[2022-11-17 22:59:51,063] DEBUG - https://www.googleapis.com:443 "GET /youtube/v3/videos?key=AIzaSyDfv2ISoNjVh2oX2JRJUQ1loS-voHH3GlI&fields=items(snippet(description,tags))&part=snippet&id=iQThjDCJau8 HTTP/1.1" 200 None
[2022-11-17 22:59:51,065] DEBUG - Starting new HTTPS connection (1): www.googleapis.com:443
[2022-11-17 22:59:51,127] DEBUG - https://www.googleapis.com:443 "GET /youtube/v3/videos?key=AIzaSyDfv2ISoNjVh2oX2JRJUQ1loS-voHH3GlI&fields=items(snippet(description,tags))&part=snippet&id=NWZLB8CyPbM HTTP/1.1" 200 None
[2022-11-17 22:59:51,129] DEBUG - Starting new HTTPS connection (1): www.googleapis.com:443
[2022-11-17 22:59:51,189] DEBUG - https://www.googleapis.com:443 "GET /youtube/v3/videos?key=AIzaSyDfv2ISoNjVh2oX2JRJUQ1loS-voHH3GlI&fields=items(snippet(description,tags))&part=snippet&id=y1tcbhWLiUM HTTP/1.1" 200 None
[2022-11-17 22:59:51,191] DEBUG - Starting new HTTPS connection (1): www.googleapis.com:443
[2022-11-17 22:59:51,244] DEBUG - https://www.googleapis.com:443 "GET /youtube/v3/videos?key=AIzaSyDfv2ISoNjVh2oX2JRJUQ1loS-voHH3GlI&fields=items(snippet(description,tags))&part=snippet&id=HbKkok8xQ3c HTTP/1.1" 200 None
[2022-11-17 22:59:51,246] DEBUG - Starting new HTTPS connection (1): www.googleapis.com:443
[2022-11-17 22:59:51,329] DEBUG - https://www.googleapis.com:443 "GET /youtube/v3/videos?key=AIzaSyDfv2ISoNjVh2oX2JRJUQ1loS-voHH3GlI&fields=items(snippet(description,tags))&part=snippet&id=Iq6ZbAfp99A HTTP/1.1" 200 None
[2022-11-17 22:59:51,333] DEBUG - Starting new HTTPS connection (1): www.googleapis.com:443
[2022-11-17 22:59:51,403] DEBUG - https://www.googleapis.com:443 "GET /youtube/v3/videos?key=AIzaSyDfv2ISoNjVh2oX2JRJUQ1loS-voHH3GlI&fields=items(snippet(description,tags))&part=snippet&id=iHM9dN8-SxA HTTP/1.1" 200 None
[2022-11-17 22:59:51,405] DEBUG - Starting new HTTPS connection (1): www.googleapis.com:443
[2022-11-17 22:59:51,465] DEBUG - https://www.googleapis.com:443 "GET /youtube/v3/videos?key=AIzaSyDfv2ISoNjVh2oX2JRJUQ1loS-voHH3GlI&fields=items(snippet(description,tags))&part=snippet&id=KqHTzqe3xpA HTTP/1.1" 200 None
[2022-11-17 22:59:51,467] DEBUG - Starting new HTTPS connection (1): www.googleapis.com:443
[2022-11-17 22:59:51,553] DEBUG - https://www.googleapis.com:443 "GET /youtube/v3/videos?key=AIzaSyDfv2ISoNjVh2oX2JRJUQ1loS-voHH3GlI&fields=items(snippet(description,tags))&part=snippet&id=ApSHm63cdrA HTTP/1.1" 200 None
[2022-11-17 22:59:51,557] DEBUG - Starting new HTTPS connection (1): www.googleapis.com:443
[2022-11-17 22:59:51,610] DEBUG - https://www.googleapis.com:443 "GET /youtube/v3/videos?key=AIzaSyDfv2ISoNjVh2oX2JRJUQ1loS-voHH3GlI&fields=items(snippet(description,tags))&part=snippet&id=ztHopE5Wnpc HTTP/1.1" 200 None
[2022-11-17 22:59:51,614] DEBUG - Starting new HTTPS connection (1): www.googleapis.com:443
[2022-11-17 22:59:51,669] DEBUG - https://www.googleapis.com:443 "GET /youtube/v3/videos?key=AIzaSyDfv2ISoNjVh2oX2JRJUQ1loS-voHH3GlI&fields=items(snippet(description,tags))&part=snippet&id=HniKEFOmq4o HTTP/1.1" 200 None
[2022-11-17 22:59:51,673] DEBUG - Starting new HTTPS connection (1): www.googleapis.com:443
[2022-11-17 22:59:51,729] DEBUG - https://www.googleapis.com:443 "GET /youtube/v3/videos?key=AIzaSyDfv2ISoNjVh2oX2JRJUQ1loS-voHH3GlI&fields=items(snippet(description,tags))&part=snippet&id=nSzuHnkcfo8 HTTP/1.1" 200 None
[2022-11-17 22:59:51,732] DEBUG - Starting new HTTPS connection (1): www.googleapis.com:443
[2022-11-17 22:59:51,793] DEBUG - https://www.googleapis.com:443 "GET /youtube/v3/videos?key=AIzaSyDfv2ISoNjVh2oX2JRJUQ1loS-voHH3GlI&fields=items(snippet(description,tags))&part=snippet&id=IwOp4R5PzU0 HTTP/1.1" 200 None
[2022-11-17 22:59:51,796] DEBUG - Starting new HTTPS connection (1): www.googleapis.com:443
[2022-11-17 22:59:51,852] DEBUG - https://www.googleapis.com:443 "GET /youtube/v3/videos?key=AIzaSyDfv2ISoNjVh2oX2JRJUQ1loS-voHH3GlI&fields=items(snippet(description,tags))&part=snippet&id=I_rxqSJAj6U HTTP/1.1" 200 None
[2022-11-17 22:59:51,855] DEBUG - Starting new HTTPS connection (1): www.googleapis.com:443
[2022-11-17 22:59:51,924] DEBUG - https://www.googleapis.com:443 "GET /youtube/v3/videos?key=AIzaSyDfv2ISoNjVh2oX2JRJUQ1loS-voHH3GlI&fields=items(snippet(description,tags))&part=snippet&id=yOYodfN84N4 HTTP/1.1" 200 None
[2022-11-17 22:59:51,928] DEBUG - Starting new HTTPS connection (1): www.googleapis.com:443
[2022-11-17 22:59:51,981] DEBUG - https://www.googleapis.com:443 "GET /youtube/v3/videos?key=AIzaSyDfv2ISoNjVh2oX2JRJUQ1loS-voHH3GlI&fields=items(snippet(description,tags))&part=snippet&id=KhsvRukn0lE HTTP/1.1" 200 None
[2022-11-17 22:59:51,984] DEBUG - Starting new HTTPS connection (1): www.googleapis.com:443
[2022-11-17 22:59:52,030] DEBUG - https://www.googleapis.com:443 "GET /youtube/v3/videos?key=AIzaSyDfv2ISoNjVh2oX2JRJUQ1loS-voHH3GlI&fields=items(snippet(description,tags))&part=snippet&id=yDveECOv93o HTTP/1.1" 200 None
[2022-11-17 22:59:52,034] DEBUG - Starting new HTTPS connection (1): www.googleapis.com:443
[2022-11-17 22:59:52,081] DEBUG - https://www.googleapis.com:443 "GET /youtube/v3/videos?key=AIzaSyDfv2ISoNjVh2oX2JRJUQ1loS-voHH3GlI&fields=items(snippet(description,tags))&part=snippet&id=QqlPXKxN6LQ HTTP/1.1" 200 None
[2022-11-17 22:59:52,083] DEBUG - Starting new HTTPS connection (1): www.googleapis.com:443
[2022-11-17 22:59:52,153] DEBUG - https://www.googleapis.com:443 "GET /youtube/v3/videos?key=AIzaSyDfv2ISoNjVh2oX2JRJUQ1loS-voHH3GlI&fields=items(snippet(description,tags))&part=snippet&id=1VsSXRPEBo0 HTTP/1.1" 200 None
[2022-11-17 22:59:52,157] DEBUG - Starting new HTTPS connection (1): www.googleapis.com:443
[2022-11-17 22:59:52,213] DEBUG - https://www.googleapis.com:443 "GET /youtube/v3/videos?key=AIzaSyDfv2ISoNjVh2oX2JRJUQ1loS-voHH3GlI&fields=items(snippet(description,tags))&part=snippet&id=cepspxPAUTA HTTP/1.1" 200 None
[2022-11-17 22:59:52,216] DEBUG - Starting new HTTPS connection (1): www.googleapis.com:443
[2022-11-17 22:59:52,285] DEBUG - https://www.googleapis.com:443 "GET /youtube/v3/videos?key=AIzaSyDfv2ISoNjVh2oX2JRJUQ1loS-voHH3GlI&fields=items(snippet(description,tags))&part=snippet&id=K5P-2-oWXqs HTTP/1.1" 200 None
[2022-11-17 22:59:52,288] DEBUG - Starting new HTTPS connection (1): www.googleapis.com:443
[2022-11-17 22:59:52,337] DEBUG - https://www.googleapis.com:443 "GET /youtube/v3/videos?key=AIzaSyDfv2ISoNjVh2oX2JRJUQ1loS-voHH3GlI&fields=items(snippet(description,tags))&part=snippet&id=HmnQyP8s5O8 HTTP/1.1" 200 None
[2022-11-17 22:59:52,341] DEBUG - Starting new HTTPS connection (1): www.googleapis.com:443
[2022-11-17 22:59:52,408] DEBUG - https://www.googleapis.com:443 "GET /youtube/v3/videos?key=AIzaSyDfv2ISoNjVh2oX2JRJUQ1loS-voHH3GlI&fields=items(snippet(description,tags))&part=snippet&id=IPPCMZG2CHQ HTTP/1.1" 200 None
[2022-11-17 22:59:52,410] DEBUG - Starting new HTTPS connection (1): www.googleapis.com:443
[2022-11-17 22:59:52,471] DEBUG - https://www.googleapis.com:443 "GET /youtube/v3/videos?key=AIzaSyDfv2ISoNjVh2oX2JRJUQ1loS-voHH3GlI&fields=items(snippet(description,tags))&part=snippet&id=WljDRHTazhA HTTP/1.1" 200 None
[2022-11-17 22:59:52,473] DEBUG - Hashtags ['#knowledgegate', '#gate', '#sanchitjain', '#normalizationinsql', '#sqlnormalforms', '#databasenormalization', '#databasenormalizationtutorial', '#sqlnormalization', '#databasenormalizationstepbystep']
[2022-11-17 22:59:52,473] DEBUG - Top Hashtags ['#knowledgegate', '#gate', '#sanchitjain', '#normalizationinsql', '#sqlnormalforms']
[2022-11-17 22:59:52,473] DEBUG - Tags ['relational database design', 'relational database design tutorial', 'database design', 'database design mistakes', 'how', 'to', 'learn', 'computer', 'basics', 'bad database design', 'redundant', 'insertion anomalies', 'update anomalies', 'deletion anomalies', 'database integrity', 'daniel floyd', 'extra credits', 'game design', 'game development', 'games', 'gaming', 'james portnow', 'video essays', 'video games', 'unpleasant design', 'hostile architecture', 'bad design', 'bad game design', 'bad architecture', 'bad architecture design', 'seattle homeless problem', 'camden bench', 'how to help the homeless', 'homelessness', 'perl', 'yapc', 'yapc::eu', 'yapc::europe', 'yapc europe', 'perl conference', 'azure sql database', 'database engine', 'deploying', 'on-prem', 'optimising', 'sql 2019', 'pass', 'sqlpass', 'sql', 'sql server', 'database', 'db', 'tsql', 'database design', 'sql', 'gail shaw', 'microsoft', 'database design', 'bad design', 'good design', 'sql server', 'database modelling', 'database design tutorial', 'database design', 'relational database design', 'database design overview', 'database normalization', 'database design course', 'database design tutorial', 'database design for beginners', 'er models', 'relational database', 'relational database design tutorial', 'database', 'caleb curry', 'freecodecamp', 'sql server design overview', 'join', 'inner join', 'database index', 'database key', 'sql', 'sql tutorial', 'database design', 'design 6', 'what is database design?', 'database (software genre)', 'interior design (industry)', 'normalization', 'relationships', 'one to one', 'one to many', 'many to many', '1nf', '2nf', '3nf', '4nf', 'bcnf', 'database design tutorial', 'sql server design tutorial', 'database design', 'relational database design', 'misi610', 'ferris state university', 'database design overview', 'sql server design overview', 'microsoft sql server design', 'microsoft sql server design tutoria', 'database normalization', 'three normal forms', 'third normal form', 'david bechberger', 'big data', 'architecture', 'database', 'graph database', 'rdbms', 'ndc', 'oslo', '2019', 'john mauriello', 'normalization', 'first normal form', 'second normal form', 'third normal form', 'functional dependency', 'transient dependency', 'entity relationship diagram', 'e-r diagram', 'erd', 'database design', 'how to', 'databases', 'relational databases for beginners', 'rdbms', 'relational database design', 'relational database management system', 'relational database tutorial', 'relational database vs non relational database', 'relational database model', 'relational database design tutorial', 'sql tutorial', 'learn sql', 'introduction to databases', 'database fundamentals', 'sql server', 'insertion anomaly in database with example', 'insertion anomalies in dbms', 'insertion anomaly example', 'insertion anomaly sql', 'deletion anomaly database', 'deletion anomaly in dbms', 'updation anomalies in dbms', 'modification anomalies', 'modification anomalies in dbms', 'modification anomalies in dbms with examples', 'basics of normalization', 'reason of normalization', 'data redundancy in dbms in hindi', 'data redundancy in dbms with example', 'data inconsistency in dbms in hindi', 'database normalization tutorial', 'beginners', 'normalization in sql', 'database', 'sql database', 'explain normalization', 'learn sql database', 'sql tutorial', 'sql step by step', 'normalization concept', 'first normal form in dbms', 'first normal', 'second normal form', 'third normal form', 'normal forms', 'calebthevideomaker2', 'caleb', 'curry', 'oracle', 'sql', 'tutorial 7', 'database', 'normalization', 'normal', 'forms', 'normallize', 'tables', 'multiple', 'data', '1nf', '2nf', '3nf', 'first', 'second', 'third', 'form', 'database design primer 4', 'time series', 'sql', 'database']
[2022-11-17 22:59:52,475] DEBUG - Top Tags ['database design', 'database', 'sql', 'relational database design', 'relational database design tutorial', 'sql server', 'database design tutorial', 'sql tutorial', 'normalization', 'third normal form', 'bad design', 'database design overview']
[2022-11-17 23:00:04,376] DEBUG - processing 21 tts sections
[2022-11-17 23:00:04,377] DEBUG - Text-to-speech: The Dangers of a Bad Database Design
[2022-11-17 23:00:04,377] DEBUG - [#1] Subsection: The Dangers of a Bad Database Design
[2022-11-17 23:00:28,882] DEBUG - Text-to-speech: The main dangers of a bad database design are data inconsistency and data integrity problems. Data inconsistency means that the data in the database is inaccurate or incorrect. Data integrity means that the data in the database is complete and accurate. Both of these problems can lead to serious problems for the users of the database.
[2022-11-17 23:00:28,882] DEBUG - [#1] Subsection: The main dangers of a bad database design are data inconsistency and data integrity problems. Data inconsistency means that the data in the database is inaccurate or incorrect. Data integrity means that the data in the database is complete and accurate. Both of these problems can lead to serious problems for the users of the database.
[2022-11-17 23:01:06,955] DEBUG - [#2] Subsection: The main dangers of a bad database design are data inconsistency and data integrity problems. Data inconsistency means that the data in the database is inaccurate or incorrect. Data integrity means that the data in the database is complete and accurate. Both of these problems can lead to serious problems for the users of the database.
[2022-11-17 23:02:04,094] DEBUG - [#3] Subsection: The main dangers of a bad database design are data inconsistency and data integrity problems. Data inconsistency means that the data in the database is inaccurate or incorrect. Data integrity means that the data in the database is complete and accurate. Both of these problems can lead to serious problems for the users of the database.
[2022-11-17 23:02:55,144] DEBUG - [#4] Subsection: The main dangers of a bad database design are data inconsistency and data integrity problems. Data inconsistency means that the data in the database is inaccurate or incorrect. Data integrity means that the data in the database is complete and accurate. Both of these problems can lead to serious problems for the users of the database.
[2022-11-17 23:03:41,885] DEBUG - Text-to-speech: How to Design a Good Database
[2022-11-17 23:03:41,885] DEBUG - [#1] Subsection: How to Design a Good Database
[2022-11-17 23:04:13,676] DEBUG - Text-to-speech: In order to design a good database, you need to understand the requirements of the application that will be using the database. You also need to understand the relationships between the data elements in the database. Once you understand these things, you can design a database that is reliable and efficient.
[2022-11-17 23:04:13,676] DEBUG - [#1] Subsection: In order to design a good database, you need to understand the requirements of the application that will be using the database. You also need to understand the relationships between the data elements in the database. Once you understand these things, you can design a database that is reliable and efficient.
[2022-11-17 23:05:11,062] DEBUG - [#2] Subsection: In order to design a good database, you need to understand the requirements of the application that will be using the database. You also need to understand the relationships between the data elements in the database. Once you understand these things, you can design a database that is reliable and efficient.
[2022-11-17 23:05:57,590] DEBUG - [#3] Subsection: In order to design a good database, you need to understand the requirements of the application that will be using the database. You also need to understand the relationships between the data elements in the database. Once you understand these things, you can design a database that is reliable and efficient.
[2022-11-17 23:06:43,353] DEBUG - Text-to-speech: The Benefits of a Good Database Design
[2022-11-17 23:06:43,353] DEBUG - [#1] Subsection: The Benefits of a Good Database Design
[2022-11-17 23:07:11,422] DEBUG - Text-to-speech: A welldesigned database can be a valuable asset to an organization. It can help to improve the efficiency of the organization and help to reduce the cost of data storage and retrieval. A good database can also help to improve the accuracy of data and make it easier to use the data in decision making.
[2022-11-17 23:07:11,422] DEBUG - [#1] Subsection: A welldesigned database can be a valuable asset to an organization. It can help to improve the efficiency of the organization and help to reduce the cost of data storage and retrieval. A good database can also help to improve the accuracy of data and make it easier to use the data in decision making.
[2022-11-17 23:07:46,252] DEBUG - [#2] Subsection: A welldesigned database can be a valuable asset to an organization. It can help to improve the efficiency of the organization and help to reduce the cost of data storage and retrieval. A good database can also help to improve the accuracy of data and make it easier to use the data in decision making.
[2022-11-17 23:08:43,761] DEBUG - [#3] Subsection: A welldesigned database can be a valuable asset to an organization. It can help to improve the efficiency of the organization and help to reduce the cost of data storage and retrieval. A good database can also help to improve the accuracy of data and make it easier to use the data in decision making.
[2022-11-17 23:09:36,014] DEBUG - Text-to-speech: The Importance of Database Design
[2022-11-17 23:09:36,014] DEBUG - [#1] Subsection: The Importance of Database Design
[2022-11-17 23:10:02,102] DEBUG - Text-to-speech: Database design is important because it helps to ensure that the database is effective and efficient. A good database design can help to improve the performance of the database and make it easier to use.
[2022-11-17 23:10:02,102] DEBUG - [#1] Subsection: Database design is important because it helps to ensure that the database is effective and efficient. A good database design can help to improve the performance of the database and make it easier to use.
[2022-11-17 23:10:58,420] DEBUG - [#2] Subsection: Database design is important because it helps to ensure that the database is effective and efficient. A good database design can help to improve the performance of the database and make it easier to use.
[2022-11-17 23:11:53,571] DEBUG - Text-to-speech: The Fundamentals of Database Design
[2022-11-17 23:11:53,571] DEBUG - [#1] Subsection: The Fundamentals of Database Design
[2022-11-17 23:12:35,575] DEBUG - Text-to-speech: There are four basic principles of database design:

This is the process of identifying the relationships between the data elements in the database.
Data Normalization

This is the process of ensuring that the data in the database is stored in a consistent format.
Data Integrity

This is the process of ensuring that the data in the database is accurate and complete.
Database Security

This is the process of ensuring that the database is secure from unauthorized access.
[2022-11-17 23:12:35,576] DEBUG - [#1] Subsection: There are four basic principles of database design:

This is the process of identifying the relationships between the data elements in the database.
Data Normalization

This is the process of ensuring that the data in the database is stored in a consistent format.
Data Integrity

This is the process of ensuring that the data in the database is accurate and complete.
Database Security

This is the process of ensuring that the database is secure from unauthorized access.
[2022-11-17 23:13:54,983] DEBUG - [#2] Subsection: There are four basic principles of database design:

This is the process of identifying the relationships between the data elements in the database.
Data Normalization

This is the process of ensuring that the data in the database is stored in a consistent format.
Data Integrity

This is the process of ensuring that the data in the database is accurate and complete.
Database Security

This is the process of ensuring that the database is secure from unauthorized access.
[2022-11-17 23:14:30,218] DEBUG - [#3] Subsection: There are four basic principles of database design:

This is the process of identifying the relationships between the data elements in the database.
Data Normalization

This is the process of ensuring that the data in the database is stored in a consistent format.
Data Integrity

This is the process of ensuring that the data in the database is accurate and complete.
Database Security

This is the process of ensuring that the database is secure from unauthorized access.
[2022-11-17 23:14:58,534] DEBUG - [#4] Subsection: There are four basic principles of database design:

This is the process of identifying the relationships between the data elements in the database.
Data Normalization

This is the process of ensuring that the data in the database is stored in a consistent format.
Data Integrity

This is the process of ensuring that the data in the database is accurate and complete.
Database Security

This is the process of ensuring that the database is secure from unauthorized access.
[2022-11-17 23:15:27,384] CRITICAL - Failed to generate audio
[2022-11-17 23:15:27,384] INFO - Getting video script.
[2022-11-17 23:15:27,384] INFO - message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
[2022-11-17 23:15:27,384] DEBUG - api_version=None data='{"model": "text-davinci-002", "prompt": "Write a list of unique and interesting keywords relating to basic computer science:\\n\\n-", "temperature": 1, "max_tokens": 128, "top_p": 1, "frequency_penalty": 0, "presence_penalty": 0, "n": 1, "stop": "", "echo": false}' message='Post details'
[2022-11-17 23:15:27,385] DEBUG - Resetting dropped connection: api.openai.com
[2022-11-17 23:15:33,135] DEBUG - https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 661
[2022-11-17 23:15:33,135] INFO - message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=5278 request_id=18a01b0132676d22f33a9e370e7e2fbd response_code=200
[2022-11-17 23:15:33,136] INFO - message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
[2022-11-17 23:15:33,136] DEBUG - api_version=None data='{"model": "text-curie-001", "prompt": "Write a list of 5 interesting beginner topics on where Ascii is used in the context of computer science:\\n-", "temperature": 0.7, "max_tokens": 256, "top_p": 1, "frequency_penalty": 0, "presence_penalty": 0, "n": 1, "stop": "", "echo": false}' message='Post details'
[2022-11-17 23:15:33,666] DEBUG - https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 343
[2022-11-17 23:15:33,666] INFO - message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=339 request_id=70da3e47c23479a308e1581ebf0d9d3b response_code=200
[2022-11-17 23:15:33,667] INFO - message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
[2022-11-17 23:15:33,667] DEBUG - api_version=None data='{"model": "text-davinci-002", "prompt": "Write a short, unique and interesting title relating to the theory of Ascii symbols in the form of a video essay title without involving numbers:", "temperature": 1, "max_tokens": 20, "top_p": 1, "frequency_penalty": 0, "presence_penalty": 0, "n": 1, "stop": "", "echo": false}' message='Post details'
[2022-11-17 23:15:34,451] DEBUG - https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 282
[2022-11-17 23:15:34,452] INFO - message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=632 request_id=7df37dbc732e8ebc68eec5fdd50f0c77 response_code=200
[2022-11-17 23:15:34,487] DEBUG - Keyword Ascii, Topics ['Ascii art', 'Ascii numerals', 'Ascii symbols', 'Ascii fonts', 'Ascii', 'based cryptography'], Topic The ASCII of Life
[2022-11-17 23:15:34,488] INFO - message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
[2022-11-17 23:15:34,488] DEBUG - api_version=None data='{"model": "text-davinci-002", "prompt": "Write a list of beginner topics relating to what is The ASCII of Life in the context of computer science:\\n\\n", "temperature": 0, "max_tokens": 256, "top_p": 1, "frequency_penalty": 0, "presence_penalty": 0, "n": 1, "stop": "", "echo": false}' message='Post details'
[2022-11-17 23:15:37,824] DEBUG - https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 479
[2022-11-17 23:15:37,824] INFO - message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=3182 request_id=7bd6b778bccaa196225731004489f820 response_code=200
[2022-11-17 23:15:37,825] DEBUG - topic: The ASCII of Life, sub topics 

1. What is ASCII?

2. What are the benefits of using ASCII?

3. How can ASCII be used in computer science?

4. What are some applications of ASCII?

5. What are some challenges associated with using ASCII?
[2022-11-17 23:15:37,825] DEBUG - getting summary for topic
[2022-11-17 23:15:37,825] INFO - message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
[2022-11-17 23:15:37,825] DEBUG - api_version=None data='{"model": "text-curie-001", "prompt": "Write a summary for the following topic in the form of a youtube description in the context of computer science:\\n\\ntopic: The ASCII of Life\\n\\nsummary:", "temperature": 0, "max_tokens": 256, "top_p": 1, "frequency_penalty": 0, "presence_penalty": 0, "n": 1, "stop": "", "echo": false}' message='Post details'
[2022-11-17 23:15:38,444] DEBUG - https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 442
[2022-11-17 23:15:38,445] INFO - message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=463 request_id=82b404d7dd5790f140662a0cf3c60d7b response_code=200
[2022-11-17 23:15:38,445] INFO - message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
[2022-11-17 23:15:38,445] DEBUG - api_version=None data='{"model": "text-davinci-002", "prompt": "Expand greatly upon the topic of The ASCII of Life in the context of computer science summarised for a 9th grader:\\n\\n1. 1. What is ASCII?\\n\\n2. What are the benefits of using ASCII?\\n\\n3. How can ASCII be used in computer science?\\n\\n4. What are some applications of ASCII?\\n\\n5. What are some challenges associated with using ASCII?\\n\\n", "temperature": 1, "max_tokens": 128, "top_p": 1, "frequency_penalty": 0, "presence_penalty": 0, "n": 1, "stop": ["2.", "1."], "echo": false}' message='Post details'
[2022-11-17 23:15:39,545] DEBUG - https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 265
[2022-11-17 23:15:39,545] INFO - message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=555 request_id=222445460907c9876bdb6e0d2958d73e response_code=200
[2022-11-17 23:15:39,545] CRITICAL - Failed to generate video script
[2022-11-17 23:15:39,545] INFO - Getting video script.
[2022-11-17 23:15:39,546] INFO - message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
[2022-11-17 23:15:39,546] DEBUG - api_version=None data='{"model": "text-davinci-002", "prompt": "Write a list of unique and interesting keywords relating to basic computer science:\\n\\n-", "temperature": 1, "max_tokens": 128, "top_p": 1, "frequency_penalty": 0, "presence_penalty": 0, "n": 1, "stop": "", "echo": false}' message='Post details'
[2022-11-17 23:15:41,195] DEBUG - https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 368
[2022-11-17 23:15:41,195] INFO - message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1501 request_id=03c320b3b8504c8c68fa4f801697ce55 response_code=200
[2022-11-17 23:15:41,195] INFO - message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
[2022-11-17 23:15:41,195] DEBUG - api_version=None data='{"model": "text-curie-001", "prompt": "Write a list of 5 interesting beginner topics on where algorithm is used in the context of computer science:\\n-", "temperature": 0.7, "max_tokens": 256, "top_p": 1, "frequency_penalty": 0, "presence_penalty": 0, "n": 1, "stop": "", "echo": false}' message='Post details'
[2022-11-17 23:15:41,774] DEBUG - https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 423
[2022-11-17 23:15:41,774] INFO - message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=420 request_id=fad9ae4aced6114f3513108388a72c73 response_code=200
[2022-11-17 23:15:41,774] INFO - message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
[2022-11-17 23:15:41,775] DEBUG - api_version=None data='{"model": "text-davinci-002", "prompt": "Write a short, unique and interesting title relating to the theory of  Algorithms in cryptography in the form of a video essay title without involving numbers:", "temperature": 1, "max_tokens": 20, "top_p": 1, "frequency_penalty": 0, "presence_penalty": 0, "n": 1, "stop": "", "echo": false}' message='Post details'
[2022-11-17 23:15:42,740] DEBUG - https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 303
[2022-11-17 23:15:42,741] INFO - message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=814 request_id=9ec1b5ead308d934d210e465115f9348 response_code=200
[2022-11-17 23:15:42,745] DEBUG - Keyword algorithm, Topics [' Algorithms in data compression', ' Algorithms in artificial intelligence', ' Algorithms in search engines', ' Algorithms in game theory', ' Algorithms in cryptography'], Topic The Art of Algorithms in Cryptography
[2022-11-17 23:15:42,745] INFO - message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
[2022-11-17 23:15:42,745] DEBUG - api_version=None data='{"model": "text-davinci-002", "prompt": "Write a list of beginner topics relating to what is The Art of Algorithms in Cryptography in the context of computer science:\\n\\n", "temperature": 0, "max_tokens": 256, "top_p": 1, "frequency_penalty": 0, "presence_penalty": 0, "n": 1, "stop": "", "echo": false}' message='Post details'
[2022-11-17 23:15:46,032] DEBUG - https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 659
[2022-11-17 23:15:46,032] INFO - message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=3137 request_id=61c03e56aaf0b9e385ae09033e756554 response_code=200
[2022-11-17 23:15:46,032] DEBUG - topic: The Art of Algorithms in Cryptography, sub topics 
-What is an algorithm?
-What is cryptography?
-What are the basic principles of algorithms?
-What are the basic principles of cryptography?
-What is the difference between an algorithm and a cryptographic algorithm?
-What are the properties of cryptographic algorithms?
-What are the benefits of using cryptographic algorithms?
-What are the challenges of using cryptographic algorithms?
[2022-11-17 23:15:46,032] DEBUG - getting summary for topic
[2022-11-17 23:15:46,032] INFO - message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
[2022-11-17 23:15:46,032] DEBUG - api_version=None data='{"model": "text-curie-001", "prompt": "Write a summary for the following topic in the form of a youtube description in the context of computer science:\\n\\ntopic: The Art of Algorithms in Cryptography\\n\\nsummary:", "temperature": 0, "max_tokens": 256, "top_p": 1, "frequency_penalty": 0, "presence_penalty": 0, "n": 1, "stop": "", "echo": false}' message='Post details'
[2022-11-17 23:15:46,792] DEBUG - https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 520
[2022-11-17 23:15:46,792] INFO - message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=572 request_id=a40aadc11a42278857af3985f059b07b response_code=200
[2022-11-17 23:15:46,792] INFO - message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
[2022-11-17 23:15:46,792] DEBUG - api_version=None data='{"model": "text-davinci-002", "prompt": "Expand greatly upon the topic of The Art of Algorithms in Cryptography in the context of computer science summarised for a 9th grader:\\n\\n1. What is an algorithm?\\n\\n", "temperature": 1, "max_tokens": 128, "top_p": 1, "frequency_penalty": 0, "presence_penalty": 0, "n": 1, "stop": ["2.", "1."], "echo": false}' message='Post details'
[2022-11-17 23:15:49,289] DEBUG - https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 513
[2022-11-17 23:15:49,289] INFO - message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=2344 request_id=b56e5fe5d7b5ead6bf6cb8a6a7880ca0 response_code=200
[2022-11-17 23:15:49,289] INFO - message='Request to OpenAI API' method=post path=https://api.openai.com/v1/edits
[2022-11-17 23:15:49,289] DEBUG - api_version=None data='{"model": "text-davinci-edit-001", "input": "In computer science, an algorithm is a set of instructions that are followed in order to solve a problem. Algorithms can be simple, like a recipe for baking a cake, or they can be much more complex, like a set of instructions for flying a plane.", "instruction": "Replace all non-characters with their spoken counterpart. And fix grammar.", "temperature": 0, "top_p": 1}' message='Post details'
[2022-11-17 23:15:53,430] DEBUG - https://api.openai.com:443 "POST /v1/edits HTTP/1.1" 200 496
[2022-11-17 23:15:53,430] INFO - message='OpenAI API response' path=https://api.openai.com/v1/edits processing_ms=3993 request_id=6ade089f20048a5370d4b00085f66f2d response_code=200
[2022-11-17 23:15:53,431] INFO - message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
[2022-11-17 23:15:53,431] DEBUG - api_version=None data='{"model": "text-davinci-002", "prompt": "Expand greatly upon the topic of The Art of Algorithms in Cryptography in the context of computer science summarised for a 9th grader:\\n\\n1. What is an algorithm?\\n\\nIn computer science, an algorithm is a set of instructions that are followed in order to solve a problem. Algorithms can be simple, like a recipe for baking a cake, or they can be much more complex, like a set of instructions for flying a plane. Algorithms are used in many different fields, including mathematics, computer science, and engineering.\\n\\n2. What is cryptography?\\n\\n", "temperature": 1, "max_tokens": 128, "top_p": 1, "frequency_penalty": 0, "presence_penalty": 0, "n": 1, "stop": ["3.", "2."], "echo": false}' message='Post details'
[2022-11-17 23:15:56,153] DEBUG - https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 579
[2022-11-17 23:15:56,153] INFO - message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=2574 request_id=126bb17691e2f68a30d803f780bcc5a5 response_code=200
[2022-11-17 23:15:56,154] INFO - message='Request to OpenAI API' method=post path=https://api.openai.com/v1/edits
[2022-11-17 23:15:56,154] DEBUG - api_version=None data='{"model": "text-davinci-edit-001", "input": "Cryptography is the study of methods for secure communication in the presence of third parties. In other words, it is a way of keeping information secret from people who are not supposed to see it. Cryptography is used in many different fields, including computer security, military communications, and banking.", "instruction": "Replace all non-characters with their spoken counterpart. And fix grammar.", "temperature": 0, "top_p": 1}' message='Post details'
[2022-11-17 23:16:47,685] DEBUG - https://api.openai.com:443 "POST /v1/edits HTTP/1.1" 200 10079
[2022-11-17 23:16:47,685] INFO - message='OpenAI API response' path=https://api.openai.com/v1/edits processing_ms=51384 request_id=8b64fbfb8ba64ab79a54b70131b563be response_code=200
[2022-11-17 23:16:47,687] INFO - message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
[2022-11-17 23:16:47,687] DEBUG - api_version=None data='{"model": "text-davinci-002", "prompt": "Expand greatly upon the topic of The Art of Algorithms in Cryptography in the context of computer science summarised for a 9th grader:\\n\\n1. What is an algorithm?\\n\\nIn computer science, an algorithm is a set of instructions that are followed in order to solve a problem. Algorithms can be simple, like a recipe for baking a cake, or they can be much more complex, like a set of instructions for flying a plane. Algorithms are used in many different fields, including mathematics, computer science, and engineering.\\n\\n2. What is cryptography?\\n\\nCryptography is the study of methods for secure communication in the presence of third parties. In other words, it is a way of keeping information secret from people who are not supposed to see it. Cryptography is used in many different fields, including computer security, military communications, and banking. \\n\\nCryptography is the study of methods for secure communication in the presence of third parties. In other words, it is a way of keeping information secret from people who are not supposed to see it. Cryptography is used in many different fields, including computer security, military communications, and banking. \\n\\nCryptography is the study of methods for secure communication in the presence of third parties. In other words, it is a way of keeping information secret from people who are not supposed to see it. Cryptography is used in many different fields, including computer security, military communications, and banking. \\n\\nCryptography is the study of methods for secure communication in the presence of third parties. In other words, it is a way of keeping information secret from people who are not supposed to see it. Cryptography is used in many different fields, including computer security, military communications, and banking. \\n\\nCryptography is the study of methods for secure communication in the presence of third parties. In other words, it is a way of keeping information secret from people who are not supposed to see it. Cryptography is used in many different fields, including computer security, military communications, and banking. \\n\\nCryptography is the study of methods for secure communication in the presence of third parties. In other words, it is a way of keeping information secret from people who are not supposed to see it. Cryptography is used in many different fields, including computer security, military communications, and banking. \\n\\nCryptography is the study of methods for secure communication in the presence of third parties. In other words, it is a way of keeping information secret from people who are not supposed to see it. Cryptography is used in many different fields, including computer security, military communications, and banking. \\n\\nCryptography is the study of methods for secure communication in the presence of third parties. In other words, it is a way of keeping information secret from people who are not supposed to see it. Cryptography is used in many different fields, including computer security, military communications, and banking. \\n\\nCryptography is the study of methods for secure communication in the presence of third parties. In other words, it is a way of keeping information secret from people who are not supposed to see it. Cryptography is used in many different fields, including computer security, military communications, and banking. \\n\\nCryptography is the study of methods for secure communication in the presence of third parties. In other words, it is a way of keeping information secret from people who are not supposed to see it. Cryptography is used in many different fields, including computer security, military communications, and banking. \\n\\nCryptography is the study of methods for secure communication in the presence of third parties. In other words, it is a way of keeping information secret from people who are not supposed to see it. Cryptography is used in many different fields, including computer security, military communications, and banking. \\n\\nCryptography is the study of methods for secure communication in the presence of third parties. In other words, it is a way of keeping information secret from people who are not supposed to see it. Cryptography is used in many different fields, including computer security, military communications, and banking. \\n\\nCryptography is the study of methods for secure communication in the presence of third parties. In other words, it is a way of keeping information secret from people who are not supposed to see it. Cryptography is used in many different fields, including computer security, military communications, and banking. \\n\\nCryptography is the study of methods for secure communication in the presence of third parties. In other words, it is a way of keeping information secret from people who are not supposed to see it. Cryptography is used in many different fields, including computer security, military communications, and banking. \\n\\nCryptography is the study of methods for secure communication in the presence of third parties. In other words, it is a way of keeping information secret from people who are not supposed to see it. Cryptography is used in many different fields, including computer security, military communications, and banking. \\n\\nCryptography is the study of methods for secure communication in the presence of third parties. In other words, it is a way of keeping information secret from people who are not supposed to see it. Cryptography is used in many different fields, including computer security, military communications, and banking. \\n\\nCryptography is the study of methods for secure communication in the presence of third parties. In other words, it is a way of keeping information secret from people who are not supposed to see it. Cryptography is used in many different fields, including computer security, military communications, and banking. \\n\\nCryptography is the study of methods for secure communication in the presence of third parties. In other words, it is a way of keeping information secret from people who are not supposed to see it. Cryptography is used in many different fields, including computer security, military communications, and banking. \\n\\nCryptography is the study of methods for secure communication in the presence of third parties. In other words, it is a way of keeping information secret from people who are not supposed to see it. Cryptography is used in many different fields, including computer security, military communications, and banking. \\n\\nCryptography is the study of methods for secure communication in the presence of third parties. In other words, it is a way of keeping information secret from people who are not supposed to see it. Cryptography is used in many different fields, including computer security, military communications, and banking. \\n\\nCryptography is the study of methods for secure communication in the presence of third parties. In other words, it is a way of keeping information secret from people who are not supposed to see it. Cryptography is used in many different fields, including computer security, military communications, and banking. \\n\\nCryptography is the study of methods for secure communication in the presence of third parties. In other words, it is a way of keeping information secret from people who are not supposed to see it. Cryptography is used in many different fields, including computer security, military communications, and banking. \\n\\nCryptography is the study of methods for secure communication in the presence of third parties. In other words, it is a way of keeping information secret from people who are not supposed to see it. Cryptography is used in many different fields, including computer security, military communications, and banking. \\n\\nCryptography is the study of methods for secure communication in the presence of third parties. In other words, it is a way of keeping information secret from people who are not supposed to see it. Cryptography is used in many different fields, including computer security, military communications, and banking. \\n\\nCryptography is the study of methods for secure communication in the presence of third parties. In other words, it is a way of keeping information secret from people who are not supposed to see it. Cryptography is used in many different fields, including computer security, military communications, and banking. \\n\\nCryptography is the study of methods for secure communication in the presence of third parties. In other words, it is a way of keeping information secret from people who are not supposed to see it. Cryptography is used in many different fields, including computer security, military communications, and banking. \\n\\nCryptography is the study of methods for secure communication in the presence of third parties. In other words, it is a way of keeping information secret from people who are not supposed to see it. Cryptography is used in many different fields, including computer security, military communications, and banking. \\n\\nCryptography is the study of methods for secure communication in the presence of third parties. In other words, it is a way of keeping information secret from people who are not supposed to see it. Cryptography is used in many different fields, including computer security, military communications, and banking. \\n\\nCryptography is the study of methods for secure communication in the presence of third parties. In other words, it is a way of keeping information secret from people who are not supposed to see it. Cryptography is used in many different fields, including computer security, military communications, and banking. \\n\\nCryptography is the study of methods for secure communication in the presence of third parties. In other words, it is a way of keeping information secret from people who are not supposed to see it. Cryptography is used in many different fields, including computer security, military communications, and banking. \\n\\nCryptography is the study of methods for secure communication in the presence of third parties. In other words, it is a way of keeping information secret from people who are not supposed to see it. Cryptography is used in many different fields, including computer security, military communications, and banking. \\n\\nCryptography is the study of methods for secure communication in the presence of third parties. In other words, it is a way of keeping\\n\\n3. What are the basic principles of algorithms?\\n\\n", "temperature": 1, "max_tokens": 128, "top_p": 1, "frequency_penalty": 0, "presence_penalty": 0, "n": 1, "stop": ["4.", "3."], "echo": false}' message='Post details'
[2022-11-17 23:16:51,510] DEBUG - https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 629
[2022-11-17 23:16:51,510] INFO - message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=3669 request_id=90ae1a466b1d56278a5473828fe3acd4 response_code=200
[2022-11-17 23:16:51,510] INFO - message='Request to OpenAI API' method=post path=https://api.openai.com/v1/edits
[2022-11-17 23:16:51,510] DEBUG - api_version=None data='{"model": "text-davinci-edit-001", "input": "In computer science, there are three main principles of algorithms: correctness, efficiency, and generality. An algorithm is said to be correct if it produces the correct output for all inputs. An algorithm is said to be efficient if it runs in a reasonable amount of time. An algorithm is said to be general if it can be used for a variety of different inputs.", "instruction": "Replace all non-characters with their spoken counterpart. And fix grammar.", "temperature": 0, "top_p": 1}' message='Post details'
[2022-11-17 23:16:54,993] DEBUG - https://api.openai.com:443 "POST /v1/edits HTTP/1.1" 200 510
[2022-11-17 23:16:54,993] INFO - message='OpenAI API response' path=https://api.openai.com/v1/edits processing_ms=3337 request_id=0eacd639698f04e139b8b8ccda4b1fab response_code=200
[2022-11-17 23:16:54,994] INFO - message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
[2022-11-17 23:16:54,995] DEBUG - api_version=None data='{"model": "text-davinci-002", "prompt": "Expand greatly upon the topic of The Art of Algorithms in Cryptography in the context of computer science summarised for a 9th grader:\\n\\n1. What is an algorithm?\\n\\nIn computer science, an algorithm is a set of instructions that are followed in order to solve a problem. Algorithms can be simple, like a recipe for baking a cake, or they can be much more complex, like a set of instructions for flying a plane. Algorithms are used in many different fields, including mathematics, computer science, and engineering.\\n\\n2. What is cryptography?\\n\\nCryptography is the study of methods for secure communication in the presence of third parties. In other words, it is a way of keeping information secret from people who are not supposed to see it. Cryptography is used in many different fields, including computer security, military communications, and banking. \\n\\nCryptography is the study of methods for secure communication in the presence of third parties. In other words, it is a way of keeping information secret from people who are not supposed to see it. Cryptography is used in many different fields, including computer security, military communications, and banking. \\n\\nCryptography is the study of methods for secure communication in the presence of third parties. In other words, it is a way of keeping information secret from people who are not supposed to see it. Cryptography is used in many different fields, including computer security, military communications, and banking. \\n\\nCryptography is the study of methods for secure communication in the presence of third parties. In other words, it is a way of keeping information secret from people who are not supposed to see it. Cryptography is used in many different fields, including computer security, military communications, and banking. \\n\\nCryptography is the study of methods for secure communication in the presence of third parties. In other words, it is a way of keeping information secret from people who are not supposed to see it. Cryptography is used in many different fields, including computer security, military communications, and banking. \\n\\nCryptography is the study of methods for secure communication in the presence of third parties. In other words, it is a way of keeping information secret from people who are not supposed to see it. Cryptography is used in many different fields, including computer security, military communications, and banking. \\n\\nCryptography is the study of methods for secure communication in the presence of third parties. In other words, it is a way of keeping information secret from people who are not supposed to see it. Cryptography is used in many different fields, including computer security, military communications, and banking. \\n\\nCryptography is the study of methods for secure communication in the presence of third parties. In other words, it is a way of keeping information secret from people who are not supposed to see it. Cryptography is used in many different fields, including computer security, military communications, and banking. \\n\\nCryptography is the study of methods for secure communication in the presence of third parties. In other words, it is a way of keeping information secret from people who are not supposed to see it. Cryptography is used in many different fields, including computer security, military communications, and banking. \\n\\nCryptography is the study of methods for secure communication in the presence of third parties. In other words, it is a way of keeping information secret from people who are not supposed to see it. Cryptography is used in many different fields, including computer security, military communications, and banking. \\n\\nCryptography is the study of methods for secure communication in the presence of third parties. In other words, it is a way of keeping information secret from people who are not supposed to see it. Cryptography is used in many different fields, including computer security, military communications, and banking. \\n\\nCryptography is the study of methods for secure communication in the presence of third parties. In other words, it is a way of keeping information secret from people who are not supposed to see it. Cryptography is used in many different fields, including computer security, military communications, and banking. \\n\\nCryptography is the study of methods for secure communication in the presence of third parties. In other words, it is a way of keeping information secret from people who are not supposed to see it. Cryptography is used in many different fields, including computer security, military communications, and banking. \\n\\nCryptography is the study of methods for secure communication in the presence of third parties. In other words, it is a way of keeping information secret from people who are not supposed to see it. Cryptography is used in many different fields, including computer security, military communications, and banking. \\n\\nCryptography is the study of methods for secure communication in the presence of third parties. In other words, it is a way of keeping information secret from people who are not supposed to see it. Cryptography is used in many different fields, including computer security, military communications, and banking. \\n\\nCryptography is the study of methods for secure communication in the presence of third parties. In other words, it is a way of keeping information secret from people who are not supposed to see it. Cryptography is used in many different fields, including computer security, military communications, and banking. \\n\\nCryptography is the study of methods for secure communication in the presence of third parties. In other words, it is a way of keeping information secret from people who are not supposed to see it. Cryptography is used in many different fields, including computer security, military communications, and banking. \\n\\nCryptography is the study of methods for secure communication in the presence of third parties. In other words, it is a way of keeping information secret from people who are not supposed to see it. Cryptography is used in many different fields, including computer security, military communications, and banking. \\n\\nCryptography is the study of methods for secure communication in the presence of third parties. In other words, it is a way of keeping information secret from people who are not supposed to see it. Cryptography is used in many different fields, including computer security, military communications, and banking. \\n\\nCryptography is the study of methods for secure communication in the presence of third parties. In other words, it is a way of keeping information secret from people who are not supposed to see it. Cryptography is used in many different fields, including computer security, military communications, and banking. \\n\\nCryptography is the study of methods for secure communication in the presence of third parties. In other words, it is a way of keeping information secret from people who are not supposed to see it. Cryptography is used in many different fields, including computer security, military communications, and banking. \\n\\nCryptography is the study of methods for secure communication in the presence of third parties. In other words, it is a way of keeping information secret from people who are not supposed to see it. Cryptography is used in many different fields, including computer security, military communications, and banking. \\n\\nCryptography is the study of methods for secure communication in the presence of third parties. In other words, it is a way of keeping information secret from people who are not supposed to see it. Cryptography is used in many different fields, including computer security, military communications, and banking. \\n\\nCryptography is the study of methods for secure communication in the presence of third parties. In other words, it is a way of keeping information secret from people who are not supposed to see it. Cryptography is used in many different fields, including computer security, military communications, and banking. \\n\\nCryptography is the study of methods for secure communication in the presence of third parties. In other words, it is a way of keeping information secret from people who are not supposed to see it. Cryptography is used in many different fields, including computer security, military communications, and banking. \\n\\nCryptography is the study of methods for secure communication in the presence of third parties. In other words, it is a way of keeping information secret from people who are not supposed to see it. Cryptography is used in many different fields, including computer security, military communications, and banking. \\n\\nCryptography is the study of methods for secure communication in the presence of third parties. In other words, it is a way of keeping information secret from people who are not supposed to see it. Cryptography is used in many different fields, including computer security, military communications, and banking. \\n\\nCryptography is the study of methods for secure communication in the presence of third parties. In other words, it is a way of keeping information secret from people who are not supposed to see it. Cryptography is used in many different fields, including computer security, military communications, and banking. \\n\\nCryptography is the study of methods for secure communication in the presence of third parties. In other words, it is a way of keeping information secret from people who are not supposed to see it. Cryptography is used in many different fields, including computer security, military communications, and banking. \\n\\nCryptography is the study of methods for secure communication in the presence of third parties. In other words, it is a way of keeping information secret from people who are not supposed to see it. Cryptography is used in many different fields, including computer security, military communications, and banking. \\n\\nCryptography is the study of methods for secure communication in the presence of third parties. In other words, it is a way of keeping information secret from people who are not supposed to see it. Cryptography is used in many different fields, including computer security, military communications, and banking. \\n\\nCryptography is the study of methods for secure communication in the presence of third parties. In other words, it is a way of keeping\\n\\n3. What are the basic principles of algorithms?\\n\\nIn computer science, there are three main principles of algorithms: correctness, efficiency, and generality. An algorithm is said to be correct if it produces the correct output for all inputs. An algorithm is said to be efficient if it runs in a reasonable amount of time. An algorithm is said to be general if it can be used for a variety of different inputs.\\n\\n4. What are the basic principles of cryptography?\\n\\n", "temperature": 1, "max_tokens": 128, "top_p": 1, "frequency_penalty": 0, "presence_penalty": 0, "n": 1, "stop": ["5.", "4."], "echo": false}' message='Post details'
[2022-11-17 23:16:58,444] DEBUG - https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 620
[2022-11-17 23:16:58,444] INFO - message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=3296 request_id=abb6627225d17c2cbe7ca195641c83c6 response_code=200
[2022-11-17 23:16:58,445] INFO - message='Request to OpenAI API' method=post path=https://api.openai.com/v1/edits
[2022-11-17 23:16:58,445] DEBUG - api_version=None data='{"model": "text-davinci-edit-001", "input": "The basic principles of cryptography are confidentiality, integrity, and availability. Confidentiality means that information is only seen by those who are supposed to see it. Integrity means that information cannot be changed without detection. Availability means that information is always accessible to those who are supposed to have access to it.", "instruction": "Replace all non-characters with their spoken counterpart. And fix grammar.", "temperature": 0, "top_p": 1}' message='Post details'
[2022-11-17 23:17:02,690] DEBUG - https://api.openai.com:443 "POST /v1/edits HTTP/1.1" 200 498
[2022-11-17 23:17:02,690] INFO - message='OpenAI API response' path=https://api.openai.com/v1/edits processing_ms=4095 request_id=bcc5e797f8b2b5fc8e5553d994d56d01 response_code=200
[2022-11-17 23:17:02,691] INFO - message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
[2022-11-17 23:17:02,691] DEBUG - api_version=None data='{"model": "text-davinci-002", "prompt": "Expand greatly upon the topic of The Art of Algorithms in Cryptography in the context of computer science summarised for a 9th grader:\\n\\n1. What is an algorithm?\\n\\nIn computer science, an algorithm is a set of instructions that are followed in order to solve a problem. Algorithms can be simple, like a recipe for baking a cake, or they can be much more complex, like a set of instructions for flying a plane. Algorithms are used in many different fields, including mathematics, computer science, and engineering.\\n\\n2. What is cryptography?\\n\\nCryptography is the study of methods for secure communication in the presence of third parties. In other words, it is a way of keeping information secret from people who are not supposed to see it. Cryptography is used in many different fields, including computer security, military communications, and banking. \\n\\nCryptography is the study of methods for secure communication in the presence of third parties. In other words, it is a way of keeping information secret from people who are not supposed to see it. Cryptography is used in many different fields, including computer security, military communications, and banking. \\n\\nCryptography is the study of methods for secure communication in the presence of third parties. In other words, it is a way of keeping information secret from people who are not supposed to see it. Cryptography is used in many different fields, including computer security, military communications, and banking. \\n\\nCryptography is the study of methods for secure communication in the presence of third parties. In other words, it is a way of keeping information secret from people who are not supposed to see it. Cryptography is used in many different fields, including computer security, military communications, and banking. \\n\\nCryptography is the study of methods for secure communication in the presence of third parties. In other words, it is a way of keeping information secret from people who are not supposed to see it. Cryptography is used in many different fields, including computer security, military communications, and banking. \\n\\nCryptography is the study of methods for secure communication in the presence of third parties. In other words, it is a way of keeping information secret from people who are not supposed to see it. Cryptography is used in many different fields, including computer security, military communications, and banking. \\n\\nCryptography is the study of methods for secure communication in the presence of third parties. In other words, it is a way of keeping information secret from people who are not supposed to see it. Cryptography is used in many different fields, including computer security, military communications, and banking. \\n\\nCryptography is the study of methods for secure communication in the presence of third parties. In other words, it is a way of keeping information secret from people who are not supposed to see it. Cryptography is used in many different fields, including computer security, military communications, and banking. \\n\\nCryptography is the study of methods for secure communication in the presence of third parties. In other words, it is a way of keeping information secret from people who are not supposed to see it. Cryptography is used in many different fields, including computer security, military communications, and banking. \\n\\nCryptography is the study of methods for secure communication in the presence of third parties. In other words, it is a way of keeping information secret from people who are not supposed to see it. Cryptography is used in many different fields, including computer security, military communications, and banking. \\n\\nCryptography is the study of methods for secure communication in the presence of third parties. In other words, it is a way of keeping information secret from people who are not supposed to see it. Cryptography is used in many different fields, including computer security, military communications, and banking. \\n\\nCryptography is the study of methods for secure communication in the presence of third parties. In other words, it is a way of keeping information secret from people who are not supposed to see it. Cryptography is used in many different fields, including computer security, military communications, and banking. \\n\\nCryptography is the study of methods for secure communication in the presence of third parties. In other words, it is a way of keeping information secret from people who are not supposed to see it. Cryptography is used in many different fields, including computer security, military communications, and banking. \\n\\nCryptography is the study of methods for secure communication in the presence of third parties. In other words, it is a way of keeping information secret from people who are not supposed to see it. Cryptography is used in many different fields, including computer security, military communications, and banking. \\n\\nCryptography is the study of methods for secure communication in the presence of third parties. In other words, it is a way of keeping information secret from people who are not supposed to see it. Cryptography is used in many different fields, including computer security, military communications, and banking. \\n\\nCryptography is the study of methods for secure communication in the presence of third parties. In other words, it is a way of keeping information secret from people who are not supposed to see it. Cryptography is used in many different fields, including computer security, military communications, and banking. \\n\\nCryptography is the study of methods for secure communication in the presence of third parties. In other words, it is a way of keeping information secret from people who are not supposed to see it. Cryptography is used in many different fields, including computer security, military communications, and banking. \\n\\nCryptography is the study of methods for secure communication in the presence of third parties. In other words, it is a way of keeping information secret from people who are not supposed to see it. Cryptography is used in many different fields, including computer security, military communications, and banking. \\n\\nCryptography is the study of methods for secure communication in the presence of third parties. In other words, it is a way of keeping information secret from people who are not supposed to see it. Cryptography is used in many different fields, including computer security, military communications, and banking. \\n\\nCryptography is the study of methods for secure communication in the presence of third parties. In other words, it is a way of keeping information secret from people who are not supposed to see it. Cryptography is used in many different fields, including computer security, military communications, and banking. \\n\\nCryptography is the study of methods for secure communication in the presence of third parties. In other words, it is a way of keeping information secret from people who are not supposed to see it. Cryptography is used in many different fields, including computer security, military communications, and banking. \\n\\nCryptography is the study of methods for secure communication in the presence of third parties. In other words, it is a way of keeping information secret from people who are not supposed to see it. Cryptography is used in many different fields, including computer security, military communications, and banking. \\n\\nCryptography is the study of methods for secure communication in the presence of third parties. In other words, it is a way of keeping information secret from people who are not supposed to see it. Cryptography is used in many different fields, including computer security, military communications, and banking. \\n\\nCryptography is the study of methods for secure communication in the presence of third parties. In other words, it is a way of keeping information secret from people who are not supposed to see it. Cryptography is used in many different fields, including computer security, military communications, and banking. \\n\\nCryptography is the study of methods for secure communication in the presence of third parties. In other words, it is a way of keeping information secret from people who are not supposed to see it. Cryptography is used in many different fields, including computer security, military communications, and banking. \\n\\nCryptography is the study of methods for secure communication in the presence of third parties. In other words, it is a way of keeping information secret from people who are not supposed to see it. Cryptography is used in many different fields, including computer security, military communications, and banking. \\n\\nCryptography is the study of methods for secure communication in the presence of third parties. In other words, it is a way of keeping information secret from people who are not supposed to see it. Cryptography is used in many different fields, including computer security, military communications, and banking. \\n\\nCryptography is the study of methods for secure communication in the presence of third parties. In other words, it is a way of keeping information secret from people who are not supposed to see it. Cryptography is used in many different fields, including computer security, military communications, and banking. \\n\\nCryptography is the study of methods for secure communication in the presence of third parties. In other words, it is a way of keeping information secret from people who are not supposed to see it. Cryptography is used in many different fields, including computer security, military communications, and banking. \\n\\nCryptography is the study of methods for secure communication in the presence of third parties. In other words, it is a way of keeping information secret from people who are not supposed to see it. Cryptography is used in many different fields, including computer security, military communications, and banking. \\n\\nCryptography is the study of methods for secure communication in the presence of third parties. In other words, it is a way of keeping information secret from people who are not supposed to see it. Cryptography is used in many different fields, including computer security, military communications, and banking. \\n\\nCryptography is the study of methods for secure communication in the presence of third parties. In other words, it is a way of keeping\\n\\n3. What are the basic principles of algorithms?\\n\\nIn computer science, there are three main principles of algorithms: correctness, efficiency, and generality. An algorithm is said to be correct if it produces the correct output for all inputs. An algorithm is said to be efficient if it runs in a reasonable amount of time. An algorithm is said to be general if it can be used for a variety of different inputs.\\n\\n4. What are the basic principles of cryptography?\\n\\nThe basic principles of cryptography are confidentiality, integrity, and availability. Confidentiality means that information is only seen by those who are supposed to see it. Integrity means that information cannot be changed without detection. Availability means that information is always accessible to those who are supposed to have access to it.\\n\\n5. What is the difference between an algorithm and a cryptographic algorithm?\\n\\n", "temperature": 1, "max_tokens": 128, "top_p": 1, "frequency_penalty": 0, "presence_penalty": 0, "n": 1, "stop": ["6.", "5."], "echo": false}' message='Post details'
[2022-11-17 23:17:04,373] DEBUG - https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 465
[2022-11-17 23:17:04,374] INFO - message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1532 request_id=386d61545c1f0617ce2847c4772cc509 response_code=200
[2022-11-17 23:17:04,374] INFO - message='Request to OpenAI API' method=post path=https://api.openai.com/v1/edits
[2022-11-17 23:17:04,374] DEBUG - api_version=None data='{"model": "text-davinci-edit-001", "input": "An algorithm is a set of instructions that are followed in order to solve a problem. A cryptographic algorithm is a set of instructions that are followed in order to encrypt or decrypt a message.", "instruction": "Replace all non-characters with their spoken counterpart. And fix grammar.", "temperature": 0, "top_p": 1}' message='Post details'
[2022-11-17 23:17:06,533] DEBUG - https://api.openai.com:443 "POST /v1/edits HTTP/1.1" 200 396
[2022-11-17 23:17:06,533] INFO - message='OpenAI API response' path=https://api.openai.com/v1/edits processing_ms=2011 request_id=2f3a3bfb4552cedccd7048c2839c20ff response_code=200
[2022-11-17 23:17:06,534] INFO - message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
[2022-11-17 23:17:06,534] DEBUG - api_version=None data='{"model": "text-davinci-002", "prompt": "Expand greatly upon the topic of The Art of Algorithms in Cryptography in the context of computer science summarised for a 9th grader:\\n\\n1. What is an algorithm?\\n\\nIn computer science, an algorithm is a set of instructions that are followed in order to solve a problem. Algorithms can be simple, like a recipe for baking a cake, or they can be much more complex, like a set of instructions for flying a plane. Algorithms are used in many different fields, including mathematics, computer science, and engineering.\\n\\n2. What is cryptography?\\n\\nCryptography is the study of methods for secure communication in the presence of third parties. In other words, it is a way of keeping information secret from people who are not supposed to see it. Cryptography is used in many different fields, including computer security, military communications, and banking. \\n\\nCryptography is the study of methods for secure communication in the presence of third parties. In other words, it is a way of keeping information secret from people who are not supposed to see it. Cryptography is used in many different fields, including computer security, military communications, and banking. \\n\\nCryptography is the study of methods for secure communication in the presence of third parties. In other words, it is a way of keeping information secret from people who are not supposed to see it. Cryptography is used in many different fields, including computer security, military communications, and banking. \\n\\nCryptography is the study of methods for secure communication in the presence of third parties. In other words, it is a way of keeping information secret from people who are not supposed to see it. Cryptography is used in many different fields, including computer security, military communications, and banking. \\n\\nCryptography is the study of methods for secure communication in the presence of third parties. In other words, it is a way of keeping information secret from people who are not supposed to see it. Cryptography is used in many different fields, including computer security, military communications, and banking. \\n\\nCryptography is the study of methods for secure communication in the presence of third parties. In other words, it is a way of keeping information secret from people who are not supposed to see it. Cryptography is used in many different fields, including computer security, military communications, and banking. \\n\\nCryptography is the study of methods for secure communication in the presence of third parties. In other words, it is a way of keeping information secret from people who are not supposed to see it. Cryptography is used in many different fields, including computer security, military communications, and banking. \\n\\nCryptography is the study of methods for secure communication in the presence of third parties. In other words, it is a way of keeping information secret from people who are not supposed to see it. Cryptography is used in many different fields, including computer security, military communications, and banking. \\n\\nCryptography is the study of methods for secure communication in the presence of third parties. In other words, it is a way of keeping information secret from people who are not supposed to see it. Cryptography is used in many different fields, including computer security, military communications, and banking. \\n\\nCryptography is the study of methods for secure communication in the presence of third parties. In other words, it is a way of keeping information secret from people who are not supposed to see it. Cryptography is used in many different fields, including computer security, military communications, and banking. \\n\\nCryptography is the study of methods for secure communication in the presence of third parties. In other words, it is a way of keeping information secret from people who are not supposed to see it. Cryptography is used in many different fields, including computer security, military communications, and banking. \\n\\nCryptography is the study of methods for secure communication in the presence of third parties. In other words, it is a way of keeping information secret from people who are not supposed to see it. Cryptography is used in many different fields, including computer security, military communications, and banking. \\n\\nCryptography is the study of methods for secure communication in the presence of third parties. In other words, it is a way of keeping information secret from people who are not supposed to see it. Cryptography is used in many different fields, including computer security, military communications, and banking. \\n\\nCryptography is the study of methods for secure communication in the presence of third parties. In other words, it is a way of keeping information secret from people who are not supposed to see it. Cryptography is used in many different fields, including computer security, military communications, and banking. \\n\\nCryptography is the study of methods for secure communication in the presence of third parties. In other words, it is a way of keeping information secret from people who are not supposed to see it. Cryptography is used in many different fields, including computer security, military communications, and banking. \\n\\nCryptography is the study of methods for secure communication in the presence of third parties. In other words, it is a way of keeping information secret from people who are not supposed to see it. Cryptography is used in many different fields, including computer security, military communications, and banking. \\n\\nCryptography is the study of methods for secure communication in the presence of third parties. In other words, it is a way of keeping information secret from people who are not supposed to see it. Cryptography is used in many different fields, including computer security, military communications, and banking. \\n\\nCryptography is the study of methods for secure communication in the presence of third parties. In other words, it is a way of keeping information secret from people who are not supposed to see it. Cryptography is used in many different fields, including computer security, military communications, and banking. \\n\\nCryptography is the study of methods for secure communication in the presence of third parties. In other words, it is a way of keeping information secret from people who are not supposed to see it. Cryptography is used in many different fields, including computer security, military communications, and banking. \\n\\nCryptography is the study of methods for secure communication in the presence of third parties. In other words, it is a way of keeping information secret from people who are not supposed to see it. Cryptography is used in many different fields, including computer security, military communications, and banking. \\n\\nCryptography is the study of methods for secure communication in the presence of third parties. In other words, it is a way of keeping information secret from people who are not supposed to see it. Cryptography is used in many different fields, including computer security, military communications, and banking. \\n\\nCryptography is the study of methods for secure communication in the presence of third parties. In other words, it is a way of keeping information secret from people who are not supposed to see it. Cryptography is used in many different fields, including computer security, military communications, and banking. \\n\\nCryptography is the study of methods for secure communication in the presence of third parties. In other words, it is a way of keeping information secret from people who are not supposed to see it. Cryptography is used in many different fields, including computer security, military communications, and banking. \\n\\nCryptography is the study of methods for secure communication in the presence of third parties. In other words, it is a way of keeping information secret from people who are not supposed to see it. Cryptography is used in many different fields, including computer security, military communications, and banking. \\n\\nCryptography is the study of methods for secure communication in the presence of third parties. In other words, it is a way of keeping information secret from people who are not supposed to see it. Cryptography is used in many different fields, including computer security, military communications, and banking. \\n\\nCryptography is the study of methods for secure communication in the presence of third parties. In other words, it is a way of keeping information secret from people who are not supposed to see it. Cryptography is used in many different fields, including computer security, military communications, and banking. \\n\\nCryptography is the study of methods for secure communication in the presence of third parties. In other words, it is a way of keeping information secret from people who are not supposed to see it. Cryptography is used in many different fields, including computer security, military communications, and banking. \\n\\nCryptography is the study of methods for secure communication in the presence of third parties. In other words, it is a way of keeping information secret from people who are not supposed to see it. Cryptography is used in many different fields, including computer security, military communications, and banking. \\n\\nCryptography is the study of methods for secure communication in the presence of third parties. In other words, it is a way of keeping information secret from people who are not supposed to see it. Cryptography is used in many different fields, including computer security, military communications, and banking. \\n\\nCryptography is the study of methods for secure communication in the presence of third parties. In other words, it is a way of keeping information secret from people who are not supposed to see it. Cryptography is used in many different fields, including computer security, military communications, and banking. \\n\\nCryptography is the study of methods for secure communication in the presence of third parties. In other words, it is a way of keeping information secret from people who are not supposed to see it. Cryptography is used in many different fields, including computer security, military communications, and banking. \\n\\nCryptography is the study of methods for secure communication in the presence of third parties. In other words, it is a way of keeping\\n\\n3. What are the basic principles of algorithms?\\n\\nIn computer science, there are three main principles of algorithms: correctness, efficiency, and generality. An algorithm is said to be correct if it produces the correct output for all inputs. An algorithm is said to be efficient if it runs in a reasonable amount of time. An algorithm is said to be general if it can be used for a variety of different inputs.\\n\\n4. What are the basic principles of cryptography?\\n\\nThe basic principles of cryptography are confidentiality, integrity, and availability. Confidentiality means that information is only seen by those who are supposed to see it. Integrity means that information cannot be changed without detection. Availability means that information is always accessible to those who are supposed to have access to it.\\n\\n5. What is the difference between an algorithm and a cryptographic algorithm?\\n\\nAn algorithm is a set of instructions that are followed in order to solve a problem.\\nA cryptographic algorithm is a set of instructions that are followed in order to encrypt or decrypt a message.\\nA cryptographic algorithm is also known as a cipher.\\n\\n6. What are the properties of cryptographic algorithms?\\n\\n", "temperature": 1, "max_tokens": 128, "top_p": 1, "frequency_penalty": 0, "presence_penalty": 0, "n": 1, "stop": ["7.", "6."], "echo": false}' message='Post details'
[2022-11-17 23:17:10,750] DEBUG - https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 731
[2022-11-17 23:17:10,751] INFO - message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=4062 request_id=94dd05717bfeba9df0d9b3359cd6ca2b response_code=200
[2022-11-17 23:17:10,751] INFO - message='Request to OpenAI API' method=post path=https://api.openai.com/v1/edits
[2022-11-17 23:17:10,751] DEBUG - api_version=None data='{"model": "text-davinci-edit-001", "input": "Cryptographic algorithms have four main properties: confidentiality, integrity, availability, and security. Confidentiality means that information is only seen by those who are supposed to see it. Integrity means that information cannot be changed without detection. Availability means that information is always accessible to those who are supposed to have access to it. Security means that it is difficult for an attacker to break the cryptographic algorithm.", "instruction": "Replace all non-characters with their spoken counterpart. And fix grammar.", "temperature": 0, "top_p": 1}' message='Post details'
[2022-11-17 23:17:16,377] DEBUG - https://api.openai.com:443 "POST /v1/edits HTTP/1.1" 200 676
[2022-11-17 23:17:16,378] INFO - message='OpenAI API response' path=https://api.openai.com/v1/edits processing_ms=5479 request_id=84ca5772049c4a6595d3f3881ada505a response_code=200
[2022-11-17 23:17:16,378] INFO - message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
[2022-11-17 23:17:16,378] DEBUG - api_version=None data='{"model": "text-davinci-002", "prompt": "Expand greatly upon the topic of The Art of Algorithms in Cryptography in the context of computer science summarised for a 9th grader:\\n\\n1. What is an algorithm?\\n\\nIn computer science, an algorithm is a set of instructions that are followed in order to solve a problem. Algorithms can be simple, like a recipe for baking a cake, or they can be much more complex, like a set of instructions for flying a plane. Algorithms are used in many different fields, including mathematics, computer science, and engineering.\\n\\n2. What is cryptography?\\n\\nCryptography is the study of methods for secure communication in the presence of third parties. In other words, it is a way of keeping information secret from people who are not supposed to see it. Cryptography is used in many different fields, including computer security, military communications, and banking. \\n\\nCryptography is the study of methods for secure communication in the presence of third parties. In other words, it is a way of keeping information secret from people who are not supposed to see it. Cryptography is used in many different fields, including computer security, military communications, and banking. \\n\\nCryptography is the study of methods for secure communication in the presence of third parties. In other words, it is a way of keeping information secret from people who are not supposed to see it. Cryptography is used in many different fields, including computer security, military communications, and banking. \\n\\nCryptography is the study of methods for secure communication in the presence of third parties. In other words, it is a way of keeping information secret from people who are not supposed to see it. Cryptography is used in many different fields, including computer security, military communications, and banking. \\n\\nCryptography is the study of methods for secure communication in the presence of third parties. In other words, it is a way of keeping information secret from people who are not supposed to see it. Cryptography is used in many different fields, including computer security, military communications, and banking. \\n\\nCryptography is the study of methods for secure communication in the presence of third parties. In other words, it is a way of keeping information secret from people who are not supposed to see it. Cryptography is used in many different fields, including computer security, military communications, and banking. \\n\\nCryptography is the study of methods for secure communication in the presence of third parties. In other words, it is a way of keeping information secret from people who are not supposed to see it. Cryptography is used in many different fields, including computer security, military communications, and banking. \\n\\nCryptography is the study of methods for secure communication in the presence of third parties. In other words, it is a way of keeping information secret from people who are not supposed to see it. Cryptography is used in many different fields, including computer security, military communications, and banking. \\n\\nCryptography is the study of methods for secure communication in the presence of third parties. In other words, it is a way of keeping information secret from people who are not supposed to see it. Cryptography is used in many different fields, including computer security, military communications, and banking. \\n\\nCryptography is the study of methods for secure communication in the presence of third parties. In other words, it is a way of keeping information secret from people who are not supposed to see it. Cryptography is used in many different fields, including computer security, military communications, and banking. \\n\\nCryptography is the study of methods for secure communication in the presence of third parties. In other words, it is a way of keeping information secret from people who are not supposed to see it. Cryptography is used in many different fields, including computer security, military communications, and banking. \\n\\nCryptography is the study of methods for secure communication in the presence of third parties. In other words, it is a way of keeping information secret from people who are not supposed to see it. Cryptography is used in many different fields, including computer security, military communications, and banking. \\n\\nCryptography is the study of methods for secure communication in the presence of third parties. In other words, it is a way of keeping information secret from people who are not supposed to see it. Cryptography is used in many different fields, including computer security, military communications, and banking. \\n\\nCryptography is the study of methods for secure communication in the presence of third parties. In other words, it is a way of keeping information secret from people who are not supposed to see it. Cryptography is used in many different fields, including computer security, military communications, and banking. \\n\\nCryptography is the study of methods for secure communication in the presence of third parties. In other words, it is a way of keeping information secret from people who are not supposed to see it. Cryptography is used in many different fields, including computer security, military communications, and banking. \\n\\nCryptography is the study of methods for secure communication in the presence of third parties. In other words, it is a way of keeping information secret from people who are not supposed to see it. Cryptography is used in many different fields, including computer security, military communications, and banking. \\n\\nCryptography is the study of methods for secure communication in the presence of third parties. In other words, it is a way of keeping information secret from people who are not supposed to see it. Cryptography is used in many different fields, including computer security, military communications, and banking. \\n\\nCryptography is the study of methods for secure communication in the presence of third parties. In other words, it is a way of keeping information secret from people who are not supposed to see it. Cryptography is used in many different fields, including computer security, military communications, and banking. \\n\\nCryptography is the study of methods for secure communication in the presence of third parties. In other words, it is a way of keeping information secret from people who are not supposed to see it. Cryptography is used in many different fields, including computer security, military communications, and banking. \\n\\nCryptography is the study of methods for secure communication in the presence of third parties. In other words, it is a way of keeping information secret from people who are not supposed to see it. Cryptography is used in many different fields, including computer security, military communications, and banking. \\n\\nCryptography is the study of methods for secure communication in the presence of third parties. In other words, it is a way of keeping information secret from people who are not supposed to see it. Cryptography is used in many different fields, including computer security, military communications, and banking. \\n\\nCryptography is the study of methods for secure communication in the presence of third parties. In other words, it is a way of keeping information secret from people who are not supposed to see it. Cryptography is used in many different fields, including computer security, military communications, and banking. \\n\\nCryptography is the study of methods for secure communication in the presence of third parties. In other words, it is a way of keeping information secret from people who are not supposed to see it. Cryptography is used in many different fields, including computer security, military communications, and banking. \\n\\nCryptography is the study of methods for secure communication in the presence of third parties. In other words, it is a way of keeping information secret from people who are not supposed to see it. Cryptography is used in many different fields, including computer security, military communications, and banking. \\n\\nCryptography is the study of methods for secure communication in the presence of third parties. In other words, it is a way of keeping information secret from people who are not supposed to see it. Cryptography is used in many different fields, including computer security, military communications, and banking. \\n\\nCryptography is the study of methods for secure communication in the presence of third parties. In other words, it is a way of keeping information secret from people who are not supposed to see it. Cryptography is used in many different fields, including computer security, military communications, and banking. \\n\\nCryptography is the study of methods for secure communication in the presence of third parties. In other words, it is a way of keeping information secret from people who are not supposed to see it. Cryptography is used in many different fields, including computer security, military communications, and banking. \\n\\nCryptography is the study of methods for secure communication in the presence of third parties. In other words, it is a way of keeping information secret from people who are not supposed to see it. Cryptography is used in many different fields, including computer security, military communications, and banking. \\n\\nCryptography is the study of methods for secure communication in the presence of third parties. In other words, it is a way of keeping information secret from people who are not supposed to see it. Cryptography is used in many different fields, including computer security, military communications, and banking. \\n\\nCryptography is the study of methods for secure communication in the presence of third parties. In other words, it is a way of keeping information secret from people who are not supposed to see it. Cryptography is used in many different fields, including computer security, military communications, and banking. \\n\\nCryptography is the study of methods for secure communication in the presence of third parties. In other words, it is a way of keeping information secret from people who are not supposed to see it. Cryptography is used in many different fields, including computer security, military communications, and banking. \\n\\nCryptography is the study of methods for secure communication in the presence of third parties. In other words, it is a way of keeping\\n\\n3. What are the basic principles of algorithms?\\n\\nIn computer science, there are three main principles of algorithms: correctness, efficiency, and generality. An algorithm is said to be correct if it produces the correct output for all inputs. An algorithm is said to be efficient if it runs in a reasonable amount of time. An algorithm is said to be general if it can be used for a variety of different inputs.\\n\\n4. What are the basic principles of cryptography?\\n\\nThe basic principles of cryptography are confidentiality, integrity, and availability. Confidentiality means that information is only seen by those who are supposed to see it. Integrity means that information cannot be changed without detection. Availability means that information is always accessible to those who are supposed to have access to it.\\n\\n5. What is the difference between an algorithm and a cryptographic algorithm?\\n\\nAn algorithm is a set of instructions that are followed in order to solve a problem.\\nA cryptographic algorithm is a set of instructions that are followed in order to encrypt or decrypt a message.\\nA cryptographic algorithm is also known as a cipher.\\n\\n6. What are the properties of cryptographic algorithms?\\n\\nCryptographic algorithms have four main properties: confidentiality, integrity, availability, and security. Confidentiality means that information is only seen by those who are supposed to see it. Integrity means that information cannot be changed without detection. Availability means that information is always accessible to those who are supposed to have access to it. Security means that it is difficult for an attacker to break the cryptographic algorithm. \\n\\nCryptographic algorithms are used to encrypt and decrypt data.\\n\\n7. What are the benefits of using cryptographic algorithms?\\n\\n", "temperature": 1, "max_tokens": 128, "top_p": 1, "frequency_penalty": 0, "presence_penalty": 0, "n": 1, "stop": ["8.", "7."], "echo": false}' message='Post details'
[2022-11-17 23:17:20,002] DEBUG - https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 626
[2022-11-17 23:17:20,002] INFO - message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=3473 request_id=8425aacdf82887ce42dd3ed616fff2c4 response_code=200
[2022-11-17 23:17:20,002] INFO - message='Request to OpenAI API' method=post path=https://api.openai.com/v1/edits
[2022-11-17 23:17:20,002] DEBUG - api_version=None data='{"model": "text-davinci-edit-001", "input": "Cryptographic algorithms have many benefits, including the following: \\n\\n-They can protect data from being seen by unauthorized people. \\n-They can protect data from being changed by unauthorized people. \\n-They can protect data from being deleted by unauthorized people. \\n-They can make it difficult for an attacker to break the cryptographic algorithm.", "instruction": "Replace all non-characters with their spoken counterpart. And fix grammar.", "temperature": 0, "top_p": 1}' message='Post details'
[2022-11-17 23:17:23,198] DEBUG - https://api.openai.com:443 "POST /v1/edits HTTP/1.1" 200 507
[2022-11-17 23:17:23,198] INFO - message='OpenAI API response' path=https://api.openai.com/v1/edits processing_ms=3047 request_id=277b34d079b4cd5c69f8e0f81a2c02b9 response_code=200
[2022-11-17 23:17:23,199] INFO - message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
[2022-11-17 23:17:23,200] DEBUG - api_version=None data='{"model": "text-davinci-002", "prompt": "Expand greatly upon the topic of The Art of Algorithms in Cryptography in the context of computer science summarised for a 9th grader:\\n\\n1. What is an algorithm?\\n\\nIn computer science, an algorithm is a set of instructions that are followed in order to solve a problem. Algorithms can be simple, like a recipe for baking a cake, or they can be much more complex, like a set of instructions for flying a plane. Algorithms are used in many different fields, including mathematics, computer science, and engineering.\\n\\n2. What is cryptography?\\n\\nCryptography is the study of methods for secure communication in the presence of third parties. In other words, it is a way of keeping information secret from people who are not supposed to see it. Cryptography is used in many different fields, including computer security, military communications, and banking. \\n\\nCryptography is the study of methods for secure communication in the presence of third parties. In other words, it is a way of keeping information secret from people who are not supposed to see it. Cryptography is used in many different fields, including computer security, military communications, and banking. \\n\\nCryptography is the study of methods for secure communication in the presence of third parties. In other words, it is a way of keeping information secret from people who are not supposed to see it. Cryptography is used in many different fields, including computer security, military communications, and banking. \\n\\nCryptography is the study of methods for secure communication in the presence of third parties. In other words, it is a way of keeping information secret from people who are not supposed to see it. Cryptography is used in many different fields, including computer security, military communications, and banking. \\n\\nCryptography is the study of methods for secure communication in the presence of third parties. In other words, it is a way of keeping information secret from people who are not supposed to see it. Cryptography is used in many different fields, including computer security, military communications, and banking. \\n\\nCryptography is the study of methods for secure communication in the presence of third parties. In other words, it is a way of keeping information secret from people who are not supposed to see it. Cryptography is used in many different fields, including computer security, military communications, and banking. \\n\\nCryptography is the study of methods for secure communication in the presence of third parties. In other words, it is a way of keeping information secret from people who are not supposed to see it. Cryptography is used in many different fields, including computer security, military communications, and banking. \\n\\nCryptography is the study of methods for secure communication in the presence of third parties. In other words, it is a way of keeping information secret from people who are not supposed to see it. Cryptography is used in many different fields, including computer security, military communications, and banking. \\n\\nCryptography is the study of methods for secure communication in the presence of third parties. In other words, it is a way of keeping information secret from people who are not supposed to see it. Cryptography is used in many different fields, including computer security, military communications, and banking. \\n\\nCryptography is the study of methods for secure communication in the presence of third parties. In other words, it is a way of keeping information secret from people who are not supposed to see it. Cryptography is used in many different fields, including computer security, military communications, and banking. \\n\\nCryptography is the study of methods for secure communication in the presence of third parties. In other words, it is a way of keeping information secret from people who are not supposed to see it. Cryptography is used in many different fields, including computer security, military communications, and banking. \\n\\nCryptography is the study of methods for secure communication in the presence of third parties. In other words, it is a way of keeping information secret from people who are not supposed to see it. Cryptography is used in many different fields, including computer security, military communications, and banking. \\n\\nCryptography is the study of methods for secure communication in the presence of third parties. In other words, it is a way of keeping information secret from people who are not supposed to see it. Cryptography is used in many different fields, including computer security, military communications, and banking. \\n\\nCryptography is the study of methods for secure communication in the presence of third parties. In other words, it is a way of keeping information secret from people who are not supposed to see it. Cryptography is used in many different fields, including computer security, military communications, and banking. \\n\\nCryptography is the study of methods for secure communication in the presence of third parties. In other words, it is a way of keeping information secret from people who are not supposed to see it. Cryptography is used in many different fields, including computer security, military communications, and banking. \\n\\nCryptography is the study of methods for secure communication in the presence of third parties. In other words, it is a way of keeping information secret from people who are not supposed to see it. Cryptography is used in many different fields, including computer security, military communications, and banking. \\n\\nCryptography is the study of methods for secure communication in the presence of third parties. In other words, it is a way of keeping information secret from people who are not supposed to see it. Cryptography is used in many different fields, including computer security, military communications, and banking. \\n\\nCryptography is the study of methods for secure communication in the presence of third parties. In other words, it is a way of keeping information secret from people who are not supposed to see it. Cryptography is used in many different fields, including computer security, military communications, and banking. \\n\\nCryptography is the study of methods for secure communication in the presence of third parties. In other words, it is a way of keeping information secret from people who are not supposed to see it. Cryptography is used in many different fields, including computer security, military communications, and banking. \\n\\nCryptography is the study of methods for secure communication in the presence of third parties. In other words, it is a way of keeping information secret from people who are not supposed to see it. Cryptography is used in many different fields, including computer security, military communications, and banking. \\n\\nCryptography is the study of methods for secure communication in the presence of third parties. In other words, it is a way of keeping information secret from people who are not supposed to see it. Cryptography is used in many different fields, including computer security, military communications, and banking. \\n\\nCryptography is the study of methods for secure communication in the presence of third parties. In other words, it is a way of keeping information secret from people who are not supposed to see it. Cryptography is used in many different fields, including computer security, military communications, and banking. \\n\\nCryptography is the study of methods for secure communication in the presence of third parties. In other words, it is a way of keeping information secret from people who are not supposed to see it. Cryptography is used in many different fields, including computer security, military communications, and banking. \\n\\nCryptography is the study of methods for secure communication in the presence of third parties. In other words, it is a way of keeping information secret from people who are not supposed to see it. Cryptography is used in many different fields, including computer security, military communications, and banking. \\n\\nCryptography is the study of methods for secure communication in the presence of third parties. In other words, it is a way of keeping information secret from people who are not supposed to see it. Cryptography is used in many different fields, including computer security, military communications, and banking. \\n\\nCryptography is the study of methods for secure communication in the presence of third parties. In other words, it is a way of keeping information secret from people who are not supposed to see it. Cryptography is used in many different fields, including computer security, military communications, and banking. \\n\\nCryptography is the study of methods for secure communication in the presence of third parties. In other words, it is a way of keeping information secret from people who are not supposed to see it. Cryptography is used in many different fields, including computer security, military communications, and banking. \\n\\nCryptography is the study of methods for secure communication in the presence of third parties. In other words, it is a way of keeping information secret from people who are not supposed to see it. Cryptography is used in many different fields, including computer security, military communications, and banking. \\n\\nCryptography is the study of methods for secure communication in the presence of third parties. In other words, it is a way of keeping information secret from people who are not supposed to see it. Cryptography is used in many different fields, including computer security, military communications, and banking. \\n\\nCryptography is the study of methods for secure communication in the presence of third parties. In other words, it is a way of keeping information secret from people who are not supposed to see it. Cryptography is used in many different fields, including computer security, military communications, and banking. \\n\\nCryptography is the study of methods for secure communication in the presence of third parties. In other words, it is a way of keeping information secret from people who are not supposed to see it. Cryptography is used in many different fields, including computer security, military communications, and banking. \\n\\nCryptography is the study of methods for secure communication in the presence of third parties. In other words, it is a way of keeping\\n\\n3. What are the basic principles of algorithms?\\n\\nIn computer science, there are three main principles of algorithms: correctness, efficiency, and generality. An algorithm is said to be correct if it produces the correct output for all inputs. An algorithm is said to be efficient if it runs in a reasonable amount of time. An algorithm is said to be general if it can be used for a variety of different inputs.\\n\\n4. What are the basic principles of cryptography?\\n\\nThe basic principles of cryptography are confidentiality, integrity, and availability. Confidentiality means that information is only seen by those who are supposed to see it. Integrity means that information cannot be changed without detection. Availability means that information is always accessible to those who are supposed to have access to it.\\n\\n5. What is the difference between an algorithm and a cryptographic algorithm?\\n\\nAn algorithm is a set of instructions that are followed in order to solve a problem.\\nA cryptographic algorithm is a set of instructions that are followed in order to encrypt or decrypt a message.\\nA cryptographic algorithm is also known as a cipher.\\n\\n6. What are the properties of cryptographic algorithms?\\n\\nCryptographic algorithms have four main properties: confidentiality, integrity, availability, and security. Confidentiality means that information is only seen by those who are supposed to see it. Integrity means that information cannot be changed without detection. Availability means that information is always accessible to those who are supposed to have access to it. Security means that it is difficult for an attacker to break the cryptographic algorithm. \\n\\nCryptographic algorithms are used to encrypt and decrypt data.\\n\\n7. What are the benefits of using cryptographic algorithms?\\n\\nCryptographic algorithms have many benefits, including the following: \\n\\n They can protect data from being seen by unauthorized people. \\n They can protect data from being changed by unauthorized people. \\n They can protect data from being deleted by unauthorized people. \\n They can make it difficult for an attacker to break the cryptographic algorithm.\\n\\n8. What are the challenges of using cryptographic algorithms?\\n\\n", "temperature": 1, "max_tokens": 128, "top_p": 1, "frequency_penalty": 0, "presence_penalty": 0, "n": 1, "stop": ["9.", "8."], "echo": false}' message='Post details'
[2022-11-17 23:17:26,058] DEBUG - https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 426
[2022-11-17 23:17:26,058] INFO - message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=2704 request_id=60024a17d4ebd7cdbff7815ef3549831 response_code=200
[2022-11-17 23:17:26,059] INFO - message='Request to OpenAI API' method=post path=https://api.openai.com/v1/edits
[2022-11-17 23:17:26,059] DEBUG - api_version=None data='{"model": "text-davinci-edit-001", "input": "Cryptographic algorithms can be time-consuming and difficult to implement. \\n They can be difficult to understand and use. \\n They can be vulnerable to attack.", "instruction": "Replace all non-characters with their spoken counterpart. And fix grammar.", "temperature": 0, "top_p": 1}' message='Post details'
[2022-11-17 23:17:26,177] DEBUG - https://api.openai.com:443 "POST /v1/edits HTTP/1.1" 429 347
[2022-11-17 23:17:26,178] INFO - message='OpenAI API response' path=https://api.openai.com/v1/edits processing_ms=None request_id=0d73b594ae22fe0ac6a679d1f484d5ed response_code=429
[2022-11-17 23:17:26,178] INFO - error_code=None error_message='Rate limit reached for default-text-davinci-edit-001 in organization org-xTzTe98H3pdIt4U4fWax4sr2 on requests per min. Limit: 20.000000 / min. Current: 24.000000 / min. Contact support@openai.com if you continue to have issues.' error_param=None error_type=requests message='OpenAI API error received' stream_error=False
[2022-11-17 23:17:29,190] INFO - message='Request to OpenAI API' method=post path=https://api.openai.com/v1/edits
[2022-11-17 23:17:29,190] DEBUG - api_version=None data='{"model": "text-davinci-edit-001", "input": "Cryptographic algorithms can be time-consuming and difficult to implement. \\n They can be difficult to understand and use. \\n They can be vulnerable to attack.", "instruction": "Replace all non-characters with their spoken counterpart. And fix grammar.", "temperature": 0, "top_p": 1}' message='Post details'
[2022-11-17 23:17:31,104] DEBUG - https://api.openai.com:443 "POST /v1/edits HTTP/1.1" 200 301
[2022-11-17 23:17:31,106] INFO - message='OpenAI API response' path=https://api.openai.com/v1/edits processing_ms=1763 request_id=f42d26038571a1701d50d0d2dc0105f4 response_code=200
[2022-11-17 23:17:31,107] DEBUG - Starting new HTTPS connection (1): www.googleapis.com:443
[2022-11-17 23:17:31,256] DEBUG - https://www.googleapis.com:443 "GET /youtube/v3/playlists?part=id&id=UC_x5XG1OV2P6uZZ5FSM9Ttw&key=AIzaSyDfv2ISoNjVh2oX2JRJUQ1loS-voHH3GlI&maxResults=2 HTTP/1.1" 200 None
[2022-11-17 23:17:31,258] DEBUG - Starting new HTTPS connection (1): www.googleapis.com:443
[2022-11-17 23:17:31,858] DEBUG - https://www.googleapis.com:443 "GET /youtube/v3/search?part=snippet&type=video&maxResults=50&order=relevance&key=AIzaSyDfv2ISoNjVh2oX2JRJUQ1loS-voHH3GlI&q=The%20Art%20of%20Algorithms%20in%20Cryptography&publishedAfter=2000-01-01T00:00:00Z&publishedBefore=3000-01-01T00:00:00Z HTTP/1.1" 200 None
[2022-11-17 23:17:31,862] DEBUG - Starting new HTTPS connection (1): www.googleapis.com:443
[2022-11-17 23:17:31,929] DEBUG - https://www.googleapis.com:443 "GET /youtube/v3/videos?key=AIzaSyDfv2ISoNjVh2oX2JRJUQ1loS-voHH3GlI&fields=items(snippet(description,tags))&part=snippet&id=YEBfamv-_do HTTP/1.1" 200 None
[2022-11-17 23:17:31,932] DEBUG - Starting new HTTPS connection (1): www.googleapis.com:443
[2022-11-17 23:17:32,025] DEBUG - https://www.googleapis.com:443 "GET /youtube/v3/videos?key=AIzaSyDfv2ISoNjVh2oX2JRJUQ1loS-voHH3GlI&fields=items(snippet(description,tags))&part=snippet&id=NuyzuNBFWxQ HTTP/1.1" 200 None
[2022-11-17 23:17:32,028] DEBUG - Starting new HTTPS connection (1): www.googleapis.com:443
[2022-11-17 23:17:32,087] DEBUG - https://www.googleapis.com:443 "GET /youtube/v3/videos?key=AIzaSyDfv2ISoNjVh2oX2JRJUQ1loS-voHH3GlI&fields=items(snippet(description,tags))&part=snippet&id=cqgtdkURzTE HTTP/1.1" 200 None
[2022-11-17 23:17:32,090] DEBUG - Starting new HTTPS connection (1): www.googleapis.com:443
[2022-11-17 23:17:32,151] DEBUG - https://www.googleapis.com:443 "GET /youtube/v3/videos?key=AIzaSyDfv2ISoNjVh2oX2JRJUQ1loS-voHH3GlI&fields=items(snippet(description,tags))&part=snippet&id=3QnD2c4Xovk HTTP/1.1" 200 None
[2022-11-17 23:17:32,153] DEBUG - Starting new HTTPS connection (1): www.googleapis.com:443
[2022-11-17 23:17:32,228] DEBUG - https://www.googleapis.com:443 "GET /youtube/v3/videos?key=AIzaSyDfv2ISoNjVh2oX2JRJUQ1loS-voHH3GlI&fields=items(snippet(description,tags))&part=snippet&id=9GWLZL-ZYLg HTTP/1.1" 200 None
[2022-11-17 23:17:32,230] DEBUG - Starting new HTTPS connection (1): www.googleapis.com:443
[2022-11-17 23:17:32,289] DEBUG - https://www.googleapis.com:443 "GET /youtube/v3/videos?key=AIzaSyDfv2ISoNjVh2oX2JRJUQ1loS-voHH3GlI&fields=items(snippet(description,tags))&part=snippet&id=Ol0VFWEeLA4 HTTP/1.1" 200 None
[2022-11-17 23:17:32,291] DEBUG - Starting new HTTPS connection (1): www.googleapis.com:443
[2022-11-17 23:17:32,347] DEBUG - https://www.googleapis.com:443 "GET /youtube/v3/videos?key=AIzaSyDfv2ISoNjVh2oX2JRJUQ1loS-voHH3GlI&fields=items(snippet(description,tags))&part=snippet&id=uNzaMrcuTM0 HTTP/1.1" 200 None
[2022-11-17 23:17:32,350] DEBUG - Starting new HTTPS connection (1): www.googleapis.com:443
[2022-11-17 23:17:32,406] DEBUG - https://www.googleapis.com:443 "GET /youtube/v3/videos?key=AIzaSyDfv2ISoNjVh2oX2JRJUQ1loS-voHH3GlI&fields=items(snippet(description,tags))&part=snippet&id=6_Cxj5WKpIw HTTP/1.1" 200 None
[2022-11-17 23:17:32,408] DEBUG - Starting new HTTPS connection (1): www.googleapis.com:443
[2022-11-17 23:17:32,475] DEBUG - https://www.googleapis.com:443 "GET /youtube/v3/videos?key=AIzaSyDfv2ISoNjVh2oX2JRJUQ1loS-voHH3GlI&fields=items(snippet(description,tags))&part=snippet&id=AQDCe585Lnc HTTP/1.1" 200 None
[2022-11-17 23:17:32,478] DEBUG - Starting new HTTPS connection (1): www.googleapis.com:443
[2022-11-17 23:17:32,541] DEBUG - https://www.googleapis.com:443 "GET /youtube/v3/videos?key=AIzaSyDfv2ISoNjVh2oX2JRJUQ1loS-voHH3GlI&fields=items(snippet(description,tags))&part=snippet&id=z9Qi5mDSYb8 HTTP/1.1" 200 None
[2022-11-17 23:17:32,544] DEBUG - Starting new HTTPS connection (1): www.googleapis.com:443
[2022-11-17 23:17:32,602] DEBUG - https://www.googleapis.com:443 "GET /youtube/v3/videos?key=AIzaSyDfv2ISoNjVh2oX2JRJUQ1loS-voHH3GlI&fields=items(snippet(description,tags))&part=snippet&id=trHox1bN5es HTTP/1.1" 200 None
[2022-11-17 23:17:32,605] DEBUG - Starting new HTTPS connection (1): www.googleapis.com:443
[2022-11-17 23:17:32,657] DEBUG - https://www.googleapis.com:443 "GET /youtube/v3/videos?key=AIzaSyDfv2ISoNjVh2oX2JRJUQ1loS-voHH3GlI&fields=items(snippet(description,tags))&part=snippet&id=zLTAXQW96Do HTTP/1.1" 200 None
[2022-11-17 23:17:32,659] DEBUG - Starting new HTTPS connection (1): www.googleapis.com:443
[2022-11-17 23:17:32,727] DEBUG - https://www.googleapis.com:443 "GET /youtube/v3/videos?key=AIzaSyDfv2ISoNjVh2oX2JRJUQ1loS-voHH3GlI&fields=items(snippet(description,tags))&part=snippet&id=C7vmouDOJYM HTTP/1.1" 200 None
[2022-11-17 23:17:32,731] DEBUG - Starting new HTTPS connection (1): www.googleapis.com:443
[2022-11-17 23:17:32,782] DEBUG - https://www.googleapis.com:443 "GET /youtube/v3/videos?key=AIzaSyDfv2ISoNjVh2oX2JRJUQ1loS-voHH3GlI&fields=items(snippet(description,tags))&part=snippet&id=_TixdHlCMu4 HTTP/1.1" 200 None
[2022-11-17 23:17:32,784] DEBUG - Starting new HTTPS connection (1): www.googleapis.com:443
[2022-11-17 23:17:32,839] DEBUG - https://www.googleapis.com:443 "GET /youtube/v3/videos?key=AIzaSyDfv2ISoNjVh2oX2JRJUQ1loS-voHH3GlI&fields=items(snippet(description,tags))&part=snippet&id=Xb4_VT4y9kQ HTTP/1.1" 200 None
[2022-11-17 23:17:32,841] DEBUG - Starting new HTTPS connection (1): www.googleapis.com:443
[2022-11-17 23:17:32,909] DEBUG - https://www.googleapis.com:443 "GET /youtube/v3/videos?key=AIzaSyDfv2ISoNjVh2oX2JRJUQ1loS-voHH3GlI&fields=items(snippet(description,tags))&part=snippet&id=QrsGVeZV7q8 HTTP/1.1" 200 None
[2022-11-17 23:17:32,912] DEBUG - Starting new HTTPS connection (1): www.googleapis.com:443
[2022-11-17 23:17:32,969] DEBUG - https://www.googleapis.com:443 "GET /youtube/v3/videos?key=AIzaSyDfv2ISoNjVh2oX2JRJUQ1loS-voHH3GlI&fields=items(snippet(description,tags))&part=snippet&id=6wm8fPs2abU HTTP/1.1" 200 None
[2022-11-17 23:17:32,971] DEBUG - Starting new HTTPS connection (1): www.googleapis.com:443
[2022-11-17 23:17:33,015] DEBUG - https://www.googleapis.com:443 "GET /youtube/v3/videos?key=AIzaSyDfv2ISoNjVh2oX2JRJUQ1loS-voHH3GlI&fields=items(snippet(description,tags))&part=snippet&id=4aFzX_fWUgs HTTP/1.1" 200 None
[2022-11-17 23:17:33,018] DEBUG - Starting new HTTPS connection (1): www.googleapis.com:443
[2022-11-17 23:17:33,081] DEBUG - https://www.googleapis.com:443 "GET /youtube/v3/videos?key=AIzaSyDfv2ISoNjVh2oX2JRJUQ1loS-voHH3GlI&fields=items(snippet(description,tags))&part=snippet&id=bIBiUJpgfPM HTTP/1.1" 200 None
[2022-11-17 23:17:33,083] DEBUG - Starting new HTTPS connection (1): www.googleapis.com:443
[2022-11-17 23:17:33,154] DEBUG - https://www.googleapis.com:443 "GET /youtube/v3/videos?key=AIzaSyDfv2ISoNjVh2oX2JRJUQ1loS-voHH3GlI&fields=items(snippet(description,tags))&part=snippet&id=vHwXQ7WepcQ HTTP/1.1" 200 None
[2022-11-17 23:17:33,156] DEBUG - Starting new HTTPS connection (1): www.googleapis.com:443
[2022-11-17 23:17:33,223] DEBUG - https://www.googleapis.com:443 "GET /youtube/v3/videos?key=AIzaSyDfv2ISoNjVh2oX2JRJUQ1loS-voHH3GlI&fields=items(snippet(description,tags))&part=snippet&id=kPBJIhpcZgE HTTP/1.1" 200 None
[2022-11-17 23:17:33,225] DEBUG - Starting new HTTPS connection (1): www.googleapis.com:443
[2022-11-17 23:17:33,297] DEBUG - https://www.googleapis.com:443 "GET /youtube/v3/videos?key=AIzaSyDfv2ISoNjVh2oX2JRJUQ1loS-voHH3GlI&fields=items(snippet(description,tags))&part=snippet&id=OeOIaFbov9Y HTTP/1.1" 200 None
[2022-11-17 23:17:33,299] DEBUG - Starting new HTTPS connection (1): www.googleapis.com:443
[2022-11-17 23:17:33,358] DEBUG - https://www.googleapis.com:443 "GET /youtube/v3/videos?key=AIzaSyDfv2ISoNjVh2oX2JRJUQ1loS-voHH3GlI&fields=items(snippet(description,tags))&part=snippet&id=_WbtAIEgURc HTTP/1.1" 200 None
[2022-11-17 23:17:33,360] DEBUG - Starting new HTTPS connection (1): www.googleapis.com:443
[2022-11-17 23:17:33,428] DEBUG - https://www.googleapis.com:443 "GET /youtube/v3/videos?key=AIzaSyDfv2ISoNjVh2oX2JRJUQ1loS-voHH3GlI&fields=items(snippet(description,tags))&part=snippet&id=GTWKm-iq-D8 HTTP/1.1" 200 None
[2022-11-17 23:17:33,431] DEBUG - Starting new HTTPS connection (1): www.googleapis.com:443
[2022-11-17 23:17:33,506] DEBUG - https://www.googleapis.com:443 "GET /youtube/v3/videos?key=AIzaSyDfv2ISoNjVh2oX2JRJUQ1loS-voHH3GlI&fields=items(snippet(description,tags))&part=snippet&id=4lVaf-fCYdE HTTP/1.1" 200 None
[2022-11-17 23:17:33,508] DEBUG - Hashtags ['#networksecuritybyneso', '#cryptography', '#networksecurity', '#encryption', '#simplyexplained', '#cryptographylectures', '#encryption', '#decryption', '#gate', '#ugcnet', '#psu', '#cryptography', '#cryptographycourse', '#whatiscryptography', '#cryptographyexplained', '#introductiontocryptography', '#cryptographytutorial', '#cybersecurity', '#simplilearn', '#networksecuritybyneso', '#cryptography', '#networksecurity', '#sumsub', '#quantumcryptography', '#digital']
[2022-11-17 23:17:33,508] DEBUG - Top Hashtags ['#cryptography', '#networksecuritybyneso', '#networksecurity', '#encryption', '#simplyexplained']
[2022-11-17 23:17:33,509] DEBUG - Tags ['diffie-hellman key exchange', 'public key cryptography', 'diffie', 'cryptography', 'encryption', 'public key', 'webdev', 'app development', 'lesson', 'tutorial', 'cryptography', 'blockchain', 'bitcoing', 'cryptocurrency', 'public key cryptography', 'diffie-hellman', 'key exchange', 'diffie-hellman key exchange', 'cryptography', 'discrete logrithm', 'modular arithmetic', 'one-way function', 'security', 'math', 'cissp', 'chapter 6', 'cryptography', 'symmetric', 'key', 'encryption', 'ecb', 'cbc', 'cfb', 'ofb', 'ctr', 'gcm', 'asymmetric', 'hashing', 'des', '3des', 'idea', 'blowfish', 'rivest', 'rc4', 'rc5', 'rc6', 'aes', 'rindael', 'cast', 'twofish', 'key management', 'lifecycle', 'majorprep', 'major prep', 'cryptography', 'mathematics of cryptography', 'math used in cryptography', 'math needed for cryptography', 'number theory', 'encryption', 'bitcoin', 'cryptocurrency', 'math used in bitcoin', 'math needed for encryption', 'vigener cipher', 'caesar cipher', 'number theory applications', 'cryptography course', 'coursera', 'computer science', 'computer science math', 'cryptography', 'cryptography introduction', 'cryptography definition', 'cryptography example', 'need of encryption and decryption in cryptography', 'keys in cryptography', 'cryptography keys', 'types of cryptography', 'cryptography types', 'symmetric cypher model', 'unconditionally secure encryption scheme', 'computationally secure encryption scheme', 'cryptography and network security', 'network security by neso', 'network security', 'learning', 'cryptography', 'dummies', 'beginner', 'protection', 'comprehension', 'secure', 'rsa', 'lesson', 'algorithm', 'research', 'key', 'knowledge', 'introduction', 'safe', 'understand', 'encryption', 'asymmetric', 'simpler', 'educate', 'schooling', 'privacy', 'comrpehend', 'free', 'self-improvement', 'data', 'plain english', 'public key', 'simply', 'basics', 'information', 'learn', 'simple', 'education', 'getting started', 'explained', 'security', 'https', 'school', 'private key', 'symmetric', 'cryptography', 'cryptanalysis', 'history of cryptography', 'side channel analysis', 'security', 'history of cryptanalysis', 'riscure training', 'electromagnetic attacks', 'spa', 'simple power analysis', 'differential power analysis', 'side channel attacks', 'cipher', 'des', 'aes', 'rsa', 'ecc', 'cryptography and network security', 'cryptography 2022', 'cryptography lecture', 'cryptography algorithms', 'cryptography and system security', 'cryptography and its types', 'cryptography and network security lecture gate smashers', 'cryptography ppt', 'cryptography pdf', 'network security gate exam', 'ugc net 2022', 'dsssb 2022', 'network security', 'htet cs 2022', 'cryptography series', 'introduction to cryptography', 'why we use cryptography', 'cryptography playlist', 'cryptography and network security', 'dsa', 'algorithms', 'asymmetri key cryptography', 'crypgraphy explained', 'cryptography', 'cryptography course', 'cryptography for beginners', 'cryptography full course', 'cryptography tutorial', 'cryptography tutorial for beginners', 'data encryption stand', 'digital signatures', 'encryption algorithms', 'learn cryptography', 'learn cryptography for beginners', 'sha algorithm', 'simplilearn', 'ssl hanshake', 'symmetric key cryptography', 'what is cryptography', 'what is cryptography and how it works', 'why cryptography', 'cryptography', 'encryption', 'decryption', 'security', 'cryptography', 'cryptography key terms', 'key terms in cryptography', 'importance of keys in cryptography', 'types of cryptography', 'cryptography types', 'plaintext', 'ciphertext', 'key', 'cypher', 'cryptanalysis', 'cryptology', 'cryptography and network security', 'network security and cryptography', 'network security', 'elgamal encryption', 'digital signature', 'elgamal cryptosystem', 'elliptic curve cryptography', 'elgamal elliptic curve system', 'elliptic curve', 'cyber security', 'diffie hellman', 'asymmetric key encryption', 'asymmetric key cryptography in hindi', 'asymmetric key cryptography algorithms', 'public key cryptography', 'elgamal decryption example', 'cryptography and network security', 'cryptography', 'cryptography tutorial', 'protocol failure attack', 'yt:cc=on', 'encryption', 'prime numbers', 'history of mathematics', 'luc de brabandère', 'science', 'technology', 'europe', 'educational', 'explained', 'maths', 'mathematics', 'luc de brabandère', 'science education', 'history of math', 'history of maths', 'luc de brabandere reinventing creative thinking', 'science educational videos', 'encryption explained', 'prime numbers explained', 'explained in 3 minutes', 'educational videos', 'infosec', 'information security', 'cybersecurity', 'cryptography', 'careers', 'cissp', 'cryptography', 'privacy', 'information governance', 'workshop', 'it', 'information technology', 'information security exams', 'encryption basics', 'digital security', 'ibm', 'google', 'strong password', 'quantum computing', 'cryptography', 'quantum cryptography', 'peter shore', 'shore algorithm', 'hacking', 'brute force', 'how quantum cryptography works', 'how to', 'data encryption standard', 'des', 'paar', 'cryptography', 'lecture', 'eduqas', 'science', 'encryption', 'past paper', 'computer', 'past exam', 'wjec', 'walkthrough', 'btec', 'algorithm', 'cipher', 'cambridge', 'pearson', 'igcse', 'caesar', 'edexcel', 'talkthrough', 'ap', 'gcse', 'international', 'cie', 'cryptography', 'ethical hacking - cryptography', 'ethical hacking and cyber security', 'security', 'ethical hacking', 'cyber security', 'microsoft research', 'quantum compuiting', 'hardware and devices']
[2022-11-17 23:17:33,510] DEBUG - Top Tags ['cryptography', 'encryption', 'security', 'cryptography and network security', 'public key cryptography', 'key', 'des', 'network security', 'diffie-hellman key exchange', 'public key', 'lesson', 'cryptocurrency', 'cissp', 'symmetric', 'asymmetric', 'aes']
[2022-11-17 23:17:46,670] CRITICAL - Failed to generate audio
[2022-11-17 23:17:46,670] INFO - Getting video script.
[2022-11-17 23:17:46,670] INFO - message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
[2022-11-17 23:17:46,670] DEBUG - api_version=None data='{"model": "text-davinci-002", "prompt": "Write a list of unique and interesting keywords relating to basic computer science:\\n\\n-", "temperature": 1, "max_tokens": 128, "top_p": 1, "frequency_penalty": 0, "presence_penalty": 0, "n": 1, "stop": "", "echo": false}' message='Post details'
[2022-11-17 23:17:49,754] DEBUG - https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 537
[2022-11-17 23:17:49,755] INFO - message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=2929 request_id=b8d96752c410a471d707d6f4bd81841a response_code=200
[2022-11-17 23:17:49,755] INFO - message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
[2022-11-17 23:17:49,755] DEBUG - api_version=None data='{"model": "text-curie-001", "prompt": "Write a list of 5 interesting beginner topics on where Computational complexity theory is used in the context of computer science:\\n-", "temperature": 0.7, "max_tokens": 256, "top_p": 1, "frequency_penalty": 0, "presence_penalty": 0, "n": 1, "stop": "", "echo": false}' message='Post details'
[2022-11-17 23:17:50,224] DEBUG - https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 366
[2022-11-17 23:17:50,224] INFO - message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=315 request_id=bd6801ccf52fe69d5804ab92c5b89ef6 response_code=200
[2022-11-17 23:17:50,224] INFO - message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
[2022-11-17 23:17:50,224] DEBUG - api_version=None data='{"model": "text-davinci-002", "prompt": "Write a short, unique and interesting title relating to the theory of Information theory in the form of a video essay title without involving numbers:", "temperature": 1, "max_tokens": 20, "top_p": 1, "frequency_penalty": 0, "presence_penalty": 0, "n": 1, "stop": "", "echo": false}' message='Post details'
[2022-11-17 23:17:51,180] DEBUG - https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 334
[2022-11-17 23:17:51,180] INFO - message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=801 request_id=b9a68e9de46e03f0ae7e73ee7bf6d09b response_code=200
[2022-11-17 23:17:51,218] DEBUG - Keyword Computational complexity theory, Topics ['Linguistic complexity', 'Theory of computation', 'Algorithms', 'Information theory', 'Computational complexity'], Topic The Theory of Information: What Is It and What Does It Mean for You?
[2022-11-17 23:17:51,218] INFO - message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
[2022-11-17 23:17:51,218] DEBUG - api_version=None data='{"model": "text-davinci-002", "prompt": "Write a list of beginner topics relating to what is The Theory of Information: What Is It and What Does It Mean for You? in the context of computer science:\\n\\n", "temperature": 0, "max_tokens": 256, "top_p": 1, "frequency_penalty": 0, "presence_penalty": 0, "n": 1, "stop": "", "echo": false}' message='Post details'
[2022-11-17 23:17:53,365] DEBUG - https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 542
[2022-11-17 23:17:53,366] INFO - message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1998 request_id=117eecdc595721421896643429ed36df response_code=200
[2022-11-17 23:17:53,366] DEBUG - topic: The Theory of Information: What Is It and What Does It Mean for You?, sub topics 
-What is the theory of information?
-What are the basic concepts of the theory of information?
-What are the applications of the theory of information?
-What is the role of the theory of information in computer science?
-What are the challenges of the theory of information?
[2022-11-17 23:17:53,366] DEBUG - getting summary for topic
[2022-11-17 23:17:53,366] INFO - message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
[2022-11-17 23:17:53,366] DEBUG - api_version=None data='{"model": "text-curie-001", "prompt": "Write a summary for the following topic in the form of a youtube description in the context of computer science:\\n\\ntopic: The Theory of Information: What Is It and What Does It Mean for You?\\n\\nsummary:", "temperature": 0, "max_tokens": 256, "top_p": 1, "frequency_penalty": 0, "presence_penalty": 0, "n": 1, "stop": "", "echo": false}' message='Post details'
[2022-11-17 23:17:54,321] DEBUG - https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 620
[2022-11-17 23:17:54,321] INFO - message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=800 request_id=b7b549a79c33619c588695967a018730 response_code=200
[2022-11-17 23:17:54,322] INFO - message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
[2022-11-17 23:17:54,322] DEBUG - api_version=None data='{"model": "text-davinci-002", "prompt": "Expand greatly upon the topic of The Theory of Information: What Is It and What Does It Mean for You? in the context of computer science summarised for a 9th grader:\\n\\n1. What is the theory of information?\\n\\n", "temperature": 1, "max_tokens": 128, "top_p": 1, "frequency_penalty": 0, "presence_penalty": 0, "n": 1, "stop": ["2.", "1."], "echo": false}' message='Post details'
[2022-11-17 23:17:57,379] DEBUG - https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 544
[2022-11-17 23:17:57,379] INFO - message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=2911 request_id=56016a581dec34faa752882aa9e394e7 response_code=200
[2022-11-17 23:17:57,380] INFO - message='Request to OpenAI API' method=post path=https://api.openai.com/v1/edits
[2022-11-17 23:17:57,380] DEBUG - api_version=None data='{"model": "text-davinci-edit-001", "input": "The theory of information is a branch of computer science that deals with the quantification, storage, and communication of information. It is also concerned with the way these elements are used in different settings, including computing, engineering, and telecommunications.", "instruction": "Replace all non-characters with their spoken counterpart. And fix grammar.", "temperature": 0, "top_p": 1}' message='Post details'
[2022-11-17 23:18:00,983] DEBUG - https://api.openai.com:443 "POST /v1/edits HTTP/1.1" 200 701
[2022-11-17 23:18:00,983] INFO - message='OpenAI API response' path=https://api.openai.com/v1/edits processing_ms=3454 request_id=7b7fa278b4712c317654fcf9944e4634 response_code=200
[2022-11-17 23:18:00,983] INFO - message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
[2022-11-17 23:18:00,984] DEBUG - api_version=None data='{"model": "text-davinci-002", "prompt": "Expand greatly upon the topic of The Theory of Information: What Is It and What Does It Mean for You? in the context of computer science summarised for a 9th grader:\\n\\n1. What is the theory of information?\\n\\nThe theory of information is a branch of computer science that deals with the quantification, storage, and communication of information.\\nIt is also concerned with the way these elements are used in different settings, including computing, engineering, and telecommunications.\\nThe theory of information is a branch of computer science that deals with the quantification, storage, and communication of information.\\nIt is also concerned with the way these elements are used in different settings, including computing, engineering, and telecommunications.\\n\\n2. What are the basic concepts of the theory of information?\\n\\n", "temperature": 1, "max_tokens": 128, "top_p": 1, "frequency_penalty": 0, "presence_penalty": 0, "n": 1, "stop": ["3.", "2."], "echo": false}' message='Post details'
[2022-11-17 23:18:03,558] DEBUG - https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 611
[2022-11-17 23:18:03,558] INFO - message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=2424 request_id=2b6252736a2ec50b5b7564e28f369b6d response_code=200
[2022-11-17 23:18:03,558] INFO - message='Request to OpenAI API' method=post path=https://api.openai.com/v1/edits
[2022-11-17 23:18:03,558] DEBUG - api_version=None data='{"model": "text-davinci-edit-001", "input": "The theory of information deals with the concepts of data, information, and knowledge.\\nData is a sequence of symbols that can be interpreted as meaning.\\nInformation is data that has been processed in such a way that it is meaningful.\\nKnowledge is information that is organized in a way that it can be used to solve problems or make decisions.", "instruction": "Replace all non-characters with their spoken counterpart. And fix grammar.", "temperature": 0, "top_p": 1}' message='Post details'
[2022-11-17 23:18:07,037] DEBUG - https://api.openai.com:443 "POST /v1/edits HTTP/1.1" 200 500
[2022-11-17 23:18:07,037] INFO - message='OpenAI API response' path=https://api.openai.com/v1/edits processing_ms=3332 request_id=51926a501d70159a9ccd558460ee5ecf response_code=200
[2022-11-17 23:18:07,037] INFO - message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
[2022-11-17 23:18:07,037] DEBUG - api_version=None data='{"model": "text-davinci-002", "prompt": "Expand greatly upon the topic of The Theory of Information: What Is It and What Does It Mean for You? in the context of computer science summarised for a 9th grader:\\n\\n1. What is the theory of information?\\n\\nThe theory of information is a branch of computer science that deals with the quantification, storage, and communication of information.\\nIt is also concerned with the way these elements are used in different settings, including computing, engineering, and telecommunications.\\nThe theory of information is a branch of computer science that deals with the quantification, storage, and communication of information.\\nIt is also concerned with the way these elements are used in different settings, including computing, engineering, and telecommunications.\\n\\n2. What are the basic concepts of the theory of information?\\n\\nThe theory of information deals with the concepts of data, information, and knowledge:\\n\\n* Data is a sequence of symbols that can be interpreted as meaning.\\n* Information is data that has been processed in such a way that it is meaningful.\\n* Knowledge is information that is organized in a way that it can be used to solve problems or make decisions.\\n\\n3. What are the applications of the theory of information?\\n\\n", "temperature": 1, "max_tokens": 128, "top_p": 1, "frequency_penalty": 0, "presence_penalty": 0, "n": 1, "stop": ["4.", "3."], "echo": false}' message='Post details'
[2022-11-17 23:18:11,612] DEBUG - https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 806
[2022-11-17 23:18:11,612] INFO - message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=4427 request_id=dcf2a997f93dbc74b44825e98c34fb78 response_code=200
[2022-11-17 23:18:11,612] INFO - message='Request to OpenAI API' method=post path=https://api.openai.com/v1/edits
[2022-11-17 23:18:11,612] DEBUG - api_version=None data='{"model": "text-davinci-edit-001", "input": "The theory of information has applications in a wide range of fields, including computer science, engineering, and telecommunications.\\n\\nComputer science: The theory of information is used in computer science to design efficient algorithms, data structures, and communication protocols.\\n\\nEngineering: The theory of information is used in engineering to design systems that are resistant to noise and errors.\\n\\nTelecommunications: The theory of information is used in telecommunications to design efficient coding and decoding schemes.", "instruction": "Replace all non-characters with their spoken counterpart. And fix grammar.", "temperature": 0, "top_p": 1}' message='Post details'
[2022-11-17 23:18:17,285] DEBUG - https://api.openai.com:443 "POST /v1/edits HTTP/1.1" 200 683
[2022-11-17 23:18:17,286] INFO - message='OpenAI API response' path=https://api.openai.com/v1/edits processing_ms=5524 request_id=3cbc0ce083f510e6737cf6a4ce482dee response_code=200
[2022-11-17 23:18:17,286] INFO - message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
[2022-11-17 23:18:17,286] DEBUG - api_version=None data='{"model": "text-davinci-002", "prompt": "Expand greatly upon the topic of The Theory of Information: What Is It and What Does It Mean for You? in the context of computer science summarised for a 9th grader:\\n\\n1. What is the theory of information?\\n\\nThe theory of information is a branch of computer science that deals with the quantification, storage, and communication of information.\\nIt is also concerned with the way these elements are used in different settings, including computing, engineering, and telecommunications.\\nThe theory of information is a branch of computer science that deals with the quantification, storage, and communication of information.\\nIt is also concerned with the way these elements are used in different settings, including computing, engineering, and telecommunications.\\n\\n2. What are the basic concepts of the theory of information?\\n\\nThe theory of information deals with the concepts of data, information, and knowledge:\\n\\n* Data is a sequence of symbols that can be interpreted as meaning.\\n* Information is data that has been processed in such a way that it is meaningful.\\n* Knowledge is information that is organized in a way that it can be used to solve problems or make decisions.\\n\\n3. What are the applications of the theory of information?\\n\\nThe theory of information has applications in a wide range of fields, including computer science, engineering, and telecommunications.\\n\\nComputer science: The theory of information is used in computer science to design efficient algorithms, data structures and communication protocols.\\n\\nEngineering: The theory of information is used in engineering to design systems that are resistant to noise and error.\\n\\nTelecommunications: The theory of information is used in telecommunications to design efficient coding and decoding schemes\\n\\n4. What is the role of the theory of information in computer science?\\n\\n", "temperature": 1, "max_tokens": 128, "top_p": 1, "frequency_penalty": 0, "presence_penalty": 0, "n": 1, "stop": ["5.", "4."], "echo": false}' message='Post details'
[2022-11-17 23:18:19,089] DEBUG - https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 533
[2022-11-17 23:18:19,089] INFO - message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1647 request_id=71c143ea1d591928a3eabcc25d5f06b4 response_code=200
[2022-11-17 23:18:19,089] INFO - message='Request to OpenAI API' method=post path=https://api.openai.com/v1/edits
[2022-11-17 23:18:19,090] DEBUG - api_version=None data='{"model": "text-davinci-edit-001", "input": "The theory of information plays a fundamental role in computer science. It is used to design efficient algorithms, data structures, and communication protocols. Moreover, the theory of information is used to study the way humans process and communicate information.", "instruction": "Replace all non-characters with their spoken counterpart. And fix grammar.", "temperature": 0, "top_p": 1}' message='Post details'
[2022-11-17 23:18:21,707] DEBUG - https://api.openai.com:443 "POST /v1/edits HTTP/1.1" 200 516
[2022-11-17 23:18:21,707] INFO - message='OpenAI API response' path=https://api.openai.com/v1/edits processing_ms=2463 request_id=43611c94828184cd259767d47b010e33 response_code=200
[2022-11-17 23:18:21,707] INFO - message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
[2022-11-17 23:18:21,707] DEBUG - api_version=None data='{"model": "text-davinci-002", "prompt": "Expand greatly upon the topic of The Theory of Information: What Is It and What Does It Mean for You? in the context of computer science summarised for a 9th grader:\\n\\n1. What is the theory of information?\\n\\nThe theory of information is a branch of computer science that deals with the quantification, storage, and communication of information.\\nIt is also concerned with the way these elements are used in different settings, including computing, engineering, and telecommunications.\\nThe theory of information is a branch of computer science that deals with the quantification, storage, and communication of information.\\nIt is also concerned with the way these elements are used in different settings, including computing, engineering, and telecommunications.\\n\\n2. What are the basic concepts of the theory of information?\\n\\nThe theory of information deals with the concepts of data, information, and knowledge:\\n\\n* Data is a sequence of symbols that can be interpreted as meaning.\\n* Information is data that has been processed in such a way that it is meaningful.\\n* Knowledge is information that is organized in a way that it can be used to solve problems or make decisions.\\n\\n3. What are the applications of the theory of information?\\n\\nThe theory of information has applications in a wide range of fields, including computer science, engineering, and telecommunications.\\n\\nComputer science: The theory of information is used in computer science to design efficient algorithms, data structures and communication protocols.\\n\\nEngineering: The theory of information is used in engineering to design systems that are resistant to noise and error.\\n\\nTelecommunications: The theory of information is used in telecommunications to design efficient coding and decoding schemes\\n\\n4. What is the role of the theory of information in computer science?\\n\\nThe theory of information plays a fundamental role in computer science. It is used to design efficient algorithms, data structures, and communication protocols. Moreover, the theory of information is used to study the way humans process and communicate information. \\n\\nThe theory of information is also used to study the way humans process and communicate information.\\n\\n5. What are the challenges of the theory of information?\\n\\n", "temperature": 1, "max_tokens": 128, "top_p": 1, "frequency_penalty": 0, "presence_penalty": 0, "n": 1, "stop": ["6.", "5."], "echo": false}' message='Post details'
[2022-11-17 23:18:23,597] DEBUG - https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 488
[2022-11-17 23:18:23,598] INFO - message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1743 request_id=d499b3238ac334e4cb13c938feb9243f response_code=200
[2022-11-17 23:18:23,598] INFO - message='Request to OpenAI API' method=post path=https://api.openai.com/v1/edits
[2022-11-17 23:18:23,598] DEBUG - api_version=None data='{"model": "text-davinci-edit-001", "input": "One challenge of the theory of information is to find ways to efficiently store and retrieve vast amounts of data. Another challenge is to design efficient coding and decoding schemes that can be used in telecommunications.", "instruction": "Replace all non-characters with their spoken counterpart. And fix grammar.", "temperature": 0, "top_p": 1}' message='Post details'
[2022-11-17 23:18:27,535] DEBUG - https://api.openai.com:443 "POST /v1/edits HTTP/1.1" 200 800
[2022-11-17 23:18:27,535] INFO - message='OpenAI API response' path=https://api.openai.com/v1/edits processing_ms=3790 request_id=8bc02bf0bfe82319485d5b6fa9c5ed10 response_code=200
[2022-11-17 23:18:27,536] DEBUG - Starting new HTTPS connection (1): www.googleapis.com:443
[2022-11-17 23:18:27,690] DEBUG - https://www.googleapis.com:443 "GET /youtube/v3/playlists?part=id&id=UC_x5XG1OV2P6uZZ5FSM9Ttw&key=AIzaSyDfv2ISoNjVh2oX2JRJUQ1loS-voHH3GlI&maxResults=2 HTTP/1.1" 200 None
[2022-11-17 23:18:27,693] DEBUG - Starting new HTTPS connection (1): www.googleapis.com:443
[2022-11-17 23:18:28,364] DEBUG - https://www.googleapis.com:443 "GET /youtube/v3/search?part=snippet&type=video&maxResults=50&order=relevance&key=AIzaSyDfv2ISoNjVh2oX2JRJUQ1loS-voHH3GlI&q=The%20Theory%20of%20Information:%20What%20Is%20It%20and%20What%20Does%20It%20Mean%20for%20You?&publishedAfter=2000-01-01T00:00:00Z&publishedBefore=3000-01-01T00:00:00Z HTTP/1.1" 200 None
[2022-11-17 23:18:28,371] DEBUG - Starting new HTTPS connection (1): www.googleapis.com:443
[2022-11-17 23:18:28,428] DEBUG - https://www.googleapis.com:443 "GET /youtube/v3/videos?key=AIzaSyDfv2ISoNjVh2oX2JRJUQ1loS-voHH3GlI&fields=items(snippet(description,tags))&part=snippet&id=d9alWZRzBWk HTTP/1.1" 200 None
[2022-11-17 23:18:28,431] DEBUG - Starting new HTTPS connection (1): www.googleapis.com:443
[2022-11-17 23:18:28,547] DEBUG - https://www.googleapis.com:443 "GET /youtube/v3/videos?key=AIzaSyDfv2ISoNjVh2oX2JRJUQ1loS-voHH3GlI&fields=items(snippet(description,tags))&part=snippet&id=b6VdGHSV6qg HTTP/1.1" 200 None
[2022-11-17 23:18:28,549] DEBUG - Starting new HTTPS connection (1): www.googleapis.com:443
[2022-11-17 23:18:28,596] DEBUG - https://www.googleapis.com:443 "GET /youtube/v3/videos?key=AIzaSyDfv2ISoNjVh2oX2JRJUQ1loS-voHH3GlI&fields=items(snippet(description,tags))&part=snippet&id=ltGrrT_N4Ks HTTP/1.1" 200 None
[2022-11-17 23:18:28,598] DEBUG - Starting new HTTPS connection (1): www.googleapis.com:443
[2022-11-17 23:18:28,648] DEBUG - https://www.googleapis.com:443 "GET /youtube/v3/videos?key=AIzaSyDfv2ISoNjVh2oX2JRJUQ1loS-voHH3GlI&fields=items(snippet(description,tags))&part=snippet&id=vSrJJLg8gkk HTTP/1.1" 200 None
[2022-11-17 23:18:28,651] DEBUG - Starting new HTTPS connection (1): www.googleapis.com:443
[2022-11-17 23:18:28,702] DEBUG - https://www.googleapis.com:443 "GET /youtube/v3/videos?key=AIzaSyDfv2ISoNjVh2oX2JRJUQ1loS-voHH3GlI&fields=items(snippet(description,tags))&part=snippet&id=XYugyhoohhY HTTP/1.1" 200 None
[2022-11-17 23:18:28,704] DEBUG - Starting new HTTPS connection (1): www.googleapis.com:443
[2022-11-17 23:18:28,755] DEBUG - https://www.googleapis.com:443 "GET /youtube/v3/videos?key=AIzaSyDfv2ISoNjVh2oX2JRJUQ1loS-voHH3GlI&fields=items(snippet(description,tags))&part=snippet&id=BCiZc0n6COY HTTP/1.1" 200 None
[2022-11-17 23:18:28,759] DEBUG - Starting new HTTPS connection (1): www.googleapis.com:443
[2022-11-17 23:18:28,829] DEBUG - https://www.googleapis.com:443 "GET /youtube/v3/videos?key=AIzaSyDfv2ISoNjVh2oX2JRJUQ1loS-voHH3GlI&fields=items(snippet(description,tags))&part=snippet&id=r_Y3utIeTPg HTTP/1.1" 200 None
[2022-11-17 23:18:28,832] DEBUG - Starting new HTTPS connection (1): www.googleapis.com:443
[2022-11-17 23:18:28,882] DEBUG - https://www.googleapis.com:443 "GET /youtube/v3/videos?key=AIzaSyDfv2ISoNjVh2oX2JRJUQ1loS-voHH3GlI&fields=items(snippet(description,tags))&part=snippet&id=X40ft1Lt1f0 HTTP/1.1" 200 None
[2022-11-17 23:18:28,884] DEBUG - Starting new HTTPS connection (1): www.googleapis.com:443
[2022-11-17 23:18:28,930] DEBUG - https://www.googleapis.com:443 "GET /youtube/v3/videos?key=AIzaSyDfv2ISoNjVh2oX2JRJUQ1loS-voHH3GlI&fields=items(snippet(description,tags))&part=snippet&id=PtmzfpV6CDE HTTP/1.1" 200 None
[2022-11-17 23:18:28,932] DEBUG - Starting new HTTPS connection (1): www.googleapis.com:443
[2022-11-17 23:18:28,977] DEBUG - https://www.googleapis.com:443 "GET /youtube/v3/videos?key=AIzaSyDfv2ISoNjVh2oX2JRJUQ1loS-voHH3GlI&fields=items(snippet(description,tags))&part=snippet&id=eOvTS3pPheE HTTP/1.1" 200 None
[2022-11-17 23:18:28,980] DEBUG - Starting new HTTPS connection (1): www.googleapis.com:443
[2022-11-17 23:18:29,028] DEBUG - https://www.googleapis.com:443 "GET /youtube/v3/videos?key=AIzaSyDfv2ISoNjVh2oX2JRJUQ1loS-voHH3GlI&fields=items(snippet(description,tags))&part=snippet&id=-7o3bVInA2A HTTP/1.1" 200 None
[2022-11-17 23:18:29,031] DEBUG - Starting new HTTPS connection (1): www.googleapis.com:443
[2022-11-17 23:18:29,079] DEBUG - https://www.googleapis.com:443 "GET /youtube/v3/videos?key=AIzaSyDfv2ISoNjVh2oX2JRJUQ1loS-voHH3GlI&fields=items(snippet(description,tags))&part=snippet&id=XL07WEc2TRI HTTP/1.1" 200 None
[2022-11-17 23:18:29,082] DEBUG - Starting new HTTPS connection (1): www.googleapis.com:443
[2022-11-17 23:18:29,127] DEBUG - https://www.googleapis.com:443 "GET /youtube/v3/videos?key=AIzaSyDfv2ISoNjVh2oX2JRJUQ1loS-voHH3GlI&fields=items(snippet(description,tags))&part=snippet&id=B6kreUskcpo HTTP/1.1" 200 None
[2022-11-17 23:18:29,129] DEBUG - Starting new HTTPS connection (1): www.googleapis.com:443
[2022-11-17 23:18:29,174] DEBUG - https://www.googleapis.com:443 "GET /youtube/v3/videos?key=AIzaSyDfv2ISoNjVh2oX2JRJUQ1loS-voHH3GlI&fields=items(snippet(description,tags))&part=snippet&id=zLtjrQXHvHk HTTP/1.1" 200 None
[2022-11-17 23:18:29,178] DEBUG - Starting new HTTPS connection (1): www.googleapis.com:443
[2022-11-17 23:18:29,227] DEBUG - https://www.googleapis.com:443 "GET /youtube/v3/videos?key=AIzaSyDfv2ISoNjVh2oX2JRJUQ1loS-voHH3GlI&fields=items(snippet(description,tags))&part=snippet&id=iyOzSzcDwg8 HTTP/1.1" 200 None
[2022-11-17 23:18:29,230] DEBUG - Starting new HTTPS connection (1): www.googleapis.com:443
[2022-11-17 23:18:29,274] DEBUG - https://www.googleapis.com:443 "GET /youtube/v3/videos?key=AIzaSyDfv2ISoNjVh2oX2JRJUQ1loS-voHH3GlI&fields=items(snippet(description,tags))&part=snippet&id=iUsOCR1KKms HTTP/1.1" 200 None
[2022-11-17 23:18:29,277] DEBUG - Starting new HTTPS connection (1): www.googleapis.com:443
[2022-11-17 23:18:29,330] DEBUG - https://www.googleapis.com:443 "GET /youtube/v3/videos?key=AIzaSyDfv2ISoNjVh2oX2JRJUQ1loS-voHH3GlI&fields=items(snippet(description,tags))&part=snippet&id=JagpGoRi-SA HTTP/1.1" 200 None
[2022-11-17 23:18:29,332] DEBUG - Starting new HTTPS connection (1): www.googleapis.com:443
[2022-11-17 23:18:29,376] DEBUG - https://www.googleapis.com:443 "GET /youtube/v3/videos?key=AIzaSyDfv2ISoNjVh2oX2JRJUQ1loS-voHH3GlI&fields=items(snippet(description,tags))&part=snippet&id=LGd8p-GSLgY HTTP/1.1" 200 None
[2022-11-17 23:18:29,380] DEBUG - Starting new HTTPS connection (1): www.googleapis.com:443
[2022-11-17 23:18:29,428] DEBUG - https://www.googleapis.com:443 "GET /youtube/v3/videos?key=AIzaSyDfv2ISoNjVh2oX2JRJUQ1loS-voHH3GlI&fields=items(snippet(description,tags))&part=snippet&id=GyZMe7CdqdU HTTP/1.1" 200 None
[2022-11-17 23:18:29,431] DEBUG - Starting new HTTPS connection (1): www.googleapis.com:443
[2022-11-17 23:18:29,486] DEBUG - https://www.googleapis.com:443 "GET /youtube/v3/videos?key=AIzaSyDfv2ISoNjVh2oX2JRJUQ1loS-voHH3GlI&fields=items(snippet(description,tags))&part=snippet&id=jJ2Jrz_aFaQ HTTP/1.1" 200 None
[2022-11-17 23:18:29,489] DEBUG - Starting new HTTPS connection (1): www.googleapis.com:443
[2022-11-17 23:18:29,533] DEBUG - https://www.googleapis.com:443 "GET /youtube/v3/videos?key=AIzaSyDfv2ISoNjVh2oX2JRJUQ1loS-voHH3GlI&fields=items(snippet(description,tags))&part=snippet&id=nE1rKczA2kk HTTP/1.1" 200 None
[2022-11-17 23:18:29,536] DEBUG - Starting new HTTPS connection (1): www.googleapis.com:443
[2022-11-17 23:18:29,582] DEBUG - https://www.googleapis.com:443 "GET /youtube/v3/videos?key=AIzaSyDfv2ISoNjVh2oX2JRJUQ1loS-voHH3GlI&fields=items(snippet(description,tags))&part=snippet&id=oien-7PNLEM HTTP/1.1" 200 None
[2022-11-17 23:18:29,583] DEBUG - Starting new HTTPS connection (1): www.googleapis.com:443
[2022-11-17 23:18:29,675] DEBUG - https://www.googleapis.com:443 "GET /youtube/v3/videos?key=AIzaSyDfv2ISoNjVh2oX2JRJUQ1loS-voHH3GlI&fields=items(snippet(description,tags))&part=snippet&id=B3y0RsVCyrw HTTP/1.1" 200 None
[2022-11-17 23:18:29,678] DEBUG - Starting new HTTPS connection (1): www.googleapis.com:443
[2022-11-17 23:18:29,729] DEBUG - https://www.googleapis.com:443 "GET /youtube/v3/videos?key=AIzaSyDfv2ISoNjVh2oX2JRJUQ1loS-voHH3GlI&fields=items(snippet(description,tags))&part=snippet&id=LFKZLXVO-Dg HTTP/1.1" 200 None
[2022-11-17 23:18:29,731] DEBUG - Starting new HTTPS connection (1): www.googleapis.com:443
[2022-11-17 23:18:29,795] DEBUG - https://www.googleapis.com:443 "GET /youtube/v3/videos?key=AIzaSyDfv2ISoNjVh2oX2JRJUQ1loS-voHH3GlI&fields=items(snippet(description,tags))&part=snippet&id=tzPBeKmJ94Y HTTP/1.1" 200 None
[2022-11-17 23:18:29,798] DEBUG - Hashtags ['#youcanlearnanything', '#drivingtest', '#drivinglessons', '#learningtodrive', '#youcanlearnanything', '#deeplearning', '#shorts', '#margotrobbie', '#emmamackey', '#conspiracy', '#thinkdrivingschool', '#drivingtheory', '#driving_test', '#uk_driving_test', '#driving_license']
[2022-11-17 23:18:29,798] DEBUG - Top Hashtags ['#youcanlearnanything', '#drivingtest', '#drivinglessons', '#learningtodrive', '#deeplearning']
[2022-11-17 23:18:29,798] DEBUG - Tags ['computers', 'computerphile', 'computer', 'science', 'computers', 'computerphile', 'computer', 'science', 'driving lessons', 'driving lessons uk', 'uk driving test', 'learning to drive', 'information theory (field of study)', 'khan academy', 'philosophy', 'wireless philosophy', 'wiphi', 'video', 'jennifer nagel', 'university of toronto', 'epistemology', 'theory of knowledge', 'certainty', 'belief', 'truth', 'course', 'international baccalaureate', 'measure information', 'information', 'bits', 'nyquist', 'hartley', 'shannon', 'quantify information', 'information theory', 'bit', 'claude shannon (author)', 'artoftheproblem', 'languageofcoins', 'aqa', 'a level', 'sociology', 'revision', 'study', 'theory', 'methods', 'theory and methods', 'exams', 'qanon', 'protocols of the elders of zion', 'adrenochrome', 'blood libel', 'conspiracy theory', 'antisemitisim', 'judaism', 'jewish', 'cults', 'cult', 'documentary', 'documentaries', 'docs', 'interview', 'culture', 'lifestyle', 'world', 'exclusive', 'independent', 'underground', 'videos', 'journalism', 'vice guide', 'vice.com', 'vice', 'vice magazine', 'vice mag', 'vice videos', 'film', 'short film', 'movies', 'vwn', 'vice world news', 'world news', 'news', 'stanford', 'stanford university', 'seminar', 'ee380', 'naftali tishby', 'hebrew university', 'computer science', 'machine learning', 'deep neural network', 'learning theory', 'information bottleneck framework', 'the minimum information principle', 'bbc', 'bbc news', 'news', 'einstein', 'albert einstein', 'einstein theory', 'einstein theory explained', 'einstein theories explained', 'theory of relativity', 'theory of general relativity', 'the eclipse', 'cima', 'cima ba4', 'cima certificate', 'cima theory', 'agency theory', 'cima certificate theory', 'cima ba4 theory', 'cima certificate ba4', 'talks at google', 'ted talks', 'inspirational talks', 'educational talks', 'the information: a history', 'a theory', 'a flood', 'james gleick', 'james gleick chaos', 'james gleick time travel', 'james gleick big think', 'time travel', 'flow theory', 'student engagement', 'creativity', 'driving theory test', 'driving theory test revision', 'uk theory test', 'uk road markings', 'box junctions explained', 'road markings explained', 'uk road markings and what they mean', 'red routes', 'single yellow vs double yellow lines', 'road markings theory test', 'road markings at roundabouts', 'road markings at junctions', 'consciousness', 'cbmm', 'neuroscience', 'allen institute for brain science', 'margot robbie', 'margot robbie shorts', 'margot robbie short', 'margot robbie emma mackey', 'margot robbie emma mackey same person', 'margot robbie conspiracy', 'emma mackey', 'emma mackey and margot robbie', 'driving theory test', 'uk theory testy', 'uk theory hard questions', 'how to pass your theory test', 'think driving school', 'tricky theory questions', 'hard theory questions', 'pass your theory test', 'theory test tips', 'theory test hard questions', 'isolation quiz', 'driving quiz', 'theory quiz', 'quiz', 'hard quiz', 'theory test questions', 'uk theory test', 'driving test', 'social work', 'siobhan maclean', 'social work theory', 'models of social work', 'driving theory test uk 2021 - driving theory test dvsa 50 questions and answers #1', 'dvsa theory test kit', 'dvsa practical test', 'dvsa theory test for car drivers', 'dvsa test', 'dvsa theory', 'dvsa theory test', 'theory test', 'driving test', 'dvsa driving test', 'dvsa driving theory', 'mock theory test', 'practice theory test', 'drivers license', 'driving theory test uk 2021', 'theory test 2021 uk', 'practical driving test uk 2021 driving', 'driving theory test 2022', 'driving theory test 2021', 'huffman_event', 'graph theory', 'graph theory intro', 'graph theory introduction', 'graph theory terminology', 'graph theory definition', 'graphs computer science', 'graph theory computer science', 'graph theory guide', 'graph theory beginners', 'uproxx', 'uproxx reports', 'in theory', 'fandemonium', 'hitfix', 'prometheus', 'alien', 'alien: covenant', 'covenant', 'ridley scott', 'michael fassbender', 'prometheus movie', 'prometheus theories', 'prometheus 2 theories']
[2022-11-17 23:18:29,804] DEBUG - Top Tags ['computers', 'computerphile', 'computer', 'science', 'news', 'driving theory test', 'uk theory test', 'driving test', 'driving lessons', 'driving lessons uk', 'uk driving test', 'learning to drive', 'information theory (field of study)', 'khan academy']
[2022-11-17 23:18:41,138] DEBUG - processing 24 tts sections
[2022-11-17 23:18:41,138] DEBUG - Text-to-speech: What is the theory of information?
[2022-11-17 23:18:41,138] DEBUG - [#1] Subsection: What is the theory of information?
[2022-11-17 23:18:58,903] DEBUG - Text-to-speech: The theory of information is a branch of computer science that deals with the quantification, storage, and communication of information.
It is also concerned with the way these elements are used in different settings, including computing, engineering, and telecommunications.
The theory of information is a branch of computer science that deals with the quantification, storage, and communication of information.
It is also concerned with the way these elements are used in different settings, including computing, engineering, and telecommunications.
[2022-11-17 23:18:58,903] DEBUG - [#1] Subsection: The theory of information is a branch of computer science that deals with the quantification, storage, and communication of information.
It is also concerned with the way these elements are used in different settings, including computing, engineering, and telecommunications.
The theory of information is a branch of computer science that deals with the quantification, storage, and communication of information.
It is also concerned with the way these elements are used in different settings, including computing, engineering, and telecommunications.
[2022-11-17 23:19:39,693] DEBUG - [#2] Subsection: The theory of information is a branch of computer science that deals with the quantification, storage, and communication of information.
It is also concerned with the way these elements are used in different settings, including computing, engineering, and telecommunications.
The theory of information is a branch of computer science that deals with the quantification, storage, and communication of information.
It is also concerned with the way these elements are used in different settings, including computing, engineering, and telecommunications.
[2022-11-17 23:20:21,536] DEBUG - [#3] Subsection: The theory of information is a branch of computer science that deals with the quantification, storage, and communication of information.
It is also concerned with the way these elements are used in different settings, including computing, engineering, and telecommunications.
The theory of information is a branch of computer science that deals with the quantification, storage, and communication of information.
It is also concerned with the way these elements are used in different settings, including computing, engineering, and telecommunications.
[2022-11-17 23:21:02,400] DEBUG - [#4] Subsection: The theory of information is a branch of computer science that deals with the quantification, storage, and communication of information.
It is also concerned with the way these elements are used in different settings, including computing, engineering, and telecommunications.
The theory of information is a branch of computer science that deals with the quantification, storage, and communication of information.
It is also concerned with the way these elements are used in different settings, including computing, engineering, and telecommunications.
[2022-11-17 23:21:43,602] DEBUG - Text-to-speech: What are the basic concepts of the theory of information?
[2022-11-17 23:21:43,603] DEBUG - [#1] Subsection: What are the basic concepts of the theory of information?
[2022-11-17 23:22:04,712] DEBUG - Text-to-speech: The theory of information deals with the concepts of data, information, and knowledge:

* Data is a sequence of symbols that can be interpreted as meaning.
* Information is data that has been processed in such a way that it is meaningful.
* Knowledge is information that is organized in a way that it can be used to solve problems or make decisions.
[2022-11-17 23:22:04,712] DEBUG - [#1] Subsection: The theory of information deals with the concepts of data, information, and knowledge:

* Data is a sequence of symbols that can be interpreted as meaning.
* Information is data that has been processed in such a way that it is meaningful.
* Knowledge is information that is organized in a way that it can be used to solve problems or make decisions.
[2022-11-17 23:22:53,198] DEBUG - [#2] Subsection: The theory of information deals with the concepts of data, information, and knowledge:

* Data is a sequence of symbols that can be interpreted as meaning.
* Information is data that has been processed in such a way that it is meaningful.
* Knowledge is information that is organized in a way that it can be used to solve problems or make decisions.
[2022-11-17 23:23:17,865] DEBUG - [#3] Subsection: The theory of information deals with the concepts of data, information, and knowledge:

* Data is a sequence of symbols that can be interpreted as meaning.
* Information is data that has been processed in such a way that it is meaningful.
* Knowledge is information that is organized in a way that it can be used to solve problems or make decisions.
[2022-11-17 23:23:47,089] DEBUG - Text-to-speech: What are the applications of the theory of information?
[2022-11-17 23:23:47,089] DEBUG - [#1] Subsection: What are the applications of the theory of information?
[2022-11-17 23:24:04,544] DEBUG - Text-to-speech: The theory of information has applications in a wide range of fields, including computer science, engineering, and telecommunications.

Computer science: The theory of information is used in computer science to design efficient algorithms, data structures and communication protocols.

Engineering: The theory of information is used in engineering to design systems that are resistant to noise and error.

Telecommunications: The theory of information is used in telecommunications to design efficient coding and decoding schemes
[2022-11-17 23:24:04,544] DEBUG - [#1] Subsection: The theory of information has applications in a wide range of fields, including computer science, engineering, and telecommunications.

Computer science: The theory of information is used in computer science to design efficient algorithms, data structures and communication protocols.

Engineering: The theory of information is used in engineering to design systems that are resistant to noise and error.

Telecommunications: The theory of information is used in telecommunications to design efficient coding and decoding schemes
[2022-11-17 23:24:41,360] DEBUG - [#2] Subsection: The theory of information has applications in a wide range of fields, including computer science, engineering, and telecommunications.

Computer science: The theory of information is used in computer science to design efficient algorithms, data structures and communication protocols.

Engineering: The theory of information is used in engineering to design systems that are resistant to noise and error.

Telecommunications: The theory of information is used in telecommunications to design efficient coding and decoding schemes
[2022-11-17 23:25:24,137] DEBUG - [#3] Subsection: The theory of information has applications in a wide range of fields, including computer science, engineering, and telecommunications.

Computer science: The theory of information is used in computer science to design efficient algorithms, data structures and communication protocols.

Engineering: The theory of information is used in engineering to design systems that are resistant to noise and error.

Telecommunications: The theory of information is used in telecommunications to design efficient coding and decoding schemes
[2022-11-17 23:25:57,014] DEBUG - [#4] Subsection: The theory of information has applications in a wide range of fields, including computer science, engineering, and telecommunications.

Computer science: The theory of information is used in computer science to design efficient algorithms, data structures and communication protocols.

Engineering: The theory of information is used in engineering to design systems that are resistant to noise and error.

Telecommunications: The theory of information is used in telecommunications to design efficient coding and decoding schemes
[2022-11-17 23:26:32,787] DEBUG - Text-to-speech: What is the role of the theory of information in computer science?
[2022-11-17 23:26:32,787] DEBUG - [#1] Subsection: What is the role of the theory of information in computer science?
[2022-11-17 23:26:52,841] DEBUG - Text-to-speech: The theory of information plays a fundamental role in computer science. It is used to design efficient algorithms, data structures, and communication protocols. Moreover, the theory of information is used to study the way humans process and communicate information. 

The theory of information is also used to study the way humans process and communicate information.
[2022-11-17 23:26:52,841] DEBUG - [#1] Subsection: The theory of information plays a fundamental role in computer science. It is used to design efficient algorithms, data structures, and communication protocols. Moreover, the theory of information is used to study the way humans process and communicate information. 

The theory of information is also used to study the way humans process and communicate information.
[2022-11-17 23:27:14,900] DEBUG - [#2] Subsection: The theory of information plays a fundamental role in computer science. It is used to design efficient algorithms, data structures, and communication protocols. Moreover, the theory of information is used to study the way humans process and communicate information. 

The theory of information is also used to study the way humans process and communicate information.
[2022-11-17 23:27:41,926] DEBUG - [#3] Subsection: The theory of information plays a fundamental role in computer science. It is used to design efficient algorithms, data structures, and communication protocols. Moreover, the theory of information is used to study the way humans process and communicate information. 

The theory of information is also used to study the way humans process and communicate information.
[2022-11-17 23:28:11,830] DEBUG - [#4] Subsection: The theory of information plays a fundamental role in computer science. It is used to design efficient algorithms, data structures, and communication protocols. Moreover, the theory of information is used to study the way humans process and communicate information. 

The theory of information is also used to study the way humans process and communicate information.
[2022-11-17 23:28:42,508] DEBUG - Text-to-speech: What are the challenges of the theory of information?
[2022-11-17 23:28:42,508] DEBUG - [#1] Subsection: What are the challenges of the theory of information?
[2022-11-17 23:28:59,686] DEBUG - Text-to-speech: One challenge of the theory of information is to find ways to efficiently store and retrieve vast amounts of data.
Another challenge is to design efficient coding and decoding schemes that can be used in telecommunications.
The theory of information is also concerned with the amount of information that can be stored in a given space, whether that space is a region in the human brain, a computer memory, or a communication channel.
The theory of information also deals with the amount of information that is needed to perform various tasks, such as image reconstruction, lossless data compression, and reliable communication through noisy channels.
[2022-11-17 23:28:59,686] DEBUG - [#1] Subsection: One challenge of the theory of information is to find ways to efficiently store and retrieve vast amounts of data.
Another challenge is to design efficient coding and decoding schemes that can be used in telecommunications.
The theory of information is also concerned with the amount of information that can be stored in a given space, whether that space is a region in the human brain, a computer memory, or a communication channel.
The theory of information also deals with the amount of information that is needed to perform various tasks, such as image reconstruction, lossless data compression, and reliable communication through noisy channels.
[2022-11-17 23:29:30,034] DEBUG - [#2] Subsection: One challenge of the theory of information is to find ways to efficiently store and retrieve vast amounts of data.
Another challenge is to design efficient coding and decoding schemes that can be used in telecommunications.
The theory of information is also concerned with the amount of information that can be stored in a given space, whether that space is a region in the human brain, a computer memory, or a communication channel.
The theory of information also deals with the amount of information that is needed to perform various tasks, such as image reconstruction, lossless data compression, and reliable communication through noisy channels.
[2022-11-17 23:30:01,329] DEBUG - [#3] Subsection: One challenge of the theory of information is to find ways to efficiently store and retrieve vast amounts of data.
Another challenge is to design efficient coding and decoding schemes that can be used in telecommunications.
The theory of information is also concerned with the amount of information that can be stored in a given space, whether that space is a region in the human brain, a computer memory, or a communication channel.
The theory of information also deals with the amount of information that is needed to perform various tasks, such as image reconstruction, lossless data compression, and reliable communication through noisy channels.
[2022-11-17 23:30:51,775] DEBUG - [#4] Subsection: One challenge of the theory of information is to find ways to efficiently store and retrieve vast amounts of data.
Another challenge is to design efficient coding and decoding schemes that can be used in telecommunications.
The theory of information is also concerned with the amount of information that can be stored in a given space, whether that space is a region in the human brain, a computer memory, or a communication channel.
The theory of information also deals with the amount of information that is needed to perform various tasks, such as image reconstruction, lossless data compression, and reliable communication through noisy channels.
[2022-11-17 23:31:47,119] CRITICAL - Failed to generate audio
[2022-11-17 23:31:47,119] INFO - Getting video script.
[2022-11-17 23:31:47,119] INFO - message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
[2022-11-17 23:31:47,119] DEBUG - api_version=None data='{"model": "text-davinci-002", "prompt": "Write a list of unique and interesting keywords relating to basic computer science:\\n\\n-", "temperature": 1, "max_tokens": 128, "top_p": 1, "frequency_penalty": 0, "presence_penalty": 0, "n": 1, "stop": "", "echo": false}' message='Post details'
[2022-11-17 23:31:47,121] DEBUG - Resetting dropped connection: api.openai.com
[2022-11-17 23:31:49,202] DEBUG - https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 431
[2022-11-17 23:31:49,202] INFO - message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1669 request_id=49007cae9fb3b6b3dd49ad2581402f73 response_code=200
[2022-11-17 23:31:49,202] INFO - message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
[2022-11-17 23:31:49,202] DEBUG - api_version=None data='{"model": "text-curie-001", "prompt": "Write a list of 5 interesting beginner topics on where programming is used in the context of computer science:\\n-", "temperature": 0.7, "max_tokens": 256, "top_p": 1, "frequency_penalty": 0, "presence_penalty": 0, "n": 1, "stop": "", "echo": false}' message='Post details'
[2022-11-17 23:31:49,583] DEBUG - https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 384
[2022-11-17 23:31:49,584] INFO - message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=225 request_id=1198b628ce294f7f09c5ce4b5c6dde7e response_code=200
[2022-11-17 23:31:49,584] INFO - message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
[2022-11-17 23:31:49,584] DEBUG - api_version=None data='{"model": "text-davinci-002", "prompt": "Write a short, unique and interesting title relating to the theory of Software engineering in the form of a video essay title without involving numbers:", "temperature": 1, "max_tokens": 20, "top_p": 1, "frequency_penalty": 0, "presence_penalty": 0, "n": 1, "stop": "", "echo": false}' message='Post details'
[2022-11-17 23:31:50,730] DEBUG - https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 306
[2022-11-17 23:31:50,730] INFO - message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=849 request_id=98bccf1e5901cd1b168cee734670b060 response_code=200
[2022-11-17 23:31:50,734] DEBUG - Keyword programming, Topics ['Data structures', 'Software engineering', 'Computer security', 'Computer software architecture', 'Computer programming languages'], Topic How to be a Successful Software Engineer
[2022-11-17 23:31:50,735] INFO - message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
[2022-11-17 23:31:50,735] DEBUG - api_version=None data='{"model": "text-davinci-002", "prompt": "Write a list of beginner topics relating to what is How to be a Successful Software Engineer in the context of computer science:\\n\\n", "temperature": 0, "max_tokens": 256, "top_p": 1, "frequency_penalty": 0, "presence_penalty": 0, "n": 1, "stop": "", "echo": false}' message='Post details'
[2022-11-17 23:31:53,689] DEBUG - https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 649
[2022-11-17 23:31:53,689] INFO - message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=2803 request_id=54a39ae8a7296ea53e1949ebcadb68a3 response_code=200
[2022-11-17 23:31:53,690] DEBUG - topic: How to be a Successful Software Engineer, sub topics 
-How to get started in software engineering
-The basics of software engineering
-What software engineers do
-The skills you need to be a successful software engineer
-The education and training you need to be a successful software engineer
-The different types of software engineering
-How to find a job as a software engineer
-The salary and job outlook for software engineers
[2022-11-17 23:31:53,690] DEBUG - getting summary for topic
[2022-11-17 23:31:53,690] INFO - message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
[2022-11-17 23:31:53,690] DEBUG - api_version=None data='{"model": "text-curie-001", "prompt": "Write a summary for the following topic in the form of a youtube description in the context of computer science:\\n\\ntopic: How to be a Successful Software Engineer\\n\\nsummary:", "temperature": 0, "max_tokens": 256, "top_p": 1, "frequency_penalty": 0, "presence_penalty": 0, "n": 1, "stop": "", "echo": false}' message='Post details'
[2022-11-17 23:31:54,308] DEBUG - https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 452
[2022-11-17 23:31:54,309] INFO - message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=434 request_id=288152699085ef0046b420e3fd93125f response_code=200
[2022-11-17 23:31:54,309] INFO - message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
[2022-11-17 23:31:54,309] DEBUG - api_version=None data='{"model": "text-davinci-002", "prompt": "Expand greatly upon the topic of How to be a Successful Software Engineer in the context of computer science summarised for a 9th grader:\\n\\n1. How to get started in software engineering\\n\\n", "temperature": 1, "max_tokens": 128, "top_p": 1, "frequency_penalty": 0, "presence_penalty": 0, "n": 1, "stop": ["2.", "1."], "echo": false}' message='Post details'
[2022-11-17 23:31:59,049] DEBUG - https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 735
[2022-11-17 23:31:59,049] INFO - message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=4595 request_id=1eb2a596f908282b84d9c794d4615cef response_code=200
[2022-11-17 23:31:59,051] INFO - message='Request to OpenAI API' method=post path=https://api.openai.com/v1/edits
[2022-11-17 23:31:59,051] DEBUG - api_version=None data='{"model": "text-davinci-edit-001", "input": "There are many ways to get started in software engineering. One way is to go to college and get a degree in computer science. This will give you the basic knowledge you need to get started in the field.\\n\\nAnother way to get started is to learn how to code on your own. There are many resources available online and in libraries that can help you learn how to code. Once you have learned how to code, you can start looking for entry-level software engineering jobs.", "instruction": "Replace all non-characters with their spoken counterpart. And fix grammar.", "temperature": 0, "top_p": 1}' message='Post details'
[2022-11-17 23:32:47,405] DEBUG - https://api.openai.com:443 "POST /v1/edits HTTP/1.1" 200 6842
[2022-11-17 23:32:47,405] INFO - message='OpenAI API response' path=https://api.openai.com/v1/edits processing_ms=48211 request_id=729f6581f020b2079e79a44f5d02df07 response_code=200
[2022-11-17 23:32:47,406] INFO - message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
[2022-11-17 23:32:47,407] DEBUG - api_version=None data='{"model": "text-davinci-002", "prompt": "Expand greatly upon the topic of How to be a Successful Software Engineer in the context of computer science summarised for a 9th grader:\\n\\n1. How to get started in software engineering\\n\\nThere are many ways to get started in software engineering. One way is to go to college and get a degree in computer science. This will give you the basic knowledge you need to get started in the field. Another way to get started is to learn how to code on your own. There are many resources available online and in libraries that can help you learn how to code. Once you have learned how to code, you can start looking for entrylevel software engineering jobs.\\n\\nThe first thing you need to do is find a job. You can do this by looking online or in the newspaper. You can also ask your friends and family if they know of any openings. Once you have found a job, you will need to apply for it. You can do this by filling out an application form and sending it in with your resume.\\n\\nOnce you have been accepted into the company, you will need to learn how to code. You can do this by taking classes at a local college or university. You can also learn how to code online through websites such as Code Academy.\\n\\nOnce you have learned how to code, you will need to find a job. You can do this by looking online or in the newspaper. You can also ask your friends and family if they know of any openings. Once you have found a job, you will need to apply for it. You can do this by filling out an application form and sending it in with your resume.\\n\\nOnce you have been accepted into the company, you will need to learn how to code. You can do this by taking classes at a local college or university. You can also learn how to code online through websites such as Code Academy.\\n\\nOnce you have learned how to code, you will need to find a job. You can do this by looking online or in the newspaper. You can also ask your friends and family if they know of any openings. Once you have found a job, you will need to apply for it. You can do this by filling out an application form and sending it in with your resume.\\n\\nOnce you have been accepted into the company, you will need to learn how to code. You can do this by taking classes at a local college or university. You can also learn how to code online through websites such as Code Academy.\\n\\nOnce you have learned how to code, you will need to find a job. You can do this by looking online or in the newspaper. You can also ask your friends and family if they know of any openings. Once you have found a job, you will need to apply for it. You can do this by filling out an application form and sending it in with your resume.\\n\\nOnce you have been accepted into the company, you will need to learn how to code. You can do this by taking classes at a local college or university. You can also learn how to code online through websites such as Code Academy.\\n\\nOnce you have learned how to code, you will need to find a job. You can do this by looking online or in the newspaper. You can also ask your friends and family if they know of any openings. Once you have found a job, you will need to apply for it. You can do this by filling out an application form and sending it in with your resume.\\n\\nOnce you have been accepted into the company, you will need to learn how to code. You can do this by taking classes at a local college or university. You can also learn how to code online through websites such as Code Academy.\\n\\nOnce you have learned how to code, you will need to find a job. You can do this by looking online or in the newspaper. You can also ask your friends and family if they know of any openings. Once you have found a job, you will need to apply for it. You can do this by filling out an application form and sending it in with your resume.\\n\\nOnce you have been accepted into the company, you will need to learn how to code. You can do this by taking classes at a local college or university. You can also learn how to code online through websites such as Code Academy.\\n\\nOnce you have learned how to code, you will need to find a job. You can do this by looking online or in the newspaper. You can also ask your friends and family if they know of any openings. Once you have found a job, you will need to apply for it. You can do this by filling out an application form and sending it in with your resume.\\n\\nOnce you have been accepted into the company, you will need to learn how to code. You can do this by taking classes at a local college or university. You can also learn how to code online through websites such as Code Academy.\\n\\nOnce you have learned how to code, you will need to find a job. You can do this by looking online or in the newspaper. You can also ask your friends and family if they know of any openings. Once you have found a job, you will need to apply for it. You can do this by filling out an application form and sending it in with your resume.\\n\\nOnce you have been accepted into the company, you will need to learn how to code. You can do this by taking classes at a local college or university. You can also learn how to code online through websites such as Code Academy.\\n\\nOnce you have learned how to code, you will need to find a job. You can do this by looking online or in the newspaper. You can also ask your friends and family if they know of any openings. Once you have found a job, you will need to apply for it. You can do this by filling out an application form and sending it in with your resume.\\n\\nOnce you have been accepted into the company, you will need to learn how to code. You can do this by taking classes at a local college or university. You can also learn how to code online through websites such as Code Academy.\\n\\nOnce you have learned how to code, you will need to find a job. You can do this by looking online or in the newspaper. You can also ask your friends and family if they know of any openings. Once you have found a job, you will need to apply for it. You can do this by filling out an application form and sending it in with your resume.\\n\\nOnce you have been accepted into the company, you will need to learn how to code. You can do this by taking classes at a local college or university. You can also learn how to code online through websites such as Code Academy.\\n\\nOnce you have learned how to code, you will need to find a job. You can do this by looking online or in the newspaper. You can also ask your friends and family if they know of any openings. Once you have found a job, you will need to apply for it. You can do this by filling out an application form and sending it in with your resume.\\n\\nOnce you have been accepted into the company, you will need to learn how to code. You can do this by taking classes at a local college or university. You can also learn how to code online through websites such as Code Academy.\\n\\n2. The basics of software engineering\\n\\n", "temperature": 1, "max_tokens": 128, "top_p": 1, "frequency_penalty": 0, "presence_penalty": 0, "n": 1, "stop": ["3.", "2."], "echo": false}' message='Post details'
[2022-11-17 23:32:51,211] DEBUG - https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 601
[2022-11-17 23:32:51,211] INFO - message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=3645 request_id=1cd868a1324037e999b725daec820b0f response_code=200
[2022-11-17 23:32:51,212] INFO - message='Request to OpenAI API' method=post path=https://api.openai.com/v1/edits
[2022-11-17 23:32:51,212] DEBUG - api_version=None data='{"model": "text-davinci-edit-001", "input": "In order to be a successful software engineer, you need to have a strong foundation in computer science. This means that you should be able to understand and use the basic concepts of algorithms, data structures, and programming languages. You should also be familiar with the tools and techniques used in software engineering.", "instruction": "Replace all non-characters with their spoken counterpart. And fix grammar.", "temperature": 0, "top_p": 1}' message='Post details'
[2022-11-17 23:32:54,111] DEBUG - https://api.openai.com:443 "POST /v1/edits HTTP/1.1" 200 475
[2022-11-17 23:32:54,111] INFO - message='OpenAI API response' path=https://api.openai.com/v1/edits processing_ms=2756 request_id=17b6a664cd6836593737d8ea80971ac2 response_code=200
[2022-11-17 23:32:54,112] INFO - message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
[2022-11-17 23:32:54,112] DEBUG - api_version=None data='{"model": "text-davinci-002", "prompt": "Expand greatly upon the topic of How to be a Successful Software Engineer in the context of computer science summarised for a 9th grader:\\n\\n1. How to get started in software engineering\\n\\nThere are many ways to get started in software engineering. One way is to go to college and get a degree in computer science. This will give you the basic knowledge you need to get started in the field. Another way to get started is to learn how to code on your own. There are many resources available online and in libraries that can help you learn how to code. Once you have learned how to code, you can start looking for entrylevel software engineering jobs.\\n\\nThe first thing you need to do is find a job. You can do this by looking online or in the newspaper. You can also ask your friends and family if they know of any openings. Once you have found a job, you will need to apply for it. You can do this by filling out an application form and sending it in with your resume.\\n\\nOnce you have been accepted into the company, you will need to learn how to code. You can do this by taking classes at a local college or university. You can also learn how to code online through websites such as Code Academy.\\n\\nOnce you have learned how to code, you will need to find a job. You can do this by looking online or in the newspaper. You can also ask your friends and family if they know of any openings. Once you have found a job, you will need to apply for it. You can do this by filling out an application form and sending it in with your resume.\\n\\nOnce you have been accepted into the company, you will need to learn how to code. You can do this by taking classes at a local college or university. You can also learn how to code online through websites such as Code Academy.\\n\\nOnce you have learned how to code, you will need to find a job. You can do this by looking online or in the newspaper. You can also ask your friends and family if they know of any openings. Once you have found a job, you will need to apply for it. You can do this by filling out an application form and sending it in with your resume.\\n\\nOnce you have been accepted into the company, you will need to learn how to code. You can do this by taking classes at a local college or university. You can also learn how to code online through websites such as Code Academy.\\n\\nOnce you have learned how to code, you will need to find a job. You can do this by looking online or in the newspaper. You can also ask your friends and family if they know of any openings. Once you have found a job, you will need to apply for it. You can do this by filling out an application form and sending it in with your resume.\\n\\nOnce you have been accepted into the company, you will need to learn how to code. You can do this by taking classes at a local college or university. You can also learn how to code online through websites such as Code Academy.\\n\\nOnce you have learned how to code, you will need to find a job. You can do this by looking online or in the newspaper. You can also ask your friends and family if they know of any openings. Once you have found a job, you will need to apply for it. You can do this by filling out an application form and sending it in with your resume.\\n\\nOnce you have been accepted into the company, you will need to learn how to code. You can do this by taking classes at a local college or university. You can also learn how to code online through websites such as Code Academy.\\n\\nOnce you have learned how to code, you will need to find a job. You can do this by looking online or in the newspaper. You can also ask your friends and family if they know of any openings. Once you have found a job, you will need to apply for it. You can do this by filling out an application form and sending it in with your resume.\\n\\nOnce you have been accepted into the company, you will need to learn how to code. You can do this by taking classes at a local college or university. You can also learn how to code online through websites such as Code Academy.\\n\\nOnce you have learned how to code, you will need to find a job. You can do this by looking online or in the newspaper. You can also ask your friends and family if they know of any openings. Once you have found a job, you will need to apply for it. You can do this by filling out an application form and sending it in with your resume.\\n\\nOnce you have been accepted into the company, you will need to learn how to code. You can do this by taking classes at a local college or university. You can also learn how to code online through websites such as Code Academy.\\n\\nOnce you have learned how to code, you will need to find a job. You can do this by looking online or in the newspaper. You can also ask your friends and family if they know of any openings. Once you have found a job, you will need to apply for it. You can do this by filling out an application form and sending it in with your resume.\\n\\nOnce you have been accepted into the company, you will need to learn how to code. You can do this by taking classes at a local college or university. You can also learn how to code online through websites such as Code Academy.\\n\\nOnce you have learned how to code, you will need to find a job. You can do this by looking online or in the newspaper. You can also ask your friends and family if they know of any openings. Once you have found a job, you will need to apply for it. You can do this by filling out an application form and sending it in with your resume.\\n\\nOnce you have been accepted into the company, you will need to learn how to code. You can do this by taking classes at a local college or university. You can also learn how to code online through websites such as Code Academy.\\n\\nOnce you have learned how to code, you will need to find a job. You can do this by looking online or in the newspaper. You can also ask your friends and family if they know of any openings. Once you have found a job, you will need to apply for it. You can do this by filling out an application form and sending it in with your resume.\\n\\nOnce you have been accepted into the company, you will need to learn how to code. You can do this by taking classes at a local college or university. You can also learn how to code online through websites such as Code Academy.\\n\\nOnce you have learned how to code, you will need to find a job. You can do this by looking online or in the newspaper. You can also ask your friends and family if they know of any openings. Once you have found a job, you will need to apply for it. You can do this by filling out an application form and sending it in with your resume.\\n\\nOnce you have been accepted into the company, you will need to learn how to code. You can do this by taking classes at a local college or university. You can also learn how to code online through websites such as Code Academy.\\n\\n2. The basics of software engineering\\n\\nIn order to be a successful software engineer, you need to have a strong foundation in computer science. This means that you should be able to understand and use the basic concepts of algorithms, data structures, and programming languages. You should also be familiar with the tools and techniques used in software engineering.\\n\\n3. What software engineers do\\n\\n", "temperature": 1, "max_tokens": 128, "top_p": 1, "frequency_penalty": 0, "presence_penalty": 0, "n": 1, "stop": ["4.", "3."], "echo": false}' message='Post details'
[2022-11-17 23:32:57,017] DEBUG - https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 485
[2022-11-17 23:32:57,018] INFO - message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=2756 request_id=cb2eee7d2a16d43cb4be018aab4f4185 response_code=200
[2022-11-17 23:32:57,018] INFO - message='Request to OpenAI API' method=post path=https://api.openai.com/v1/edits
[2022-11-17 23:32:57,018] DEBUG - api_version=None data='{"model": "text-davinci-edit-001", "input": "Software engineers are responsible for developing, testing, and maintaining software applications. They use their knowledge of computer science to create programs that solve problems and meet the needs of users.", "instruction": "Replace all non-characters with their spoken counterpart. And fix grammar.", "temperature": 0, "top_p": 1}' message='Post details'
[2022-11-17 23:32:58,915] DEBUG - https://api.openai.com:443 "POST /v1/edits HTTP/1.1" 200 358
[2022-11-17 23:32:58,916] INFO - message='OpenAI API response' path=https://api.openai.com/v1/edits processing_ms=1754 request_id=e95ccb7612d5e038e6aaae1668bd4dd4 response_code=200
[2022-11-17 23:32:58,916] INFO - message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
[2022-11-17 23:32:58,917] DEBUG - api_version=None data='{"model": "text-davinci-002", "prompt": "Expand greatly upon the topic of How to be a Successful Software Engineer in the context of computer science summarised for a 9th grader:\\n\\n1. How to get started in software engineering\\n\\nThere are many ways to get started in software engineering. One way is to go to college and get a degree in computer science. This will give you the basic knowledge you need to get started in the field. Another way to get started is to learn how to code on your own. There are many resources available online and in libraries that can help you learn how to code. Once you have learned how to code, you can start looking for entrylevel software engineering jobs.\\n\\nThe first thing you need to do is find a job. You can do this by looking online or in the newspaper. You can also ask your friends and family if they know of any openings. Once you have found a job, you will need to apply for it. You can do this by filling out an application form and sending it in with your resume.\\n\\nOnce you have been accepted into the company, you will need to learn how to code. You can do this by taking classes at a local college or university. You can also learn how to code online through websites such as Code Academy.\\n\\nOnce you have learned how to code, you will need to find a job. You can do this by looking online or in the newspaper. You can also ask your friends and family if they know of any openings. Once you have found a job, you will need to apply for it. You can do this by filling out an application form and sending it in with your resume.\\n\\nOnce you have been accepted into the company, you will need to learn how to code. You can do this by taking classes at a local college or university. You can also learn how to code online through websites such as Code Academy.\\n\\nOnce you have learned how to code, you will need to find a job. You can do this by looking online or in the newspaper. You can also ask your friends and family if they know of any openings. Once you have found a job, you will need to apply for it. You can do this by filling out an application form and sending it in with your resume.\\n\\nOnce you have been accepted into the company, you will need to learn how to code. You can do this by taking classes at a local college or university. You can also learn how to code online through websites such as Code Academy.\\n\\nOnce you have learned how to code, you will need to find a job. You can do this by looking online or in the newspaper. You can also ask your friends and family if they know of any openings. Once you have found a job, you will need to apply for it. You can do this by filling out an application form and sending it in with your resume.\\n\\nOnce you have been accepted into the company, you will need to learn how to code. You can do this by taking classes at a local college or university. You can also learn how to code online through websites such as Code Academy.\\n\\nOnce you have learned how to code, you will need to find a job. You can do this by looking online or in the newspaper. You can also ask your friends and family if they know of any openings. Once you have found a job, you will need to apply for it. You can do this by filling out an application form and sending it in with your resume.\\n\\nOnce you have been accepted into the company, you will need to learn how to code. You can do this by taking classes at a local college or university. You can also learn how to code online through websites such as Code Academy.\\n\\nOnce you have learned how to code, you will need to find a job. You can do this by looking online or in the newspaper. You can also ask your friends and family if they know of any openings. Once you have found a job, you will need to apply for it. You can do this by filling out an application form and sending it in with your resume.\\n\\nOnce you have been accepted into the company, you will need to learn how to code. You can do this by taking classes at a local college or university. You can also learn how to code online through websites such as Code Academy.\\n\\nOnce you have learned how to code, you will need to find a job. You can do this by looking online or in the newspaper. You can also ask your friends and family if they know of any openings. Once you have found a job, you will need to apply for it. You can do this by filling out an application form and sending it in with your resume.\\n\\nOnce you have been accepted into the company, you will need to learn how to code. You can do this by taking classes at a local college or university. You can also learn how to code online through websites such as Code Academy.\\n\\nOnce you have learned how to code, you will need to find a job. You can do this by looking online or in the newspaper. You can also ask your friends and family if they know of any openings. Once you have found a job, you will need to apply for it. You can do this by filling out an application form and sending it in with your resume.\\n\\nOnce you have been accepted into the company, you will need to learn how to code. You can do this by taking classes at a local college or university. You can also learn how to code online through websites such as Code Academy.\\n\\nOnce you have learned how to code, you will need to find a job. You can do this by looking online or in the newspaper. You can also ask your friends and family if they know of any openings. Once you have found a job, you will need to apply for it. You can do this by filling out an application form and sending it in with your resume.\\n\\nOnce you have been accepted into the company, you will need to learn how to code. You can do this by taking classes at a local college or university. You can also learn how to code online through websites such as Code Academy.\\n\\nOnce you have learned how to code, you will need to find a job. You can do this by looking online or in the newspaper. You can also ask your friends and family if they know of any openings. Once you have found a job, you will need to apply for it. You can do this by filling out an application form and sending it in with your resume.\\n\\nOnce you have been accepted into the company, you will need to learn how to code. You can do this by taking classes at a local college or university. You can also learn how to code online through websites such as Code Academy.\\n\\nOnce you have learned how to code, you will need to find a job. You can do this by looking online or in the newspaper. You can also ask your friends and family if they know of any openings. Once you have found a job, you will need to apply for it. You can do this by filling out an application form and sending it in with your resume.\\n\\nOnce you have been accepted into the company, you will need to learn how to code. You can do this by taking classes at a local college or university. You can also learn how to code online through websites such as Code Academy.\\n\\n2. The basics of software engineering\\n\\nIn order to be a successful software engineer, you need to have a strong foundation in computer science. This means that you should be able to understand and use the basic concepts of algorithms, data structures, and programming languages. You should also be familiar with the tools and techniques used in software engineering.\\n\\n3. What software engineers do\\n\\nSoftware engineers are responsible for developing, testing, and maintaining software applications. They use their knowledge of computer science to create programs that solve problems and meet the needs of users.\\n\\n4. The skills you need to be a successful software engineer\\n\\n", "temperature": 1, "max_tokens": 128, "top_p": 1, "frequency_penalty": 0, "presence_penalty": 0, "n": 1, "stop": ["5.", "4."], "echo": false}' message='Post details'
[2022-11-17 23:33:01,773] DEBUG - https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 None
[2022-11-17 23:33:01,773] INFO - message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=2707 request_id=3c3adc928c92640e4a939e7bf3b6b850 response_code=200
[2022-11-17 23:33:01,773] INFO - message='Request to OpenAI API' method=post path=https://api.openai.com/v1/edits
[2022-11-17 23:33:01,773] DEBUG - api_version=None data='{"model": "text-davinci-edit-001", "input": "Some of the skills you need to be a successful software engineer include:\\n\\n\\u2022 Strong problem-solving skills\\n\\n\\u2022 The ability to code\\n\\n\\u2022 The ability to think abstractly\\n\\n\\u2022 The ability to communicate effectively\\n\\n\\u2022 The ability to work in a team", "instruction": "Replace all non-characters with their spoken counterpart. And fix grammar.", "temperature": 0, "top_p": 1}' message='Post details'
[2022-11-17 23:33:05,093] DEBUG - https://api.openai.com:443 "POST /v1/edits HTTP/1.1" 200 None
[2022-11-17 23:33:05,094] INFO - message='OpenAI API response' path=https://api.openai.com/v1/edits processing_ms=3178 request_id=8f0e793db641aaff908c60a0bb220773 response_code=200
[2022-11-17 23:33:05,095] INFO - message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
[2022-11-17 23:33:05,096] DEBUG - api_version=None data='{"model": "text-davinci-002", "prompt": "Expand greatly upon the topic of How to be a Successful Software Engineer in the context of computer science summarised for a 9th grader:\\n\\n1. How to get started in software engineering\\n\\nThere are many ways to get started in software engineering. One way is to go to college and get a degree in computer science. This will give you the basic knowledge you need to get started in the field. Another way to get started is to learn how to code on your own. There are many resources available online and in libraries that can help you learn how to code. Once you have learned how to code, you can start looking for entrylevel software engineering jobs.\\n\\nThe first thing you need to do is find a job. You can do this by looking online or in the newspaper. You can also ask your friends and family if they know of any openings. Once you have found a job, you will need to apply for it. You can do this by filling out an application form and sending it in with your resume.\\n\\nOnce you have been accepted into the company, you will need to learn how to code. You can do this by taking classes at a local college or university. You can also learn how to code online through websites such as Code Academy.\\n\\nOnce you have learned how to code, you will need to find a job. You can do this by looking online or in the newspaper. You can also ask your friends and family if they know of any openings. Once you have found a job, you will need to apply for it. You can do this by filling out an application form and sending it in with your resume.\\n\\nOnce you have been accepted into the company, you will need to learn how to code. You can do this by taking classes at a local college or university. You can also learn how to code online through websites such as Code Academy.\\n\\nOnce you have learned how to code, you will need to find a job. You can do this by looking online or in the newspaper. You can also ask your friends and family if they know of any openings. Once you have found a job, you will need to apply for it. You can do this by filling out an application form and sending it in with your resume.\\n\\nOnce you have been accepted into the company, you will need to learn how to code. You can do this by taking classes at a local college or university. You can also learn how to code online through websites such as Code Academy.\\n\\nOnce you have learned how to code, you will need to find a job. You can do this by looking online or in the newspaper. You can also ask your friends and family if they know of any openings. Once you have found a job, you will need to apply for it. You can do this by filling out an application form and sending it in with your resume.\\n\\nOnce you have been accepted into the company, you will need to learn how to code. You can do this by taking classes at a local college or university. You can also learn how to code online through websites such as Code Academy.\\n\\nOnce you have learned how to code, you will need to find a job. You can do this by looking online or in the newspaper. You can also ask your friends and family if they know of any openings. Once you have found a job, you will need to apply for it. You can do this by filling out an application form and sending it in with your resume.\\n\\nOnce you have been accepted into the company, you will need to learn how to code. You can do this by taking classes at a local college or university. You can also learn how to code online through websites such as Code Academy.\\n\\nOnce you have learned how to code, you will need to find a job. You can do this by looking online or in the newspaper. You can also ask your friends and family if they know of any openings. Once you have found a job, you will need to apply for it. You can do this by filling out an application form and sending it in with your resume.\\n\\nOnce you have been accepted into the company, you will need to learn how to code. You can do this by taking classes at a local college or university. You can also learn how to code online through websites such as Code Academy.\\n\\nOnce you have learned how to code, you will need to find a job. You can do this by looking online or in the newspaper. You can also ask your friends and family if they know of any openings. Once you have found a job, you will need to apply for it. You can do this by filling out an application form and sending it in with your resume.\\n\\nOnce you have been accepted into the company, you will need to learn how to code. You can do this by taking classes at a local college or university. You can also learn how to code online through websites such as Code Academy.\\n\\nOnce you have learned how to code, you will need to find a job. You can do this by looking online or in the newspaper. You can also ask your friends and family if they know of any openings. Once you have found a job, you will need to apply for it. You can do this by filling out an application form and sending it in with your resume.\\n\\nOnce you have been accepted into the company, you will need to learn how to code. You can do this by taking classes at a local college or university. You can also learn how to code online through websites such as Code Academy.\\n\\nOnce you have learned how to code, you will need to find a job. You can do this by looking online or in the newspaper. You can also ask your friends and family if they know of any openings. Once you have found a job, you will need to apply for it. You can do this by filling out an application form and sending it in with your resume.\\n\\nOnce you have been accepted into the company, you will need to learn how to code. You can do this by taking classes at a local college or university. You can also learn how to code online through websites such as Code Academy.\\n\\nOnce you have learned how to code, you will need to find a job. You can do this by looking online or in the newspaper. You can also ask your friends and family if they know of any openings. Once you have found a job, you will need to apply for it. You can do this by filling out an application form and sending it in with your resume.\\n\\nOnce you have been accepted into the company, you will need to learn how to code. You can do this by taking classes at a local college or university. You can also learn how to code online through websites such as Code Academy.\\n\\nOnce you have learned how to code, you will need to find a job. You can do this by looking online or in the newspaper. You can also ask your friends and family if they know of any openings. Once you have found a job, you will need to apply for it. You can do this by filling out an application form and sending it in with your resume.\\n\\nOnce you have been accepted into the company, you will need to learn how to code. You can do this by taking classes at a local college or university. You can also learn how to code online through websites such as Code Academy.\\n\\n2. The basics of software engineering\\n\\nIn order to be a successful software engineer, you need to have a strong foundation in computer science. This means that you should be able to understand and use the basic concepts of algorithms, data structures, and programming languages. You should also be familiar with the tools and techniques used in software engineering.\\n\\n3. What software engineers do\\n\\nSoftware engineers are responsible for developing, testing, and maintaining software applications. They use their knowledge of computer science to create programs that solve problems and meet the needs of users.\\n\\n4. The skills you need to be a successful software engineer\\n\\nSome of the skills you need to be a successful software engineer include\\n\\n\\u2022 Strong problem solving skills\\n\\n\\u2022 The ability to code\\n\\n\\u2022 The ability to think abstract\\n\\n\\u2022 The ability to communicate effectively \\n\\n\\u2022 The ability to work in a team\\n\\n5. The education and training you need to be a successful software engineer\\n\\n", "temperature": 1, "max_tokens": 128, "top_p": 1, "frequency_penalty": 0, "presence_penalty": 0, "n": 1, "stop": ["6.", "5."], "echo": false}' message='Post details'
[2022-11-17 23:33:06,904] DEBUG - https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 564
[2022-11-17 23:33:06,904] INFO - message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1585 request_id=46e2049781e724d2119323553174c61a response_code=200
[2022-11-17 23:33:06,904] INFO - message='Request to OpenAI API' method=post path=https://api.openai.com/v1/edits
[2022-11-17 23:33:06,904] DEBUG - api_version=None data='{"model": "text-davinci-edit-001", "input": "Most software engineers have a bachelor\'s degree in computer science. However, some software engineers may have a degree in another field such as mathematics or electrical engineering. It is also possible to become a software engineer without a degree if you have the right skills and experience.", "instruction": "Replace all non-characters with their spoken counterpart. And fix grammar.", "temperature": 0, "top_p": 1}' message='Post details'
[2022-11-17 23:33:09,817] DEBUG - https://api.openai.com:443 "POST /v1/edits HTTP/1.1" 200 444
[2022-11-17 23:33:09,817] INFO - message='OpenAI API response' path=https://api.openai.com/v1/edits processing_ms=2769 request_id=40617dc0bb52ee2745824dc05c210ccb response_code=200
[2022-11-17 23:33:09,818] INFO - message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
[2022-11-17 23:33:09,818] DEBUG - api_version=None data='{"model": "text-davinci-002", "prompt": "Expand greatly upon the topic of How to be a Successful Software Engineer in the context of computer science summarised for a 9th grader:\\n\\n1. How to get started in software engineering\\n\\nThere are many ways to get started in software engineering. One way is to go to college and get a degree in computer science. This will give you the basic knowledge you need to get started in the field. Another way to get started is to learn how to code on your own. There are many resources available online and in libraries that can help you learn how to code. Once you have learned how to code, you can start looking for entrylevel software engineering jobs.\\n\\nThe first thing you need to do is find a job. You can do this by looking online or in the newspaper. You can also ask your friends and family if they know of any openings. Once you have found a job, you will need to apply for it. You can do this by filling out an application form and sending it in with your resume.\\n\\nOnce you have been accepted into the company, you will need to learn how to code. You can do this by taking classes at a local college or university. You can also learn how to code online through websites such as Code Academy.\\n\\nOnce you have learned how to code, you will need to find a job. You can do this by looking online or in the newspaper. You can also ask your friends and family if they know of any openings. Once you have found a job, you will need to apply for it. You can do this by filling out an application form and sending it in with your resume.\\n\\nOnce you have been accepted into the company, you will need to learn how to code. You can do this by taking classes at a local college or university. You can also learn how to code online through websites such as Code Academy.\\n\\nOnce you have learned how to code, you will need to find a job. You can do this by looking online or in the newspaper. You can also ask your friends and family if they know of any openings. Once you have found a job, you will need to apply for it. You can do this by filling out an application form and sending it in with your resume.\\n\\nOnce you have been accepted into the company, you will need to learn how to code. You can do this by taking classes at a local college or university. You can also learn how to code online through websites such as Code Academy.\\n\\nOnce you have learned how to code, you will need to find a job. You can do this by looking online or in the newspaper. You can also ask your friends and family if they know of any openings. Once you have found a job, you will need to apply for it. You can do this by filling out an application form and sending it in with your resume.\\n\\nOnce you have been accepted into the company, you will need to learn how to code. You can do this by taking classes at a local college or university. You can also learn how to code online through websites such as Code Academy.\\n\\nOnce you have learned how to code, you will need to find a job. You can do this by looking online or in the newspaper. You can also ask your friends and family if they know of any openings. Once you have found a job, you will need to apply for it. You can do this by filling out an application form and sending it in with your resume.\\n\\nOnce you have been accepted into the company, you will need to learn how to code. You can do this by taking classes at a local college or university. You can also learn how to code online through websites such as Code Academy.\\n\\nOnce you have learned how to code, you will need to find a job. You can do this by looking online or in the newspaper. You can also ask your friends and family if they know of any openings. Once you have found a job, you will need to apply for it. You can do this by filling out an application form and sending it in with your resume.\\n\\nOnce you have been accepted into the company, you will need to learn how to code. You can do this by taking classes at a local college or university. You can also learn how to code online through websites such as Code Academy.\\n\\nOnce you have learned how to code, you will need to find a job. You can do this by looking online or in the newspaper. You can also ask your friends and family if they know of any openings. Once you have found a job, you will need to apply for it. You can do this by filling out an application form and sending it in with your resume.\\n\\nOnce you have been accepted into the company, you will need to learn how to code. You can do this by taking classes at a local college or university. You can also learn how to code online through websites such as Code Academy.\\n\\nOnce you have learned how to code, you will need to find a job. You can do this by looking online or in the newspaper. You can also ask your friends and family if they know of any openings. Once you have found a job, you will need to apply for it. You can do this by filling out an application form and sending it in with your resume.\\n\\nOnce you have been accepted into the company, you will need to learn how to code. You can do this by taking classes at a local college or university. You can also learn how to code online through websites such as Code Academy.\\n\\nOnce you have learned how to code, you will need to find a job. You can do this by looking online or in the newspaper. You can also ask your friends and family if they know of any openings. Once you have found a job, you will need to apply for it. You can do this by filling out an application form and sending it in with your resume.\\n\\nOnce you have been accepted into the company, you will need to learn how to code. You can do this by taking classes at a local college or university. You can also learn how to code online through websites such as Code Academy.\\n\\nOnce you have learned how to code, you will need to find a job. You can do this by looking online or in the newspaper. You can also ask your friends and family if they know of any openings. Once you have found a job, you will need to apply for it. You can do this by filling out an application form and sending it in with your resume.\\n\\nOnce you have been accepted into the company, you will need to learn how to code. You can do this by taking classes at a local college or university. You can also learn how to code online through websites such as Code Academy.\\n\\nOnce you have learned how to code, you will need to find a job. You can do this by looking online or in the newspaper. You can also ask your friends and family if they know of any openings. Once you have found a job, you will need to apply for it. You can do this by filling out an application form and sending it in with your resume.\\n\\nOnce you have been accepted into the company, you will need to learn how to code. You can do this by taking classes at a local college or university. You can also learn how to code online through websites such as Code Academy.\\n\\n2. The basics of software engineering\\n\\nIn order to be a successful software engineer, you need to have a strong foundation in computer science. This means that you should be able to understand and use the basic concepts of algorithms, data structures, and programming languages. You should also be familiar with the tools and techniques used in software engineering.\\n\\n3. What software engineers do\\n\\nSoftware engineers are responsible for developing, testing, and maintaining software applications. They use their knowledge of computer science to create programs that solve problems and meet the needs of users.\\n\\n4. The skills you need to be a successful software engineer\\n\\nSome of the skills you need to be a successful software engineer include\\n\\n\\u2022 Strong problem solving skills\\n\\n\\u2022 The ability to code\\n\\n\\u2022 The ability to think abstract\\n\\n\\u2022 The ability to communicate effectively \\n\\n\\u2022 The ability to work in a team\\n\\n5. The education and training you need to be a successful software engineer\\n\\nMost software engineers have a bachelor\'s degree in computer science. However, some software engineers may have a degree in another field such as mathematics or electrical engineering. It is also possible to become a software engineer without a degree if you have the right skills and experience.\\n\\n6. The different types of software engineering\\n\\n", "temperature": 1, "max_tokens": 128, "top_p": 1, "frequency_penalty": 0, "presence_penalty": 0, "n": 1, "stop": ["7.", "6."], "echo": false}' message='Post details'
[2022-11-17 23:33:12,395] DEBUG - https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 None
[2022-11-17 23:33:12,396] INFO - message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=2433 request_id=906ae74af5c8be5c8496a17f594addf3 response_code=200
[2022-11-17 23:33:12,396] INFO - message='Request to OpenAI API' method=post path=https://api.openai.com/v1/edits
[2022-11-17 23:33:12,396] DEBUG - api_version=None data='{"model": "text-davinci-edit-001", "input": "There are several different types of software engineering, including:\\n\\n\\u2022 Web development\\n\\n\\u2022 Mobile development\\n\\n\\u2022 Game development\\n\\n\\u2022 Embedded systems\\n\\n\\u2022 System software", "instruction": "Replace all non-characters with their spoken counterpart. And fix grammar.", "temperature": 0, "top_p": 1}' message='Post details'
[2022-11-17 23:33:15,159] DEBUG - https://api.openai.com:443 "POST /v1/edits HTTP/1.1" 200 None
[2022-11-17 23:33:15,160] INFO - message='OpenAI API response' path=https://api.openai.com/v1/edits processing_ms=2619 request_id=438ad147db922121dcc7e3b69c9988d4 response_code=200
[2022-11-17 23:33:15,160] INFO - message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
[2022-11-17 23:33:15,160] DEBUG - api_version=None data='{"model": "text-davinci-002", "prompt": "Expand greatly upon the topic of How to be a Successful Software Engineer in the context of computer science summarised for a 9th grader:\\n\\n1. How to get started in software engineering\\n\\nThere are many ways to get started in software engineering. One way is to go to college and get a degree in computer science. This will give you the basic knowledge you need to get started in the field. Another way to get started is to learn how to code on your own. There are many resources available online and in libraries that can help you learn how to code. Once you have learned how to code, you can start looking for entrylevel software engineering jobs.\\n\\nThe first thing you need to do is find a job. You can do this by looking online or in the newspaper. You can also ask your friends and family if they know of any openings. Once you have found a job, you will need to apply for it. You can do this by filling out an application form and sending it in with your resume.\\n\\nOnce you have been accepted into the company, you will need to learn how to code. You can do this by taking classes at a local college or university. You can also learn how to code online through websites such as Code Academy.\\n\\nOnce you have learned how to code, you will need to find a job. You can do this by looking online or in the newspaper. You can also ask your friends and family if they know of any openings. Once you have found a job, you will need to apply for it. You can do this by filling out an application form and sending it in with your resume.\\n\\nOnce you have been accepted into the company, you will need to learn how to code. You can do this by taking classes at a local college or university. You can also learn how to code online through websites such as Code Academy.\\n\\nOnce you have learned how to code, you will need to find a job. You can do this by looking online or in the newspaper. You can also ask your friends and family if they know of any openings. Once you have found a job, you will need to apply for it. You can do this by filling out an application form and sending it in with your resume.\\n\\nOnce you have been accepted into the company, you will need to learn how to code. You can do this by taking classes at a local college or university. You can also learn how to code online through websites such as Code Academy.\\n\\nOnce you have learned how to code, you will need to find a job. You can do this by looking online or in the newspaper. You can also ask your friends and family if they know of any openings. Once you have found a job, you will need to apply for it. You can do this by filling out an application form and sending it in with your resume.\\n\\nOnce you have been accepted into the company, you will need to learn how to code. You can do this by taking classes at a local college or university. You can also learn how to code online through websites such as Code Academy.\\n\\nOnce you have learned how to code, you will need to find a job. You can do this by looking online or in the newspaper. You can also ask your friends and family if they know of any openings. Once you have found a job, you will need to apply for it. You can do this by filling out an application form and sending it in with your resume.\\n\\nOnce you have been accepted into the company, you will need to learn how to code. You can do this by taking classes at a local college or university. You can also learn how to code online through websites such as Code Academy.\\n\\nOnce you have learned how to code, you will need to find a job. You can do this by looking online or in the newspaper. You can also ask your friends and family if they know of any openings. Once you have found a job, you will need to apply for it. You can do this by filling out an application form and sending it in with your resume.\\n\\nOnce you have been accepted into the company, you will need to learn how to code. You can do this by taking classes at a local college or university. You can also learn how to code online through websites such as Code Academy.\\n\\nOnce you have learned how to code, you will need to find a job. You can do this by looking online or in the newspaper. You can also ask your friends and family if they know of any openings. Once you have found a job, you will need to apply for it. You can do this by filling out an application form and sending it in with your resume.\\n\\nOnce you have been accepted into the company, you will need to learn how to code. You can do this by taking classes at a local college or university. You can also learn how to code online through websites such as Code Academy.\\n\\nOnce you have learned how to code, you will need to find a job. You can do this by looking online or in the newspaper. You can also ask your friends and family if they know of any openings. Once you have found a job, you will need to apply for it. You can do this by filling out an application form and sending it in with your resume.\\n\\nOnce you have been accepted into the company, you will need to learn how to code. You can do this by taking classes at a local college or university. You can also learn how to code online through websites such as Code Academy.\\n\\nOnce you have learned how to code, you will need to find a job. You can do this by looking online or in the newspaper. You can also ask your friends and family if they know of any openings. Once you have found a job, you will need to apply for it. You can do this by filling out an application form and sending it in with your resume.\\n\\nOnce you have been accepted into the company, you will need to learn how to code. You can do this by taking classes at a local college or university. You can also learn how to code online through websites such as Code Academy.\\n\\nOnce you have learned how to code, you will need to find a job. You can do this by looking online or in the newspaper. You can also ask your friends and family if they know of any openings. Once you have found a job, you will need to apply for it. You can do this by filling out an application form and sending it in with your resume.\\n\\nOnce you have been accepted into the company, you will need to learn how to code. You can do this by taking classes at a local college or university. You can also learn how to code online through websites such as Code Academy.\\n\\nOnce you have learned how to code, you will need to find a job. You can do this by looking online or in the newspaper. You can also ask your friends and family if they know of any openings. Once you have found a job, you will need to apply for it. You can do this by filling out an application form and sending it in with your resume.\\n\\nOnce you have been accepted into the company, you will need to learn how to code. You can do this by taking classes at a local college or university. You can also learn how to code online through websites such as Code Academy.\\n\\n2. The basics of software engineering\\n\\nIn order to be a successful software engineer, you need to have a strong foundation in computer science. This means that you should be able to understand and use the basic concepts of algorithms, data structures, and programming languages. You should also be familiar with the tools and techniques used in software engineering.\\n\\n3. What software engineers do\\n\\nSoftware engineers are responsible for developing, testing, and maintaining software applications. They use their knowledge of computer science to create programs that solve problems and meet the needs of users.\\n\\n4. The skills you need to be a successful software engineer\\n\\nSome of the skills you need to be a successful software engineer include\\n\\n\\u2022 Strong problem solving skills\\n\\n\\u2022 The ability to code\\n\\n\\u2022 The ability to think abstract\\n\\n\\u2022 The ability to communicate effectively \\n\\n\\u2022 The ability to work in a team\\n\\n5. The education and training you need to be a successful software engineer\\n\\nMost software engineers have a bachelor\'s degree in computer science. However, some software engineers may have a degree in another field such as mathematics or electrical engineering. It is also possible to become a software engineer without a degree if you have the right skills and experience.\\n\\n6. The different types of software engineering\\n\\nThere are several different types of software engineering, including\\n\\n\\u2022 Web development,\\n\\n\\u2022 Mobile development,\\n\\n\\u2022 Game development,\\n\\n\\u2022 Embedded systems, and\\n\\n\\u2022 System software.\\n\\n7. How to find a job as a software engineer\\n\\n", "temperature": 1, "max_tokens": 128, "top_p": 1, "frequency_penalty": 0, "presence_penalty": 0, "n": 1, "stop": ["8.", "7."], "echo": false}' message='Post details'
[2022-11-17 23:33:18,181] DEBUG - https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 527
[2022-11-17 23:33:18,181] INFO - message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=2852 request_id=730a539afa64cceec392f16ac3d7d3ad response_code=200
[2022-11-17 23:33:18,181] INFO - message='Request to OpenAI API' method=post path=https://api.openai.com/v1/edits
[2022-11-17 23:33:18,181] DEBUG - api_version=None data='{"model": "text-davinci-edit-001", "input": "There are many ways to find a job as a software engineer. You can search online job boards, such as Indeed or Monster. You can also search for jobs on the websites of software companies. Another way to find a job is to attend job fairs or networking events.", "instruction": "Replace all non-characters with their spoken counterpart. And fix grammar.", "temperature": 0, "top_p": 1}' message='Post details'
[2022-11-17 23:33:22,156] DEBUG - https://api.openai.com:443 "POST /v1/edits HTTP/1.1" 200 401
[2022-11-17 23:33:22,156] INFO - message='OpenAI API response' path=https://api.openai.com/v1/edits processing_ms=3831 request_id=b8d667136172062c1fcb02967b453c25 response_code=200
[2022-11-17 23:33:22,156] INFO - message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
[2022-11-17 23:33:22,156] DEBUG - api_version=None data='{"model": "text-davinci-002", "prompt": "Expand greatly upon the topic of How to be a Successful Software Engineer in the context of computer science summarised for a 9th grader:\\n\\n1. How to get started in software engineering\\n\\nThere are many ways to get started in software engineering. One way is to go to college and get a degree in computer science. This will give you the basic knowledge you need to get started in the field. Another way to get started is to learn how to code on your own. There are many resources available online and in libraries that can help you learn how to code. Once you have learned how to code, you can start looking for entrylevel software engineering jobs.\\n\\nThe first thing you need to do is find a job. You can do this by looking online or in the newspaper. You can also ask your friends and family if they know of any openings. Once you have found a job, you will need to apply for it. You can do this by filling out an application form and sending it in with your resume.\\n\\nOnce you have been accepted into the company, you will need to learn how to code. You can do this by taking classes at a local college or university. You can also learn how to code online through websites such as Code Academy.\\n\\nOnce you have learned how to code, you will need to find a job. You can do this by looking online or in the newspaper. You can also ask your friends and family if they know of any openings. Once you have found a job, you will need to apply for it. You can do this by filling out an application form and sending it in with your resume.\\n\\nOnce you have been accepted into the company, you will need to learn how to code. You can do this by taking classes at a local college or university. You can also learn how to code online through websites such as Code Academy.\\n\\nOnce you have learned how to code, you will need to find a job. You can do this by looking online or in the newspaper. You can also ask your friends and family if they know of any openings. Once you have found a job, you will need to apply for it. You can do this by filling out an application form and sending it in with your resume.\\n\\nOnce you have been accepted into the company, you will need to learn how to code. You can do this by taking classes at a local college or university. You can also learn how to code online through websites such as Code Academy.\\n\\nOnce you have learned how to code, you will need to find a job. You can do this by looking online or in the newspaper. You can also ask your friends and family if they know of any openings. Once you have found a job, you will need to apply for it. You can do this by filling out an application form and sending it in with your resume.\\n\\nOnce you have been accepted into the company, you will need to learn how to code. You can do this by taking classes at a local college or university. You can also learn how to code online through websites such as Code Academy.\\n\\nOnce you have learned how to code, you will need to find a job. You can do this by looking online or in the newspaper. You can also ask your friends and family if they know of any openings. Once you have found a job, you will need to apply for it. You can do this by filling out an application form and sending it in with your resume.\\n\\nOnce you have been accepted into the company, you will need to learn how to code. You can do this by taking classes at a local college or university. You can also learn how to code online through websites such as Code Academy.\\n\\nOnce you have learned how to code, you will need to find a job. You can do this by looking online or in the newspaper. You can also ask your friends and family if they know of any openings. Once you have found a job, you will need to apply for it. You can do this by filling out an application form and sending it in with your resume.\\n\\nOnce you have been accepted into the company, you will need to learn how to code. You can do this by taking classes at a local college or university. You can also learn how to code online through websites such as Code Academy.\\n\\nOnce you have learned how to code, you will need to find a job. You can do this by looking online or in the newspaper. You can also ask your friends and family if they know of any openings. Once you have found a job, you will need to apply for it. You can do this by filling out an application form and sending it in with your resume.\\n\\nOnce you have been accepted into the company, you will need to learn how to code. You can do this by taking classes at a local college or university. You can also learn how to code online through websites such as Code Academy.\\n\\nOnce you have learned how to code, you will need to find a job. You can do this by looking online or in the newspaper. You can also ask your friends and family if they know of any openings. Once you have found a job, you will need to apply for it. You can do this by filling out an application form and sending it in with your resume.\\n\\nOnce you have been accepted into the company, you will need to learn how to code. You can do this by taking classes at a local college or university. You can also learn how to code online through websites such as Code Academy.\\n\\nOnce you have learned how to code, you will need to find a job. You can do this by looking online or in the newspaper. You can also ask your friends and family if they know of any openings. Once you have found a job, you will need to apply for it. You can do this by filling out an application form and sending it in with your resume.\\n\\nOnce you have been accepted into the company, you will need to learn how to code. You can do this by taking classes at a local college or university. You can also learn how to code online through websites such as Code Academy.\\n\\nOnce you have learned how to code, you will need to find a job. You can do this by looking online or in the newspaper. You can also ask your friends and family if they know of any openings. Once you have found a job, you will need to apply for it. You can do this by filling out an application form and sending it in with your resume.\\n\\nOnce you have been accepted into the company, you will need to learn how to code. You can do this by taking classes at a local college or university. You can also learn how to code online through websites such as Code Academy.\\n\\nOnce you have learned how to code, you will need to find a job. You can do this by looking online or in the newspaper. You can also ask your friends and family if they know of any openings. Once you have found a job, you will need to apply for it. You can do this by filling out an application form and sending it in with your resume.\\n\\nOnce you have been accepted into the company, you will need to learn how to code. You can do this by taking classes at a local college or university. You can also learn how to code online through websites such as Code Academy.\\n\\n2. The basics of software engineering\\n\\nIn order to be a successful software engineer, you need to have a strong foundation in computer science. This means that you should be able to understand and use the basic concepts of algorithms, data structures, and programming languages. You should also be familiar with the tools and techniques used in software engineering.\\n\\n3. What software engineers do\\n\\nSoftware engineers are responsible for developing, testing, and maintaining software applications. They use their knowledge of computer science to create programs that solve problems and meet the needs of users.\\n\\n4. The skills you need to be a successful software engineer\\n\\nSome of the skills you need to be a successful software engineer include\\n\\n\\u2022 Strong problem solving skills\\n\\n\\u2022 The ability to code\\n\\n\\u2022 The ability to think abstract\\n\\n\\u2022 The ability to communicate effectively \\n\\n\\u2022 The ability to work in a team\\n\\n5. The education and training you need to be a successful software engineer\\n\\nMost software engineers have a bachelor\'s degree in computer science. However, some software engineers may have a degree in another field such as mathematics or electrical engineering. It is also possible to become a software engineer without a degree if you have the right skills and experience.\\n\\n6. The different types of software engineering\\n\\nThere are several different types of software engineering, including\\n\\n\\u2022 Web development,\\n\\n\\u2022 Mobile development,\\n\\n\\u2022 Game development,\\n\\n\\u2022 Embedded systems, and\\n\\n\\u2022 System software.\\n\\n7. How to find a job as a software engineer\\n\\nThere are many ways to find a job as a software engineer. You can search online job boards, such as Indeed or Monster. You can also search for jobs on the websites of software companies. Another way to find a job is to attend job fairs or network events.\\n\\n8. The salary and job outlook for software engineers\\n\\n", "temperature": 1, "max_tokens": 128, "top_p": 1, "frequency_penalty": 0, "presence_penalty": 0, "n": 1, "stop": ["9.", "8."], "echo": false}' message='Post details'
[2022-11-17 23:33:24,810] DEBUG - https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 437
[2022-11-17 23:33:24,810] INFO - message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=2506 request_id=edc778a2b585d82dd6f5102a53247e4c response_code=200
[2022-11-17 23:33:24,811] INFO - message='Request to OpenAI API' method=post path=https://api.openai.com/v1/edits
[2022-11-17 23:33:24,811] DEBUG - api_version=None data='{"model": "text-davinci-edit-001", "input": "The median annual salary for software engineers is $102,280. The job outlook for software engineers is positive, with an expected growth of 7% over the next ten years.", "instruction": "Replace all non-characters with their spoken counterpart. And fix grammar.", "temperature": 0, "top_p": 1}' message='Post details'
[2022-11-17 23:33:27,666] DEBUG - https://api.openai.com:443 "POST /v1/edits HTTP/1.1" 200 368
[2022-11-17 23:33:27,666] INFO - message='OpenAI API response' path=https://api.openai.com/v1/edits processing_ms=2711 request_id=b3c75be6e5452d118b3bca7a07acdc39 response_code=200
[2022-11-17 23:33:27,667] DEBUG - Starting new HTTPS connection (1): www.googleapis.com:443
[2022-11-17 23:33:27,817] DEBUG - https://www.googleapis.com:443 "GET /youtube/v3/playlists?part=id&id=UC_x5XG1OV2P6uZZ5FSM9Ttw&key=AIzaSyDfv2ISoNjVh2oX2JRJUQ1loS-voHH3GlI&maxResults=2 HTTP/1.1" 200 None
[2022-11-17 23:33:27,819] DEBUG - Starting new HTTPS connection (1): www.googleapis.com:443
[2022-11-17 23:33:28,361] DEBUG - https://www.googleapis.com:443 "GET /youtube/v3/search?part=snippet&type=video&maxResults=50&order=relevance&key=AIzaSyDfv2ISoNjVh2oX2JRJUQ1loS-voHH3GlI&q=How%20to%20be%20a%20Successful%20Software%20Engineer&publishedAfter=2000-01-01T00:00:00Z&publishedBefore=3000-01-01T00:00:00Z HTTP/1.1" 200 None
[2022-11-17 23:33:28,365] DEBUG - Starting new HTTPS connection (1): www.googleapis.com:443
[2022-11-17 23:33:28,426] DEBUG - https://www.googleapis.com:443 "GET /youtube/v3/videos?key=AIzaSyDfv2ISoNjVh2oX2JRJUQ1loS-voHH3GlI&fields=items(snippet(description,tags))&part=snippet&id=6G_UQ0YepV8 HTTP/1.1" 200 None
[2022-11-17 23:33:28,428] DEBUG - Starting new HTTPS connection (1): www.googleapis.com:443
[2022-11-17 23:33:28,496] DEBUG - https://www.googleapis.com:443 "GET /youtube/v3/videos?key=AIzaSyDfv2ISoNjVh2oX2JRJUQ1loS-voHH3GlI&fields=items(snippet(description,tags))&part=snippet&id=M_GVUj86VaY HTTP/1.1" 200 None
[2022-11-17 23:33:28,498] DEBUG - Starting new HTTPS connection (1): www.googleapis.com:443
[2022-11-17 23:33:28,563] DEBUG - https://www.googleapis.com:443 "GET /youtube/v3/videos?key=AIzaSyDfv2ISoNjVh2oX2JRJUQ1loS-voHH3GlI&fields=items(snippet(description,tags))&part=snippet&id=k3iV1-9PJtI HTTP/1.1" 200 None
[2022-11-17 23:33:28,565] DEBUG - Starting new HTTPS connection (1): www.googleapis.com:443
[2022-11-17 23:33:28,623] DEBUG - https://www.googleapis.com:443 "GET /youtube/v3/videos?key=AIzaSyDfv2ISoNjVh2oX2JRJUQ1loS-voHH3GlI&fields=items(snippet(description,tags))&part=snippet&id=V1PdbnuPMi8 HTTP/1.1" 200 None
[2022-11-17 23:33:28,626] DEBUG - Starting new HTTPS connection (1): www.googleapis.com:443
[2022-11-17 23:33:28,691] DEBUG - https://www.googleapis.com:443 "GET /youtube/v3/videos?key=AIzaSyDfv2ISoNjVh2oX2JRJUQ1loS-voHH3GlI&fields=items(snippet(description,tags))&part=snippet&id=Ws6zCMdp9Es HTTP/1.1" 200 None
[2022-11-17 23:33:28,693] DEBUG - Starting new HTTPS connection (1): www.googleapis.com:443
[2022-11-17 23:33:28,757] DEBUG - https://www.googleapis.com:443 "GET /youtube/v3/videos?key=AIzaSyDfv2ISoNjVh2oX2JRJUQ1loS-voHH3GlI&fields=items(snippet(description,tags))&part=snippet&id=Q0A35ZfgwHA HTTP/1.1" 200 None
[2022-11-17 23:33:28,759] DEBUG - Starting new HTTPS connection (1): www.googleapis.com:443
[2022-11-17 23:33:28,816] DEBUG - https://www.googleapis.com:443 "GET /youtube/v3/videos?key=AIzaSyDfv2ISoNjVh2oX2JRJUQ1loS-voHH3GlI&fields=items(snippet(description,tags))&part=snippet&id=WoCoyHyUxT4 HTTP/1.1" 200 None
[2022-11-17 23:33:28,819] DEBUG - Starting new HTTPS connection (1): www.googleapis.com:443
[2022-11-17 23:33:28,875] DEBUG - https://www.googleapis.com:443 "GET /youtube/v3/videos?key=AIzaSyDfv2ISoNjVh2oX2JRJUQ1loS-voHH3GlI&fields=items(snippet(description,tags))&part=snippet&id=Gxzy4vRqhBY HTTP/1.1" 200 None
[2022-11-17 23:33:28,876] DEBUG - Starting new HTTPS connection (1): www.googleapis.com:443
[2022-11-17 23:33:28,926] DEBUG - https://www.googleapis.com:443 "GET /youtube/v3/videos?key=AIzaSyDfv2ISoNjVh2oX2JRJUQ1loS-voHH3GlI&fields=items(snippet(description,tags))&part=snippet&id=oGy_uK6FrgE HTTP/1.1" 200 None
[2022-11-17 23:33:28,930] DEBUG - Starting new HTTPS connection (1): www.googleapis.com:443
[2022-11-17 23:33:28,988] DEBUG - https://www.googleapis.com:443 "GET /youtube/v3/videos?key=AIzaSyDfv2ISoNjVh2oX2JRJUQ1loS-voHH3GlI&fields=items(snippet(description,tags))&part=snippet&id=W8ykZNSLDqE HTTP/1.1" 200 None
[2022-11-17 23:33:28,990] DEBUG - Starting new HTTPS connection (1): www.googleapis.com:443
[2022-11-17 23:33:29,040] DEBUG - https://www.googleapis.com:443 "GET /youtube/v3/videos?key=AIzaSyDfv2ISoNjVh2oX2JRJUQ1loS-voHH3GlI&fields=items(snippet(description,tags))&part=snippet&id=V7Mt6Z30eaY HTTP/1.1" 200 None
[2022-11-17 23:33:29,042] DEBUG - Starting new HTTPS connection (1): www.googleapis.com:443
[2022-11-17 23:33:29,099] DEBUG - https://www.googleapis.com:443 "GET /youtube/v3/videos?key=AIzaSyDfv2ISoNjVh2oX2JRJUQ1loS-voHH3GlI&fields=items(snippet(description,tags))&part=snippet&id=jZ_BzV0DA58 HTTP/1.1" 200 None
[2022-11-17 23:33:29,101] DEBUG - Starting new HTTPS connection (1): www.googleapis.com:443
[2022-11-17 23:33:29,158] DEBUG - https://www.googleapis.com:443 "GET /youtube/v3/videos?key=AIzaSyDfv2ISoNjVh2oX2JRJUQ1loS-voHH3GlI&fields=items(snippet(description,tags))&part=snippet&id=iNSFITFh-Vk HTTP/1.1" 200 None
[2022-11-17 23:33:29,160] DEBUG - Starting new HTTPS connection (1): www.googleapis.com:443
[2022-11-17 23:33:29,228] DEBUG - https://www.googleapis.com:443 "GET /youtube/v3/videos?key=AIzaSyDfv2ISoNjVh2oX2JRJUQ1loS-voHH3GlI&fields=items(snippet(description,tags))&part=snippet&id=J6rVaFzOEP8 HTTP/1.1" 200 None
[2022-11-17 23:33:29,231] DEBUG - Starting new HTTPS connection (1): www.googleapis.com:443
[2022-11-17 23:33:29,293] DEBUG - https://www.googleapis.com:443 "GET /youtube/v3/videos?key=AIzaSyDfv2ISoNjVh2oX2JRJUQ1loS-voHH3GlI&fields=items(snippet(description,tags))&part=snippet&id=R_cZWY8lTak HTTP/1.1" 200 None
[2022-11-17 23:33:29,295] DEBUG - Starting new HTTPS connection (1): www.googleapis.com:443
[2022-11-17 23:33:29,352] DEBUG - https://www.googleapis.com:443 "GET /youtube/v3/videos?key=AIzaSyDfv2ISoNjVh2oX2JRJUQ1loS-voHH3GlI&fields=items(snippet(description,tags))&part=snippet&id=u6VfH5HP71c HTTP/1.1" 200 None
[2022-11-17 23:33:29,354] DEBUG - Starting new HTTPS connection (1): www.googleapis.com:443
[2022-11-17 23:33:29,410] DEBUG - https://www.googleapis.com:443 "GET /youtube/v3/videos?key=AIzaSyDfv2ISoNjVh2oX2JRJUQ1loS-voHH3GlI&fields=items(snippet(description,tags))&part=snippet&id=2tZs2S5gmg0 HTTP/1.1" 200 None
[2022-11-17 23:33:29,413] DEBUG - Starting new HTTPS connection (1): www.googleapis.com:443
[2022-11-17 23:33:29,470] DEBUG - https://www.googleapis.com:443 "GET /youtube/v3/videos?key=AIzaSyDfv2ISoNjVh2oX2JRJUQ1loS-voHH3GlI&fields=items(snippet(description,tags))&part=snippet&id=HCS_Nxo23X0 HTTP/1.1" 200 None
[2022-11-17 23:33:29,473] DEBUG - Starting new HTTPS connection (1): www.googleapis.com:443
[2022-11-17 23:33:29,531] DEBUG - https://www.googleapis.com:443 "GET /youtube/v3/videos?key=AIzaSyDfv2ISoNjVh2oX2JRJUQ1loS-voHH3GlI&fields=items(snippet(description,tags))&part=snippet&id=glphNNx0uUc HTTP/1.1" 200 None
[2022-11-17 23:33:29,534] DEBUG - Starting new HTTPS connection (1): www.googleapis.com:443
[2022-11-17 23:33:29,588] DEBUG - https://www.googleapis.com:443 "GET /youtube/v3/videos?key=AIzaSyDfv2ISoNjVh2oX2JRJUQ1loS-voHH3GlI&fields=items(snippet(description,tags))&part=snippet&id=ugnFBfaSH6o HTTP/1.1" 200 None
[2022-11-17 23:33:29,591] DEBUG - Starting new HTTPS connection (1): www.googleapis.com:443
[2022-11-17 23:33:29,649] DEBUG - https://www.googleapis.com:443 "GET /youtube/v3/videos?key=AIzaSyDfv2ISoNjVh2oX2JRJUQ1loS-voHH3GlI&fields=items(snippet(description,tags))&part=snippet&id=psuhiSz8oKQ HTTP/1.1" 200 None
[2022-11-17 23:33:29,652] DEBUG - Starting new HTTPS connection (1): www.googleapis.com:443
[2022-11-17 23:33:29,726] DEBUG - https://www.googleapis.com:443 "GET /youtube/v3/videos?key=AIzaSyDfv2ISoNjVh2oX2JRJUQ1loS-voHH3GlI&fields=items(snippet(description,tags))&part=snippet&id=towPTkh7byY HTTP/1.1" 200 None
[2022-11-17 23:33:29,728] DEBUG - Starting new HTTPS connection (1): www.googleapis.com:443
[2022-11-17 23:33:29,792] DEBUG - https://www.googleapis.com:443 "GET /youtube/v3/videos?key=AIzaSyDfv2ISoNjVh2oX2JRJUQ1loS-voHH3GlI&fields=items(snippet(description,tags))&part=snippet&id=c0d4QXxczpE HTTP/1.1" 200 None
[2022-11-17 23:33:29,794] DEBUG - Starting new HTTPS connection (1): www.googleapis.com:443
[2022-11-17 23:33:29,851] DEBUG - https://www.googleapis.com:443 "GET /youtube/v3/videos?key=AIzaSyDfv2ISoNjVh2oX2JRJUQ1loS-voHH3GlI&fields=items(snippet(description,tags))&part=snippet&id=nQEMdSI5o3Y HTTP/1.1" 200 None
[2022-11-17 23:33:29,854] DEBUG - Starting new HTTPS connection (1): www.googleapis.com:443
[2022-11-17 23:33:29,925] DEBUG - https://www.googleapis.com:443 "GET /youtube/v3/videos?key=AIzaSyDfv2ISoNjVh2oX2JRJUQ1loS-voHH3GlI&fields=items(snippet(description,tags))&part=snippet&id=Czg8C3wEpME HTTP/1.1" 200 None
[2022-11-17 23:33:29,927] DEBUG - Hashtags ['#keeponcoding', '#tech', '#programming', '#techwithtim', '#softwareengineer', '#shorts', '#softwareengineer', '#programming', '#habits', '#techlead', '#techlead', '#collegedropout', '#softwareengineer', '#ios', '#faang', '#swift', '#softwaredeveloper', '#iosdeveloper', '#techlead', '#softwareengineer', '#coding', '#googlesoftwareengineer', '#nishantchahar', '#microsoft', '#softwareengineer', '#faangm', '#faang', '#nsut', '#engineering', '#internship', '#college', '#flathunting', '#viewsonic', '#softwareengineersalary', '#softwareengineerincome', '#viewsonicmonitor', '#monitorviewsonic', '#pirateking', '#krish', '#training', '#success', '#softwareengineering', '#coding', '#codingadvice', '#softwareengineeringadvice', '#codinginterviews', '#ad', '#scalerusa', '#upskilling', '#engineeringwithutsav', '#softwareengineeringwithutsav', '#softwareengineering', '#utsavized']
[2022-11-17 23:33:29,927] DEBUG - Top Hashtags ['#softwareengineer', '#techlead', '#programming', '#faang', '#coding']
[2022-11-17 23:33:29,927] DEBUG - Tags ['how to be successful', 'software engineering', 'coding', 'tech', 'habits of successful people', 'life of luba', 'developer habits', 'software engineering habits', 'growth mindset', 'developer tips', 'software engineering', 'software engineer day in life', 'software engineering salary', 'keep on coding', 'software developer', 'software developer career', 'software developer salary', 'programmer', 'programming', 'software engineer', 'what makes a great software engineer', 'what makes a good software engineer', 'most successful software engineers', 'successful software engineer', 'successful software developer', 'great software engineer', 'tips to become a software engineer', 'how to become a better software developer', 'what makes a good software developer', 'habits of successful software engineers', 'best software engineer in the world', 'how to become the best software engineer', 'google software engineer', 'great software developer', 'tech with tim', 'the 5 steps to become a software engineer', 'what is a software engineer', 'what does a software engineer need to know', 'how to become a software engineer', 'software engineer', 'programming expert', 'programmer', 'how to become a programmer', 'how to become a coder', 'coder', 'software engineer vs programmer', 'what is the difference between a software engineer and a programmer', 'advanced programming', 'software engineering tools', 'software design', 'software architecture', 'efficient coding', 'software engineer', 'software engineering', 'software developer', 'programming', 'computer science', 'software development', 'code', 'coding', 'software engineer day in life', 'programmer', 'software developer career', 'learn to code', 'day in the life of a software engineer', 'developer', 'learning to code', 'how to code', 'why not to be a software engineer', 'gyasi linje', 'why you should not be a software engineer', 'reasons not to become a software engineer', 'software development advice', 'why you shouldnt become a', 'cs', 'software engineer', 'software developer', 'dev', 'coder', 'programmer', 'what professional software engineers actually do', 'software engineer', 'habits of successful software engineer', '5 habits of successful software engineers in hindi', '7 habits of successful software engineers in hindi', 'software engineering', 'habits of software engineer', 'habits of highly successful students', '3 habits of highly successful students', '7 habits of highly effective software developers', 'the seven habits of highly effective people (book)', 'successful software engineer', 'become successful software engineer', 'soleyman shahir', 'tips to build a business as a software engineer', 'how to build a business as a software engineer', 'how to start a business as a software engineer', 'software engineer entrepreneur', 'entrepreneurship tips for software engineers', 'entrepreneurship tips for software developers', 'can software engineers become entrepreneurs', 'can software engineers start business', 'running a business as a software engineer', 'running a business as a software developer', 'how to launch a startup as a software engineer', 'software developer vs software engineer', 'simple programmer', 'software developer day in the life', 'software developer career', 'software engineer', 'software developer', 'programming jobs', 'software development', 'software engineering', 'software developer interview', 'techlead', 'engineer', 'technology', 'amazon', 'google', 'developer', 'apple', 'googler', 'tech', 'swe', 'software', 'facebook', 'computer science', 'cs', 'fb', 'software engineer life', 'software engineer intern', 'computer science student', 'fang', 'computer science lecture', 'software engineer day in life', 'amazon', 'techlead', 'computer science', 'computer science major', 'facebook', 'apple', 'computer science crash course', 'computer science vs software engineering', 'software engineering', 'software engineer', 'computer science vs computer engineering', 'computer science for beginners', 'software engineering salary', 'google', 'netflix', 'computer science jobs', 'engineer', 'technology', 'developer', 'googler', 'tech', 'swe', 'software', 'cs', 'fb', 'my journey becoming a software engineer without a computer science degree', 'how i became a software engineer without a computer science degree', 'how to become a software engineer without a cs degree', 'how to become a software engineer with no technical background', 'how to become a software engineer with no experience', 'my software engineering journey from a no coding background', "everything i've learned on my journey becoming a software engineer", 'college dropout to software engineer', 'junior developer advice', 'junior developer', 'junior developer interview', 'junior dev', 'junior developer portfolio', 'junior developer job', 'jr dev portfolio', 'jr dev jobs', 'jr developer', 'jr developer salary', 'jr software developer', 'jr software engineer', 'jr software developer interview', 'jr software engineer interview', 'junior software engineer', 'junior software developer salary', 'software developer career', 'software developer advice', 'software developer career advice', 'business', 'tech', 'startup', 'execution', 'business plan', 'success', 'ideas', 'software engineer', 'advice', 'tips', 'techlead', 'software developer', 'developer', 'software development', 'dev', 'web development', 'software engineer', 'software engineer skills', 'software engineering', 'object oriented programming', 'software engineering career', 'successful software engineer', 'software development', 'coding', 'software engineer', 'software engineering', 'self taught programmer', 'software developer', 'programmer', 'computer science', 'programming', 'how to become a software engineer', 'how to become a software engineer without a degree', 'google', 'faang', 'how to learn programming', 'how to learn coding', 'learn to code', 'self taught software engineer', 'software engineer no degree', 'computer science degree', 'coding bootcamp', 'how to become a software engineer', 'nishant chahar', 'software engineering', 'software engineer', 'software developer', 'engineer', 'developer', 'software engineer salary', 'software engineer benefits', 'why software engineer', 'software engineer life', 'software engineer day in life', 'software developer career', 'programming', 'how much money do software engineers make', 'software developer salary', 'programmer', 'how to learn coding', 'learn coding', 'which coding language to learn first', 'microsoft', 'google', 'amazon', 'pirate king', 'software engineer', 'software engineer salary', 'software engineer income', 'software engineer total compensation', 'software engineer salary be like', 'software engineer income be like', 'computer science', 'programming', 'programmer', 'joma tech', 'tech lead', 'coding', 'software engineer career advice', 'google early career software engineer salary', 'software developer career advice', 'software engineer salary in usa', 'software engineer income in usa', 'software engineer income breakdown', 'education', 'computer science', 'software engineer', 'software engineering', 'computer', 'interview', 'success', 'life tips', 'life hacks', 'software engineer', 'how to become a software engineer', 'software developer', 'software engineering', 'become a software engineer', 'how to become a software developer', 'software development', 'day in the life of a software engineer', 'how to become a good software engineer', 'become a web developer', 'how to become a programmer', 'successful software engineer story', 'habits of successful software engineer', 'most successful software engineers', 'krish', 'krish training', 'krish tutorials', 'computer science in ghana', 'software engineering ghana', 'tech in ghana', 'computer programming in ghana', 'computer science course ghana', 'computer science legon', 'computer science knust', 'studying computer science in ghana', 'working as a software engineer in ghana', 'coldsis', 'ayaana ghana', 'coldsis ayaana', 'software engineer in ghana', 'developers in ghana', 'mobile application developers in ghana', 'artificial intelligence ghana', 'software company ghana', 'tech company ghana', 'it consulting ghana', 'software engineering advice', 'software engineering tips', 'technical interview tips', 'software engineer day in the life', 'leetcode coding questions', 'coding interviews', 'software engineering tutorials', 'programming advice', 'coding advice', 'coding tips and tricks', 'coding tips', 'programming tips and tricks', 'computer science advice', 'software developer advice', 'software develop tips', 'computer science tips', 'how to become a software engineer', 'how to become a software developer']
[2022-11-17 23:33:29,928] DEBUG - Top Tags ['software engineer', 'software engineering', 'software developer', 'programmer', 'computer science', 'software developer career', 'programming', 'how to become a software engineer', 'software development', 'developer', 'coding', 'tech']
[2022-11-17 23:33:41,025] CRITICAL - Failed to generate audio
[2022-11-17 23:33:41,025] INFO - Getting video script.
[2022-11-17 23:33:41,025] INFO - message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
[2022-11-17 23:33:41,025] DEBUG - api_version=None data='{"model": "text-davinci-002", "prompt": "Write a list of unique and interesting keywords relating to basic computer science:\\n\\n-", "temperature": 1, "max_tokens": 128, "top_p": 1, "frequency_penalty": 0, "presence_penalty": 0, "n": 1, "stop": "", "echo": false}' message='Post details'
[2022-11-17 23:33:42,985] DEBUG - https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 481
[2022-11-17 23:33:42,985] INFO - message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1816 request_id=f15ebe78eeba394db0476e49fa4e1716 response_code=200
[2022-11-17 23:33:42,985] INFO - message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
[2022-11-17 23:33:42,986] DEBUG - api_version=None data='{"model": "text-curie-001", "prompt": "Write a list of 5 interesting beginner topics on where Cloud computing is used in the context of computer science:\\n-", "temperature": 0.7, "max_tokens": 256, "top_p": 1, "frequency_penalty": 0, "presence_penalty": 0, "n": 1, "stop": "", "echo": false}' message='Post details'
[2022-11-17 23:33:43,494] DEBUG - https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 410
[2022-11-17 23:33:43,495] INFO - message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=360 request_id=3786b5d15749c8fe4eb86b543896fb2b response_code=200
[2022-11-17 23:33:43,495] INFO - message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
[2022-11-17 23:33:43,495] DEBUG - api_version=None data='{"model": "text-davinci-002", "prompt": "Write a short, unique and interesting title relating to the theory of Cloud Computing Security in the form of a video essay title without involving numbers:", "temperature": 1, "max_tokens": 20, "top_p": 1, "frequency_penalty": 0, "presence_penalty": 0, "n": 1, "stop": "", "echo": false}' message='Post details'
[2022-11-17 23:33:44,287] DEBUG - https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 321
[2022-11-17 23:33:44,287] INFO - message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=648 request_id=c0eccd655f4b090f190452a48cfdf5a1 response_code=200
[2022-11-17 23:33:44,318] DEBUG - Keyword Cloud computing, Topics ['Cloud Computing Fundamentals', 'Cloud Computing Security', 'Cloud Computing Platforms', 'Cloud Computing Development Tools', 'Cloud Computing Applications'], Topic Cloud Computing Security: The Future of Data Protection
[2022-11-17 23:33:44,318] INFO - message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
[2022-11-17 23:33:44,318] DEBUG - api_version=None data='{"model": "text-davinci-002", "prompt": "Write a list of beginner topics relating to what is Cloud Computing Security: The Future of Data Protection in the context of computer science:\\n\\n", "temperature": 0, "max_tokens": 256, "top_p": 1, "frequency_penalty": 0, "presence_penalty": 0, "n": 1, "stop": "", "echo": false}' message='Post details'
[2022-11-17 23:33:46,617] DEBUG - https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 516
[2022-11-17 23:33:46,617] INFO - message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=2156 request_id=70beba41afa2f95cd6b505468c549911 response_code=200
[2022-11-17 23:33:46,617] DEBUG - topic: Cloud Computing Security: The Future of Data Protection, sub topics 
-What is cloud computing security?
-What are the benefits of cloud computing security?
-What are the challenges of cloud computing security?
-How can cloud computing security be used to protect data?
-What is the future of cloud computing security?
[2022-11-17 23:33:46,617] DEBUG - getting summary for topic
[2022-11-17 23:33:46,617] INFO - message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
[2022-11-17 23:33:46,617] DEBUG - api_version=None data='{"model": "text-curie-001", "prompt": "Write a summary for the following topic in the form of a youtube description in the context of computer science:\\n\\ntopic: Cloud Computing Security: The Future of Data Protection\\n\\nsummary:", "temperature": 0, "max_tokens": 256, "top_p": 1, "frequency_penalty": 0, "presence_penalty": 0, "n": 1, "stop": "", "echo": false}' message='Post details'
[2022-11-17 23:33:47,242] DEBUG - https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 486
[2022-11-17 23:33:47,243] INFO - message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=478 request_id=0d4186b441dea500102907a4cdb6a2a8 response_code=200
[2022-11-17 23:33:47,243] INFO - message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
[2022-11-17 23:33:47,243] DEBUG - api_version=None data='{"model": "text-davinci-002", "prompt": "Expand greatly upon the topic of Cloud Computing Security: The Future of Data Protection in the context of computer science summarised for a 9th grader:\\n\\n1. What is cloud computing security?\\n\\n", "temperature": 1, "max_tokens": 128, "top_p": 1, "frequency_penalty": 0, "presence_penalty": 0, "n": 1, "stop": ["2.", "1."], "echo": false}' message='Post details'
[2022-11-17 23:33:47,730] DEBUG - https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 263
[2022-11-17 23:33:47,730] INFO - message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=334 request_id=509b7ae631056dd0f5f2fb26399b9049 response_code=200
[2022-11-17 23:33:47,730] CRITICAL - Failed to generate video script
[2022-11-17 23:33:47,730] INFO - Getting video script.
[2022-11-17 23:33:47,731] INFO - message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
[2022-11-17 23:33:47,731] DEBUG - api_version=None data='{"model": "text-davinci-002", "prompt": "Write a list of unique and interesting keywords relating to basic computer science:\\n\\n-", "temperature": 1, "max_tokens": 128, "top_p": 1, "frequency_penalty": 0, "presence_penalty": 0, "n": 1, "stop": "", "echo": false}' message='Post details'
[2022-11-17 23:33:49,961] DEBUG - https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 387
[2022-11-17 23:33:49,962] INFO - message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=2086 request_id=0540c2a767d8ce30007836d6a33a8d78 response_code=200
[2022-11-17 23:33:49,962] INFO - message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
[2022-11-17 23:33:49,962] DEBUG - api_version=None data='{"model": "text-curie-001", "prompt": "Write a list of 5 interesting beginner topics on where algorithms is used in the context of computer science:\\n-", "temperature": 0.7, "max_tokens": 256, "top_p": 1, "frequency_penalty": 0, "presence_penalty": 0, "n": 1, "stop": "", "echo": false}' message='Post details'
[2022-11-17 23:33:50,459] DEBUG - https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 383
[2022-11-17 23:33:50,459] INFO - message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=348 request_id=36be10c449e51634ada5b7766dafa3f0 response_code=200
[2022-11-17 23:33:50,459] INFO - message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
[2022-11-17 23:33:50,459] DEBUG - api_version=None data='{"model": "text-davinci-002", "prompt": "Write a short, unique and interesting title relating to the theory of Algorithm analysis  in the form of a video essay title without involving numbers:", "temperature": 1, "max_tokens": 20, "top_p": 1, "frequency_penalty": 0, "presence_penalty": 0, "n": 1, "stop": "", "echo": false}' message='Post details'
[2022-11-17 23:33:51,560] DEBUG - https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 309
[2022-11-17 23:33:51,560] INFO - message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=957 request_id=bf8d5685a2a01bb7b0ac02eb38ebd912 response_code=200
[2022-11-17 23:33:51,601] DEBUG - Keyword algorithms, Topics ['Algorithm design ', 'Algorithm analysis ', 'Algorithm performance ', 'Algorithm design patterns ', 'Algorithm analysis patterns'], Topic A look into the world of Algorithm analysis
[2022-11-17 23:33:51,601] INFO - message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
[2022-11-17 23:33:51,601] DEBUG - api_version=None data='{"model": "text-davinci-002", "prompt": "Write a list of beginner topics relating to what is A look into the world of Algorithm analysis in the context of computer science:\\n\\n", "temperature": 0, "max_tokens": 256, "top_p": 1, "frequency_penalty": 0, "presence_penalty": 0, "n": 1, "stop": "", "echo": false}' message='Post details'
[2022-11-17 23:33:55,564] DEBUG - https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 520
[2022-11-17 23:33:55,564] INFO - message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=3815 request_id=3ef40d7e4ac8e117d493d8feea15eb68 response_code=200
[2022-11-17 23:33:55,565] DEBUG - topic: A look into the world of Algorithm analysis, sub topics 
-What is an algorithm?
-What are the different types of algorithms?
-What is algorithm analysis?
-What are the different methods of algorithm analysis?
-What are the benefits of algorithm analysis?
-What are some common issues with algorithm analysis?
[2022-11-17 23:33:55,565] DEBUG - getting summary for topic
[2022-11-17 23:33:55,565] INFO - message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
[2022-11-17 23:33:55,565] DEBUG - api_version=None data='{"model": "text-curie-001", "prompt": "Write a summary for the following topic in the form of a youtube description in the context of computer science:\\n\\ntopic: A look into the world of Algorithm analysis\\n\\nsummary:", "temperature": 0, "max_tokens": 256, "top_p": 1, "frequency_penalty": 0, "presence_penalty": 0, "n": 1, "stop": "", "echo": false}' message='Post details'
[2022-11-17 23:33:56,154] DEBUG - https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 432
[2022-11-17 23:33:56,154] INFO - message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=436 request_id=4de6c529996dc93c935e366bebb7241f response_code=200
[2022-11-17 23:33:56,154] INFO - message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
[2022-11-17 23:33:56,155] DEBUG - api_version=None data='{"model": "text-davinci-002", "prompt": "Expand greatly upon the topic of A look into the world of Algorithm analysis in the context of computer science summarised for a 9th grader:\\n\\n1. What is an algorithm?\\n\\n", "temperature": 1, "max_tokens": 128, "top_p": 1, "frequency_penalty": 0, "presence_penalty": 0, "n": 1, "stop": ["2.", "1."], "echo": false}' message='Post details'
[2022-11-17 23:33:59,582] DEBUG - https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 501
[2022-11-17 23:33:59,583] INFO - message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=3284 request_id=34ec2608e12dc9af484f5dff185f2e31 response_code=200
[2022-11-17 23:33:59,583] INFO - message='Request to OpenAI API' method=post path=https://api.openai.com/v1/edits
[2022-11-17 23:33:59,583] DEBUG - api_version=None data='{"model": "text-davinci-edit-001", "input": "An algorithm is a set of instructions or rules that are followed in order to solve a problem or complete a task. Algorithms can be written in any language, but they are most commonly written in mathematical or pseudocode languages.", "instruction": "Replace all non-characters with their spoken counterpart. And fix grammar.", "temperature": 0, "top_p": 1}' message='Post details'
[2022-11-17 23:34:03,161] DEBUG - https://api.openai.com:443 "POST /v1/edits HTTP/1.1" 200 379
[2022-11-17 23:34:03,161] INFO - message='OpenAI API response' path=https://api.openai.com/v1/edits processing_ms=3436 request_id=e30e53a1f1523ad2ae68b7fabb69073d response_code=200
[2022-11-17 23:34:03,162] INFO - message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
[2022-11-17 23:34:03,162] DEBUG - api_version=None data='{"model": "text-davinci-002", "prompt": "Expand greatly upon the topic of A look into the world of Algorithm analysis in the context of computer science summarised for a 9th grader:\\n\\n1. What is an algorithm?\\n\\nAn algorithm is a set of instructions or rules that are followed in order to solve a problem or complete a task. Algorithms can be written in any language, but they are most commonly written in mathematical or pseudo code languages.\\n\\n2. What are the different types of algorithms?\\n\\n", "temperature": 1, "max_tokens": 128, "top_p": 1, "frequency_penalty": 0, "presence_penalty": 0, "n": 1, "stop": ["3.", "2."], "echo": false}' message='Post details'
[2022-11-17 23:34:06,376] DEBUG - https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 584
[2022-11-17 23:34:06,376] INFO - message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=3070 request_id=a78d327ecc07776cef3fb946e4340b92 response_code=200
[2022-11-17 23:34:06,376] INFO - message='Request to OpenAI API' method=post path=https://api.openai.com/v1/edits
[2022-11-17 23:34:06,376] DEBUG - api_version=None data='{"model": "text-davinci-edit-001", "input": "There are many different types of algorithms, but some of the most common include:\\n\\n- Sorting algorithms, which are used to order data\\n- Search algorithms, which are used to find specific items in a data set\\n- Pathfinding algorithms, which are used to find the shortest or most efficient route between two points", "instruction": "Replace all non-characters with their spoken counterpart. And fix grammar.", "temperature": 0, "top_p": 1}' message='Post details'
[2022-11-17 23:34:11,222] DEBUG - https://api.openai.com:443 "POST /v1/edits HTTP/1.1" 200 471
[2022-11-17 23:34:11,222] INFO - message='OpenAI API response' path=https://api.openai.com/v1/edits processing_ms=4702 request_id=7d333fe8a11410635e93c33694d86515 response_code=200
[2022-11-17 23:34:11,222] INFO - message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
[2022-11-17 23:34:11,222] DEBUG - api_version=None data='{"model": "text-davinci-002", "prompt": "Expand greatly upon the topic of A look into the world of Algorithm analysis in the context of computer science summarised for a 9th grader:\\n\\n1. What is an algorithm?\\n\\nAn algorithm is a set of instructions or rules that are followed in order to solve a problem or complete a task. Algorithms can be written in any language, but they are most commonly written in mathematical or pseudo code languages.\\n\\n2. What are the different types of algorithms?\\n\\nThere are many different types of algorithms, but some of the most common ones include:\\n\\n Sorting algorithms, which are used to order data.\\n Search algorithms, which are used to find specific items in a data set.\\n Pathfinding algorithms, which are used to find the shortest or most efficient route between two points.\\n\\n3. What is algorithm analysis?\\n\\n", "temperature": 1, "max_tokens": 128, "top_p": 1, "frequency_penalty": 0, "presence_penalty": 0, "n": 1, "stop": ["4.", "3."], "echo": false}' message='Post details'
[2022-11-17 23:34:14,886] DEBUG - https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 681
[2022-11-17 23:34:14,888] INFO - message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=3522 request_id=8a4d90b7b7ffbc05aa6d0cda9440081c response_code=200
[2022-11-17 23:34:14,888] INFO - message='Request to OpenAI API' method=post path=https://api.openai.com/v1/edits
[2022-11-17 23:34:14,888] DEBUG - api_version=None data='{"model": "text-davinci-edit-001", "input": "Algorithm analysis is the process of determining the complexity of an algorithm. This allows computer scientists to understand how efficient an algorithm is and how it will perform in different situations.\\n \\n Algorithm analysis is used to analyze the best, worst, and average case scenarios for an algorithm. This information is then used to improve the algorithm or to choose a different algorithm altogether.", "instruction": "Replace all non-characters with their spoken counterpart. And fix grammar.", "temperature": 0, "top_p": 1}' message='Post details'
[2022-11-17 23:34:19,476] DEBUG - https://api.openai.com:443 "POST /v1/edits HTTP/1.1" 200 560
[2022-11-17 23:34:19,476] INFO - message='OpenAI API response' path=https://api.openai.com/v1/edits processing_ms=4447 request_id=80495bae290297bb52aa3a810c81eb9f response_code=200
[2022-11-17 23:34:19,477] INFO - message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
[2022-11-17 23:34:19,477] DEBUG - api_version=None data='{"model": "text-davinci-002", "prompt": "Expand greatly upon the topic of A look into the world of Algorithm analysis in the context of computer science summarised for a 9th grader:\\n\\n1. What is an algorithm?\\n\\nAn algorithm is a set of instructions or rules that are followed in order to solve a problem or complete a task. Algorithms can be written in any language, but they are most commonly written in mathematical or pseudo code languages.\\n\\n2. What are the different types of algorithms?\\n\\nThere are many different types of algorithms, but some of the most common ones include:\\n\\n Sorting algorithms, which are used to order data.\\n Search algorithms, which are used to find specific items in a data set.\\n Pathfinding algorithms, which are used to find the shortest or most efficient route between two points.\\n\\n3. What is algorithm analysis?\\n\\nAlgorithm analysis is the process of determining the complexity of an algorithm. This allows computer scientists to understand how efficient an algorithm is and how it will perform in different situations. \\n \\nAlgorithm analysis is used to analyze the best, worst, and average case scenarios for an algorithm. This information is then used to improve the algorithm or to choose a different algorithm altogether.\\n\\n4. What are the different methods of algorithm analysis?\\n\\n", "temperature": 1, "max_tokens": 128, "top_p": 1, "frequency_penalty": 0, "presence_penalty": 0, "n": 1, "stop": ["5.", "4."], "echo": false}' message='Post details'
[2022-11-17 23:34:23,460] DEBUG - https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 651
[2022-11-17 23:34:23,460] INFO - message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=3839 request_id=3b5358b7498fc95a471f48773579d234 response_code=200
[2022-11-17 23:34:23,460] INFO - message='Request to OpenAI API' method=post path=https://api.openai.com/v1/edits
[2022-11-17 23:34:23,461] DEBUG - api_version=None data='{"model": "text-davinci-edit-001", "input": "There are two main methods of algorithm analysis:\\n\\nAsymptotic analysis, which looks at the how the algorithm scales as the size of the input data increases. This can be done using big-O notation.\\n\\nTiming analysis, which looks at how long the algorithm takes to run in real-world conditions. This can be affected by things like the processor speed and the amount of memory available.", "instruction": "Replace all non-characters with their spoken counterpart. And fix grammar.", "temperature": 0, "top_p": 1}' message='Post details'
[2022-11-17 23:34:26,600] DEBUG - https://api.openai.com:443 "POST /v1/edits HTTP/1.1" 200 529
[2022-11-17 23:34:26,600] INFO - message='OpenAI API response' path=https://api.openai.com/v1/edits processing_ms=2997 request_id=3d4caaf6522cca156cc251aaa9e22e61 response_code=200
[2022-11-17 23:34:26,600] INFO - message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
[2022-11-17 23:34:26,600] DEBUG - api_version=None data='{"model": "text-davinci-002", "prompt": "Expand greatly upon the topic of A look into the world of Algorithm analysis in the context of computer science summarised for a 9th grader:\\n\\n1. What is an algorithm?\\n\\nAn algorithm is a set of instructions or rules that are followed in order to solve a problem or complete a task. Algorithms can be written in any language, but they are most commonly written in mathematical or pseudo code languages.\\n\\n2. What are the different types of algorithms?\\n\\nThere are many different types of algorithms, but some of the most common ones include:\\n\\n Sorting algorithms, which are used to order data.\\n Search algorithms, which are used to find specific items in a data set.\\n Pathfinding algorithms, which are used to find the shortest or most efficient route between two points.\\n\\n3. What is algorithm analysis?\\n\\nAlgorithm analysis is the process of determining the complexity of an algorithm. This allows computer scientists to understand how efficient an algorithm is and how it will perform in different situations. \\n \\nAlgorithm analysis is used to analyze the best, worst, and average case scenarios for an algorithm. This information is then used to improve the algorithm or to choose a different algorithm altogether.\\n\\n4. What are the different methods of algorithm analysis?\\n\\nThere are two main methods of algorithm analysis:\\n\\nAsymptotic analysis, which looks at how the algorithm scales as the size of the input data increases. This can be done using bigO notation.\\n\\nTiming analysis, which looks at how long the algorithm takes to run in realworld conditions. This can be affected by things like the processor speed and the amount of memory available.\\n\\n5. What are the benefits of algorithm analysis?\\n\\n", "temperature": 1, "max_tokens": 128, "top_p": 1, "frequency_penalty": 0, "presence_penalty": 0, "n": 1, "stop": ["6.", "5."], "echo": false}' message='Post details'
[2022-11-17 23:34:29,191] DEBUG - https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 515
[2022-11-17 23:34:29,191] INFO - message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=2437 request_id=9a4c208bd575f02a6ac731f36c43a0ea response_code=200
[2022-11-17 23:34:29,191] INFO - message='Request to OpenAI API' method=post path=https://api.openai.com/v1/edits
[2022-11-17 23:34:29,191] DEBUG - api_version=None data='{"model": "text-davinci-edit-001", "input": "There are many benefits to algorithm analysis, including:\\n\\nImproving the efficiency of algorithms.\\n\\nComparing the efficiency of different algorithms.\\n\\nPredicting the performance of algorithms in different conditions.\\n\\nDebugging algorithms.", "instruction": "Replace all non-characters with their spoken counterpart. And fix grammar.", "temperature": 0, "top_p": 1}' message='Post details'
[2022-11-17 23:34:33,178] DEBUG - https://api.openai.com:443 "POST /v1/edits HTTP/1.1" 200 389
[2022-11-17 23:34:33,178] INFO - message='OpenAI API response' path=https://api.openai.com/v1/edits processing_ms=3845 request_id=c77ed342b761e3a9603fa82323e34c68 response_code=200
[2022-11-17 23:34:33,178] INFO - message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
[2022-11-17 23:34:33,178] DEBUG - api_version=None data='{"model": "text-davinci-002", "prompt": "Expand greatly upon the topic of A look into the world of Algorithm analysis in the context of computer science summarised for a 9th grader:\\n\\n1. What is an algorithm?\\n\\nAn algorithm is a set of instructions or rules that are followed in order to solve a problem or complete a task. Algorithms can be written in any language, but they are most commonly written in mathematical or pseudo code languages.\\n\\n2. What are the different types of algorithms?\\n\\nThere are many different types of algorithms, but some of the most common ones include:\\n\\n Sorting algorithms, which are used to order data.\\n Search algorithms, which are used to find specific items in a data set.\\n Pathfinding algorithms, which are used to find the shortest or most efficient route between two points.\\n\\n3. What is algorithm analysis?\\n\\nAlgorithm analysis is the process of determining the complexity of an algorithm. This allows computer scientists to understand how efficient an algorithm is and how it will perform in different situations. \\n \\nAlgorithm analysis is used to analyze the best, worst, and average case scenarios for an algorithm. This information is then used to improve the algorithm or to choose a different algorithm altogether.\\n\\n4. What are the different methods of algorithm analysis?\\n\\nThere are two main methods of algorithm analysis:\\n\\nAsymptotic analysis, which looks at how the algorithm scales as the size of the input data increases. This can be done using bigO notation.\\n\\nTiming analysis, which looks at how long the algorithm takes to run in realworld conditions. This can be affected by things like the processor speed and the amount of memory available.\\n\\n5. What are the benefits of algorithm analysis?\\n\\nThere are many benefits to algorithm analysis, including\\n\\nImproving the efficiency of algorithms\\n\\nComparing the efficiency of different algorithms\\n\\nPredicting the performance of algorithms in different conditions\\n\\nDebugging algorithms\\n\\n6. What are some common issues with algorithm analysis?\\n\\n", "temperature": 1, "max_tokens": 128, "top_p": 1, "frequency_penalty": 0, "presence_penalty": 0, "n": 1, "stop": ["7.", "6."], "echo": false}' message='Post details'
[2022-11-17 23:34:36,989] DEBUG - https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 660
[2022-11-17 23:34:36,990] INFO - message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=3666 request_id=3b85caf2b6adf4303d482bf63cde6fee response_code=200
[2022-11-17 23:34:36,990] INFO - message='Request to OpenAI API' method=post path=https://api.openai.com/v1/edits
[2022-11-17 23:34:36,990] DEBUG - api_version=None data='{"model": "text-davinci-edit-001", "input": "Some common issues with algorithm analysis include:\\n\\n Over-fitting: When an algorithm is designed to work well on a specific dataset but performs poorly on other datasets.\\n\\nUnder-fitting: When an algorithm fails to find a pattern in the data that it is supposed to be learning from.\\n\\nNoise: When meaningless data is included in the dataset, which can cause the algorithm to perform poorly.", "instruction": "Replace all non-characters with their spoken counterpart. And fix grammar.", "temperature": 0, "top_p": 1}' message='Post details'
[2022-11-17 23:34:40,658] DEBUG - https://api.openai.com:443 "POST /v1/edits HTTP/1.1" 200 540
[2022-11-17 23:34:40,659] INFO - message='OpenAI API response' path=https://api.openai.com/v1/edits processing_ms=3527 request_id=2f428f7c780d1200f85e05568986127c response_code=200
[2022-11-17 23:34:40,661] DEBUG - Starting new HTTPS connection (1): www.googleapis.com:443
[2022-11-17 23:34:40,841] DEBUG - https://www.googleapis.com:443 "GET /youtube/v3/playlists?part=id&id=UC_x5XG1OV2P6uZZ5FSM9Ttw&key=AIzaSyDfv2ISoNjVh2oX2JRJUQ1loS-voHH3GlI&maxResults=2 HTTP/1.1" 200 None
[2022-11-17 23:34:40,844] DEBUG - Starting new HTTPS connection (1): www.googleapis.com:443
[2022-11-17 23:34:41,455] DEBUG - https://www.googleapis.com:443 "GET /youtube/v3/search?part=snippet&type=video&maxResults=50&order=relevance&key=AIzaSyDfv2ISoNjVh2oX2JRJUQ1loS-voHH3GlI&q=A%20look%20into%20the%20world%20of%20Algorithm%20analysis&publishedAfter=2000-01-01T00:00:00Z&publishedBefore=3000-01-01T00:00:00Z HTTP/1.1" 200 None
[2022-11-17 23:34:41,459] DEBUG - Starting new HTTPS connection (1): www.googleapis.com:443
[2022-11-17 23:34:41,513] DEBUG - https://www.googleapis.com:443 "GET /youtube/v3/videos?key=AIzaSyDfv2ISoNjVh2oX2JRJUQ1loS-voHH3GlI&fields=items(snippet(description,tags))&part=snippet&id=PwcuTCfSIyI HTTP/1.1" 200 None
[2022-11-17 23:34:41,515] DEBUG - Starting new HTTPS connection (1): www.googleapis.com:443
[2022-11-17 23:34:41,567] DEBUG - https://www.googleapis.com:443 "GET /youtube/v3/videos?key=AIzaSyDfv2ISoNjVh2oX2JRJUQ1loS-voHH3GlI&fields=items(snippet(description,tags))&part=snippet&id=nmgFG7PUHfo HTTP/1.1" 200 None
[2022-11-17 23:34:41,570] DEBUG - Starting new HTTPS connection (1): www.googleapis.com:443
[2022-11-17 23:34:41,619] DEBUG - https://www.googleapis.com:443 "GET /youtube/v3/videos?key=AIzaSyDfv2ISoNjVh2oX2JRJUQ1loS-voHH3GlI&fields=items(snippet(description,tags))&part=snippet&id=D6xkbGLQesk HTTP/1.1" 200 None
[2022-11-17 23:34:41,622] DEBUG - Starting new HTTPS connection (1): www.googleapis.com:443
[2022-11-17 23:34:41,690] DEBUG - https://www.googleapis.com:443 "GET /youtube/v3/videos?key=AIzaSyDfv2ISoNjVh2oX2JRJUQ1loS-voHH3GlI&fields=items(snippet(description,tags))&part=snippet&id=DsXtYx7RfqE HTTP/1.1" 200 None
[2022-11-17 23:34:41,692] DEBUG - Starting new HTTPS connection (1): www.googleapis.com:443
[2022-11-17 23:34:41,756] DEBUG - https://www.googleapis.com:443 "GET /youtube/v3/videos?key=AIzaSyDfv2ISoNjVh2oX2JRJUQ1loS-voHH3GlI&fields=items(snippet(description,tags))&part=snippet&id=s04GGLoU4lQ HTTP/1.1" 200 None
[2022-11-17 23:34:41,758] DEBUG - Starting new HTTPS connection (1): www.googleapis.com:443
[2022-11-17 23:34:41,828] DEBUG - https://www.googleapis.com:443 "GET /youtube/v3/videos?key=AIzaSyDfv2ISoNjVh2oX2JRJUQ1loS-voHH3GlI&fields=items(snippet(description,tags))&part=snippet&id=d0yHBVbWqms HTTP/1.1" 200 None
[2022-11-17 23:34:41,830] DEBUG - Starting new HTTPS connection (1): www.googleapis.com:443
[2022-11-17 23:34:41,893] DEBUG - https://www.googleapis.com:443 "GET /youtube/v3/videos?key=AIzaSyDfv2ISoNjVh2oX2JRJUQ1loS-voHH3GlI&fields=items(snippet(description,tags))&part=snippet&id=oz9cEqFynHU HTTP/1.1" 200 None
[2022-11-17 23:34:41,895] DEBUG - Starting new HTTPS connection (1): www.googleapis.com:443
[2022-11-17 23:34:41,954] DEBUG - https://www.googleapis.com:443 "GET /youtube/v3/videos?key=AIzaSyDfv2ISoNjVh2oX2JRJUQ1loS-voHH3GlI&fields=items(snippet(description,tags))&part=snippet&id=vkUNH9r6UCI HTTP/1.1" 200 None
[2022-11-17 23:34:41,957] DEBUG - Starting new HTTPS connection (1): www.googleapis.com:443
[2022-11-17 23:34:42,012] DEBUG - https://www.googleapis.com:443 "GET /youtube/v3/videos?key=AIzaSyDfv2ISoNjVh2oX2JRJUQ1loS-voHH3GlI&fields=items(snippet(description,tags))&part=snippet&id=8hly31xKli0 HTTP/1.1" 200 None
[2022-11-17 23:34:42,015] DEBUG - Starting new HTTPS connection (1): www.googleapis.com:443
[2022-11-17 23:34:42,076] DEBUG - https://www.googleapis.com:443 "GET /youtube/v3/videos?key=AIzaSyDfv2ISoNjVh2oX2JRJUQ1loS-voHH3GlI&fields=items(snippet(description,tags))&part=snippet&id=itbkP50iggM HTTP/1.1" 200 None
[2022-11-17 23:34:42,079] DEBUG - Starting new HTTPS connection (1): www.googleapis.com:443
[2022-11-17 23:34:42,133] DEBUG - https://www.googleapis.com:443 "GET /youtube/v3/videos?key=AIzaSyDfv2ISoNjVh2oX2JRJUQ1loS-voHH3GlI&fields=items(snippet(description,tags))&part=snippet&id=coipzEsETf0 HTTP/1.1" 200 None
[2022-11-17 23:34:42,136] DEBUG - Starting new HTTPS connection (1): www.googleapis.com:443
[2022-11-17 23:34:42,196] DEBUG - https://www.googleapis.com:443 "GET /youtube/v3/videos?key=AIzaSyDfv2ISoNjVh2oX2JRJUQ1loS-voHH3GlI&fields=items(snippet(description,tags))&part=snippet&id=9diDWV-fOnE HTTP/1.1" 200 None
[2022-11-17 23:34:42,199] DEBUG - Starting new HTTPS connection (1): www.googleapis.com:443
[2022-11-17 23:34:42,251] DEBUG - https://www.googleapis.com:443 "GET /youtube/v3/videos?key=AIzaSyDfv2ISoNjVh2oX2JRJUQ1loS-voHH3GlI&fields=items(snippet(description,tags))&part=snippet&id=dp8PhLsUcFE HTTP/1.1" 200 None
[2022-11-17 23:34:42,254] DEBUG - Starting new HTTPS connection (1): www.googleapis.com:443
[2022-11-17 23:34:42,306] DEBUG - https://www.googleapis.com:443 "GET /youtube/v3/videos?key=AIzaSyDfv2ISoNjVh2oX2JRJUQ1loS-voHH3GlI&fields=items(snippet(description,tags))&part=snippet&id=NFF_wj5jmiQ HTTP/1.1" 200 None
[2022-11-17 23:34:42,310] DEBUG - Starting new HTTPS connection (1): www.googleapis.com:443
[2022-11-17 23:34:42,362] DEBUG - https://www.googleapis.com:443 "GET /youtube/v3/videos?key=AIzaSyDfv2ISoNjVh2oX2JRJUQ1loS-voHH3GlI&fields=items(snippet(description,tags))&part=snippet&id=2BdBfsXbST8 HTTP/1.1" 200 None
[2022-11-17 23:34:42,364] DEBUG - Starting new HTTPS connection (1): www.googleapis.com:443
[2022-11-17 23:34:42,412] DEBUG - https://www.googleapis.com:443 "GET /youtube/v3/videos?key=AIzaSyDfv2ISoNjVh2oX2JRJUQ1loS-voHH3GlI&fields=items(snippet(description,tags))&part=snippet&id=SYob6WIUaFs HTTP/1.1" 200 None
[2022-11-17 23:34:42,415] DEBUG - Starting new HTTPS connection (1): www.googleapis.com:443
[2022-11-17 23:34:42,462] DEBUG - https://www.googleapis.com:443 "GET /youtube/v3/videos?key=AIzaSyDfv2ISoNjVh2oX2JRJUQ1loS-voHH3GlI&fields=items(snippet(description,tags))&part=snippet&id=qap2MyBTSZk HTTP/1.1" 200 None
[2022-11-17 23:34:42,464] DEBUG - Starting new HTTPS connection (1): www.googleapis.com:443
[2022-11-17 23:34:42,517] DEBUG - https://www.googleapis.com:443 "GET /youtube/v3/videos?key=AIzaSyDfv2ISoNjVh2oX2JRJUQ1loS-voHH3GlI&fields=items(snippet(description,tags))&part=snippet&id=a_otxyu0mSQ HTTP/1.1" 200 None
[2022-11-17 23:34:42,518] DEBUG - Starting new HTTPS connection (1): www.googleapis.com:443
[2022-11-17 23:34:42,570] DEBUG - https://www.googleapis.com:443 "GET /youtube/v3/videos?key=AIzaSyDfv2ISoNjVh2oX2JRJUQ1loS-voHH3GlI&fields=items(snippet(description,tags))&part=snippet&id=0JUN9aDxVmI HTTP/1.1" 200 None
[2022-11-17 23:34:42,572] DEBUG - Starting new HTTPS connection (1): www.googleapis.com:443
[2022-11-17 23:34:42,631] DEBUG - https://www.googleapis.com:443 "GET /youtube/v3/videos?key=AIzaSyDfv2ISoNjVh2oX2JRJUQ1loS-voHH3GlI&fields=items(snippet(description,tags))&part=snippet&id=RPInYpI9MjY HTTP/1.1" 200 None
[2022-11-17 23:34:42,633] DEBUG - Starting new HTTPS connection (1): www.googleapis.com:443
[2022-11-17 23:34:42,689] DEBUG - https://www.googleapis.com:443 "GET /youtube/v3/videos?key=AIzaSyDfv2ISoNjVh2oX2JRJUQ1loS-voHH3GlI&fields=items(snippet(description,tags))&part=snippet&id=mhEd2rKhLNI HTTP/1.1" 200 None
[2022-11-17 23:34:42,692] DEBUG - Starting new HTTPS connection (1): www.googleapis.com:443
[2022-11-17 23:34:42,745] DEBUG - https://www.googleapis.com:443 "GET /youtube/v3/videos?key=AIzaSyDfv2ISoNjVh2oX2JRJUQ1loS-voHH3GlI&fields=items(snippet(description,tags))&part=snippet&id=9wkwJYaxmgg HTTP/1.1" 200 None
[2022-11-17 23:34:42,748] DEBUG - Starting new HTTPS connection (1): www.googleapis.com:443
[2022-11-17 23:34:42,801] DEBUG - https://www.googleapis.com:443 "GET /youtube/v3/videos?key=AIzaSyDfv2ISoNjVh2oX2JRJUQ1loS-voHH3GlI&fields=items(snippet(description,tags))&part=snippet&id=a3tJY7QWSCA HTTP/1.1" 200 None
[2022-11-17 23:34:42,804] DEBUG - Starting new HTTPS connection (1): www.googleapis.com:443
[2022-11-17 23:34:42,849] DEBUG - https://www.googleapis.com:443 "GET /youtube/v3/videos?key=AIzaSyDfv2ISoNjVh2oX2JRJUQ1loS-voHH3GlI&fields=items(snippet(description,tags))&part=snippet&id=tvAh0JZF2YE HTTP/1.1" 200 None
[2022-11-17 23:34:42,852] DEBUG - Starting new HTTPS connection (1): www.googleapis.com:443
[2022-11-17 23:34:42,894] DEBUG - https://www.googleapis.com:443 "GET /youtube/v3/videos?key=AIzaSyDfv2ISoNjVh2oX2JRJUQ1loS-voHH3GlI&fields=items(snippet(description,tags))&part=snippet&id=LHBE6Q9XlzI HTTP/1.1" 200 None
[2022-11-17 23:34:42,896] DEBUG - Hashtags ['#faang', '#coding', '#algorithms', '#whatisalgorithm', '#timecomplexity', '#whatistimecomplexity', '#timecomplexityanalysis', '#timecomplexityandbigonotation', '#calcualatingtimecomplexity', '#datastrcutures', '#datastructuretutorial', '#datastructureandalgorithmstutorial', '#datastrcutures', '#simplilearn']
[2022-11-17 23:34:42,896] DEBUG - Top Hashtags ['#datastrcutures', '#faang', '#coding', '#algorithms', '#whatisalgorithm']
[2022-11-17 23:34:42,896] DEBUG - Tags ['artificial intelligence', 'ai', 'what is ai', 'art', 'game', 'machine learning', 'technology', 'artificial intelligence robot', 'science videos', 'intelligence', 'science', 'verge science', 'automation', 'robot', 'ai robot', 'machine learning tutorial', 'a.i.', 'robots', 'pictionary', 'can you guess', 'how to', 'experiments', 'science experiments', 'educational', 'science projects', 'cool science experiments', 'brain', 'future', 'universe', 'cory zapatka', 'william poor', 'alex parkins', 'experiment', 'physics', 'education', 'the verge', 'verge', 'vox', 'science channel', 'veritasium', 'science', 'physics', 'big o notation', 'big o notation tutorial', 'big o notation explained', 'time complexity', 'time complexity tutorial', 'time complexity explained', 'big o notation python', 'big o notation java', 'computer science', 'programming', 'algorithm', 'computer', 'education', 'computers', 'computing', 'computation', 'algorithms', 'famous algorithms', 'rsa algorithm', "dijsktra's algorithm", 'furier transform', 'fast furier transform', 'cryptography', 'proportional integral derivativ algorithm', 'sorting algorithm', 'data compression', 'mp3', 'jpeg', 'mov', 'dijkstra', 'graph', 'coding', 'computer engineering', 'computer studies', 'computer algorithms', 'introduction to algorithms', 'programming algorithms', 'linear probing', 'donald knuth', 'algorithms', 'queuing theory', 'yt:stretch=4:3', 'hashing', 'compiler', 'algorithms', 'fibonacci', 'data structures and algorithms', 'coding interviews', 'coding', 'faang', 'facebook', 'how to get a job at faang', 'cracking the coding interview', 'algorithms', 'data structures', 'heap', 'linked list', 'bin', 'arrays', 'linkedlists', 'bfs', 'dfs', 'stack', 'queue', 'binary tree', 'bst', 'binary search', 'graphs', 'topological sort', 'dijistkras', 'heaps', 'hash maps', 'collision', 'merge sort', 'divide and conquer', 'selection sort', 'binary seach tree', 'breadth first search', 'techlead', 'tech lead', 'joma', 'joma tech', 'jomatech', 'algoexpert', 'clement', 'algo expert', 'computer programming', 'analysis of algorithms', 'stanford engineering', 'don knuth', 'math', 'computer science', 'mathematical structures', 'stanford', 'stanford university', 'scpd', 'lecture', 'algorithms', 'analysis', 'find complexity of algorithm', 'priori vs posteriori analysis', 'what is algorithm and its types?', 'how do you analyse an algorithm?', 'what is algorithm analysis and design?', 'how do you calculate time complexity?', 'what is big o time complexity?', 'what is algorithm with full information in hindi?', 'characteristics of algorithm', 'types of algorithm', 'time and space complexity', 'time complexity', 'dsa interview questions', 'daa interview', 'algorithm interview', 'dsa interview', 'ri', 'royal institution', 'algorithms', 'mathematics', 'cambridge analytica', 'facebook', 'data', 'digital', 'psychology', 'lecture', 'coursera algorithms', 'structure algorithms', 'data structure', 'algorithmspart1', 'algorithms part 1princeton', 'news', 'bloomberg', 'wall street', 'brexit', 'markets', 'finance', 'investing', 'business', 'donald trump', 'livestream', 'president', 'america', 'politics', 'senate', 'congress', 'davos', 'interest rates', 'janet yellen', 'gdp', 'stock market', 'equities', 'stocks', 'bitcoin', 'cryptocurency', 'federal reserve', 'algorithms rule us', 'algorithms in our lives', 'power of algorithms', 'depending on algorithms', 'big data algorithms', 'algorithms documentary', 'influence of algorithms', 'algorithms dependants', 'technology', 'backlight technology', 'technology documentary', 'documentary', 'vpro documentary', 'vpro documentaries', 'vpro backlight', 'free documentary', 'subtitled documentary', 'documentary subtitles', 'docu', 'finance', 'quantitative finance', 'risk', 'risk analysis', 'math', 'statistics', 'algorithms', 'algorithmic trading', 'quantopian', 'python', 'data science', 'beta', 'alpha', 'robert sedgewick', 'computer science (field of study)', 'analytic combinatorics', 'flajolet', 'phillipe flajolet', 'combinatorics', 'coursera', 'counting', 'mathematics (field of study)', 'algorithm (literature subject)', 'analysis of algorithms (field of study)', 'history', 'data structure', 'recursion', 'runtime', 'median', 'rotated array', 'min heap', 'kth smallest element', 'partial maxima', 'aws', 'amazon web services', 'cloud', 'cloud computing', 'aws cloud', 'computer science ii', 'csce 156', 'university of nebraska-lincoln', 'college of engineering', 'department of computer science & engineering', 'algorithms', 'algorithm analysis', 'simons institute', 'theoretical computer science', 'uc berkeley', 'computer science', 'theory of computation', 'theory of computing', 'quantifying uncertainty: stochastic adversarial and beyond', 'julian zimmert', 'time complexity analysis', 'what is time complexity?', 'time complexity and big o notation', 'time complexity in code', 'time complexity analysis code', 'time complexity of insertion sort', 'time complexity & big o notation in data structure', 'big o notation explained', 'big o notation in data structure', 'big omega notation', 'asymptotic notation', 'asymptotic complexity', 'how to analyse time complexity', 'time complexity rules', 'data structures and algorithms', 'data structures simplilearn', 'simplilearn', 'a* in ai', 'a* algo in ai', 'a* with example', 'a* in artificial intelligence', 'a* algo in artificial intelligence', 'nta net june2019', 'nta net', 'ai best explanation', 'underestimation in a*', 'overestimation in a*', 'a* all points', 'a* with full descreption', 'a* in ai with example', 'a* algorithm in artificial intelligence in hindi', 'a* algorithm', 'artificial', 'a* algorithm in ai', 'a* algorithm in artificial intelligence notes', 'a* algorithm in artificial intelligence', 'data science', 'python', 'pandas', 'matplotlib', 'numpy']
[2022-11-17 23:34:42,899] DEBUG - Top Tags ['algorithms', 'computer science', 'technology', 'science', 'physics', 'education', 'big o notation explained', 'time complexity', 'coding', 'data structures and algorithms', 'facebook', 'math', 'lecture', 'data structure', 'finance', 'python', 'data science']
[2022-11-17 23:34:53,796] DEBUG - processing 23 tts sections
[2022-11-17 23:34:53,798] DEBUG - Text-to-speech: What is an algorithm?
[2022-11-17 23:34:53,798] DEBUG - [#1] Subsection: What is an algorithm?
[2022-11-17 23:35:07,360] DEBUG - Text-to-speech: An algorithm is a set of instructions or rules that are followed in order to solve a problem or complete a task. Algorithms can be written in any language, but they are most commonly written in mathematical or pseudo code languages.
[2022-11-17 23:35:07,360] DEBUG - [#1] Subsection: An algorithm is a set of instructions or rules that are followed in order to solve a problem or complete a task. Algorithms can be written in any language, but they are most commonly written in mathematical or pseudo code languages.
[2022-11-17 23:35:39,925] DEBUG - [#2] Subsection: An algorithm is a set of instructions or rules that are followed in order to solve a problem or complete a task. Algorithms can be written in any language, but they are most commonly written in mathematical or pseudo code languages.
[2022-11-17 23:36:13,208] DEBUG - Text-to-speech: What are the different types of algorithms?
[2022-11-17 23:36:13,208] DEBUG - [#1] Subsection: What are the different types of algorithms?
[2022-11-17 23:36:30,483] DEBUG - Text-to-speech: There are many different types of algorithms, but some of the most common ones include:

 Sorting algorithms, which are used to order data.
 Search algorithms, which are used to find specific items in a data set.
 Pathfinding algorithms, which are used to find the shortest or most efficient route between two points.
[2022-11-17 23:36:30,483] DEBUG - [#1] Subsection: There are many different types of algorithms, but some of the most common ones include:

 Sorting algorithms, which are used to order data.
 Search algorithms, which are used to find specific items in a data set.
 Pathfinding algorithms, which are used to find the shortest or most efficient route between two points.
[2022-11-17 23:37:08,601] DEBUG - [#2] Subsection: There are many different types of algorithms, but some of the most common ones include:

 Sorting algorithms, which are used to order data.
 Search algorithms, which are used to find specific items in a data set.
 Pathfinding algorithms, which are used to find the shortest or most efficient route between two points.
[2022-11-17 23:37:31,992] DEBUG - [#3] Subsection: There are many different types of algorithms, but some of the most common ones include:

 Sorting algorithms, which are used to order data.
 Search algorithms, which are used to find specific items in a data set.
 Pathfinding algorithms, which are used to find the shortest or most efficient route between two points.
[2022-11-17 23:38:01,299] DEBUG - Text-to-speech: What is algorithm analysis?
[2022-11-17 23:38:01,299] DEBUG - [#1] Subsection: What is algorithm analysis?
[2022-11-17 23:38:17,040] DEBUG - Text-to-speech: Algorithm analysis is the process of determining the complexity of an algorithm. This allows computer scientists to understand how efficient an algorithm is and how it will perform in different situations. 
 
Algorithm analysis is used to analyze the best, worst, and average case scenarios for an algorithm. This information is then used to improve the algorithm or to choose a different algorithm altogether.
[2022-11-17 23:38:17,040] DEBUG - [#1] Subsection: Algorithm analysis is the process of determining the complexity of an algorithm. This allows computer scientists to understand how efficient an algorithm is and how it will perform in different situations. 
 
Algorithm analysis is used to analyze the best, worst, and average case scenarios for an algorithm. This information is then used to improve the algorithm or to choose a different algorithm altogether.
[2022-11-17 23:38:42,488] DEBUG - [#2] Subsection: Algorithm analysis is the process of determining the complexity of an algorithm. This allows computer scientists to understand how efficient an algorithm is and how it will perform in different situations. 
 
Algorithm analysis is used to analyze the best, worst, and average case scenarios for an algorithm. This information is then used to improve the algorithm or to choose a different algorithm altogether.
[2022-11-17 23:39:16,720] DEBUG - [#3] Subsection: Algorithm analysis is the process of determining the complexity of an algorithm. This allows computer scientists to understand how efficient an algorithm is and how it will perform in different situations. 
 
Algorithm analysis is used to analyze the best, worst, and average case scenarios for an algorithm. This information is then used to improve the algorithm or to choose a different algorithm altogether.
[2022-11-17 23:39:54,620] DEBUG - [#4] Subsection: Algorithm analysis is the process of determining the complexity of an algorithm. This allows computer scientists to understand how efficient an algorithm is and how it will perform in different situations. 
 
Algorithm analysis is used to analyze the best, worst, and average case scenarios for an algorithm. This information is then used to improve the algorithm or to choose a different algorithm altogether.
[2022-11-17 23:40:31,524] DEBUG - Text-to-speech: What are the different methods of algorithm analysis?
[2022-11-17 23:40:31,525] DEBUG - [#1] Subsection: What are the different methods of algorithm analysis?
[2022-11-17 23:40:53,177] DEBUG - Text-to-speech: There are two main methods of algorithm analysis:

Asymptotic analysis, which looks at how the algorithm scales as the size of the input data increases. This can be done using bigO notation.

Timing analysis, which looks at how long the algorithm takes to run in realworld conditions. This can be affected by things like the processor speed and the amount of memory available.
[2022-11-17 23:40:53,177] DEBUG - [#1] Subsection: There are two main methods of algorithm analysis:

Asymptotic analysis, which looks at how the algorithm scales as the size of the input data increases. This can be done using bigO notation.

Timing analysis, which looks at how long the algorithm takes to run in realworld conditions. This can be affected by things like the processor speed and the amount of memory available.
[2022-11-17 23:41:39,295] DEBUG - [#2] Subsection: There are two main methods of algorithm analysis:

Asymptotic analysis, which looks at how the algorithm scales as the size of the input data increases. This can be done using bigO notation.

Timing analysis, which looks at how long the algorithm takes to run in realworld conditions. This can be affected by things like the processor speed and the amount of memory available.
[2022-11-17 23:41:56,665] DEBUG - [#3] Subsection: There are two main methods of algorithm analysis:

Asymptotic analysis, which looks at how the algorithm scales as the size of the input data increases. This can be done using bigO notation.

Timing analysis, which looks at how long the algorithm takes to run in realworld conditions. This can be affected by things like the processor speed and the amount of memory available.
[2022-11-17 23:42:25,111] DEBUG - [#4] Subsection: There are two main methods of algorithm analysis:

Asymptotic analysis, which looks at how the algorithm scales as the size of the input data increases. This can be done using bigO notation.

Timing analysis, which looks at how long the algorithm takes to run in realworld conditions. This can be affected by things like the processor speed and the amount of memory available.
[2022-11-17 23:42:54,263] DEBUG - Text-to-speech: What are the benefits of algorithm analysis?
[2022-11-17 23:42:54,263] DEBUG - [#1] Subsection: What are the benefits of algorithm analysis?
[2022-11-17 23:43:12,142] DEBUG - Text-to-speech: There are many benefits to algorithm analysis, including

Improving the efficiency of algorithms

Comparing the efficiency of different algorithms

Predicting the performance of algorithms in different conditions

Debugging algorithms
[2022-11-17 23:43:12,142] DEBUG - [#1] Subsection: There are many benefits to algorithm analysis, including

Improving the efficiency of algorithms

Comparing the efficiency of different algorithms

Predicting the performance of algorithms in different conditions

Debugging algorithms
[2022-11-17 23:44:10,975] DEBUG - Text-to-speech: What are some common issues with algorithm analysis?
[2022-11-17 23:44:10,975] DEBUG - [#1] Subsection: What are some common issues with algorithm analysis?
[2022-11-17 23:44:29,360] DEBUG - Text-to-speech: Some common issues with algorithm analysis include

Overfitting: When an algorithm is designed to work well on a specific dataset but performs poorly on other datasets.

Underfitting: When an algorithm fails to find a pattern in the data that it is supposed to be learning from.

Noise: When meaningless data is included in the dataset, which can cause the algorithm to perform poorly
[2022-11-17 23:44:29,361] DEBUG - [#1] Subsection: Some common issues with algorithm analysis include

Overfitting: When an algorithm is designed to work well on a specific dataset but performs poorly on other datasets.

Underfitting: When an algorithm fails to find a pattern in the data that it is supposed to be learning from.

Noise: When meaningless data is included in the dataset, which can cause the algorithm to perform poorly
[2022-11-17 23:45:18,853] DEBUG - [#2] Subsection: Some common issues with algorithm analysis include

Overfitting: When an algorithm is designed to work well on a specific dataset but performs poorly on other datasets.

Underfitting: When an algorithm fails to find a pattern in the data that it is supposed to be learning from.

Noise: When meaningless data is included in the dataset, which can cause the algorithm to perform poorly
[2022-11-17 23:45:49,338] DEBUG - [#3] Subsection: Some common issues with algorithm analysis include

Overfitting: When an algorithm is designed to work well on a specific dataset but performs poorly on other datasets.

Underfitting: When an algorithm fails to find a pattern in the data that it is supposed to be learning from.

Noise: When meaningless data is included in the dataset, which can cause the algorithm to perform poorly
[2022-11-17 23:46:23,632] CRITICAL - Failed to generate audio
[2022-11-17 23:46:23,632] INFO - Getting video script.
[2022-11-17 23:46:23,632] INFO - message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
[2022-11-17 23:46:23,632] DEBUG - api_version=None data='{"model": "text-davinci-002", "prompt": "Write a list of unique and interesting keywords relating to basic computer science:\\n\\n-", "temperature": 1, "max_tokens": 128, "top_p": 1, "frequency_penalty": 0, "presence_penalty": 0, "n": 1, "stop": "", "echo": false}' message='Post details'
[2022-11-17 23:46:23,633] DEBUG - Resetting dropped connection: api.openai.com
[2022-11-17 23:46:26,168] DEBUG - https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 456
[2022-11-17 23:46:26,168] INFO - message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=2129 request_id=7a46c0149985ba541081206456381142 response_code=200
[2022-11-17 23:46:26,169] INFO - message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
[2022-11-17 23:46:26,169] DEBUG - api_version=None data='{"model": "text-curie-001", "prompt": "Write a list of 5 interesting beginner topics on where Operating Systems is used in the context of computer science:\\n-", "temperature": 0.7, "max_tokens": 256, "top_p": 1, "frequency_penalty": 0, "presence_penalty": 0, "n": 1, "stop": "", "echo": false}' message='Post details'
[2022-11-17 23:46:26,714] DEBUG - https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 391
[2022-11-17 23:46:26,714] INFO - message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=395 request_id=ac88396601ab9a5f1b0d4dbf3c4a5ab0 response_code=200
[2022-11-17 23:46:26,715] INFO - message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
[2022-11-17 23:46:26,715] DEBUG - api_version=None data='{"model": "text-davinci-002", "prompt": "Write a short, unique and interesting title relating to the theory of Windows Operating Systems in the form of a video essay title without involving numbers:", "temperature": 1, "max_tokens": 20, "top_p": 1, "frequency_penalty": 0, "presence_penalty": 0, "n": 1, "stop": "", "echo": false}' message='Post details'
[2022-11-17 23:46:28,067] DEBUG - https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 353
[2022-11-17 23:46:28,067] INFO - message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1210 request_id=75fda90ad08a3a37c449515cebcce11c response_code=200
[2022-11-17 23:46:28,099] DEBUG - Keyword Operating Systems, Topics ['Operating Systems Concepts', 'Linux Operating Systems', 'Windows Operating Systems', 'Unix Operating Systems', 'MacOS Operating Systems'], Topic The Windows Story: How an Operating System Overcame Its rocky start to become a Domin
[2022-11-17 23:46:28,099] INFO - message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
[2022-11-17 23:46:28,099] DEBUG - api_version=None data='{"model": "text-davinci-002", "prompt": "Write a list of beginner topics relating to what is The Windows Story: How an Operating System Overcame Its rocky start to become a Domin in the context of computer science:\\n\\n", "temperature": 0, "max_tokens": 256, "top_p": 1, "frequency_penalty": 0, "presence_penalty": 0, "n": 1, "stop": "", "echo": false}' message='Post details'
[2022-11-17 23:46:31,599] DEBUG - https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 453
[2022-11-17 23:46:31,600] INFO - message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=3354 request_id=13c532b9d71fc444973f4e7be9f2c80e response_code=200
[2022-11-17 23:46:31,600] DEBUG - topic: The Windows Story: How an Operating System Overcame Its rocky start to become a Domin, sub topics 
-What is an operating system?
-What is The Windows Story?
-How did Windows become a dominant operating system?
-What are the key features of Windows?
-How has Windows evolved over time?
[2022-11-17 23:46:31,600] DEBUG - getting summary for topic
[2022-11-17 23:46:31,600] INFO - message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
[2022-11-17 23:46:31,600] DEBUG - api_version=None data='{"model": "text-curie-001", "prompt": "Write a summary for the following topic in the form of a youtube description in the context of computer science:\\n\\ntopic: The Windows Story: How an Operating System Overcame Its rocky start to become a Domin\\n\\nsummary:", "temperature": 0, "max_tokens": 256, "top_p": 1, "frequency_penalty": 0, "presence_penalty": 0, "n": 1, "stop": "", "echo": false}' message='Post details'
[2022-11-17 23:46:32,319] DEBUG - https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 539
[2022-11-17 23:46:32,320] INFO - message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=573 request_id=610da0c136607969caef478a4732f0e8 response_code=200
[2022-11-17 23:46:32,320] INFO - message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
[2022-11-17 23:46:32,320] DEBUG - api_version=None data='{"model": "text-davinci-002", "prompt": "Expand greatly upon the topic of The Windows Story: How an Operating System Overcame Its rocky start to become a Domin in the context of computer science summarised for a 9th grader:\\n\\n1. What is an operating system?\\n\\n", "temperature": 1, "max_tokens": 128, "top_p": 1, "frequency_penalty": 0, "presence_penalty": 0, "n": 1, "stop": ["2.", "1."], "echo": false}' message='Post details'
[2022-11-17 23:46:33,872] DEBUG - https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 417
[2022-11-17 23:46:33,872] INFO - message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1411 request_id=955a1092655bf3936f2d476ecda7ebb0 response_code=200
[2022-11-17 23:46:33,873] INFO - message='Request to OpenAI API' method=post path=https://api.openai.com/v1/edits
[2022-11-17 23:46:33,873] DEBUG - api_version=None data='{"model": "text-davinci-edit-001", "input": "An operating system (OS) is a program that manages a computer\'s hardware and software resources and provides common services for computer programs.", "instruction": "Replace all non-characters with their spoken counterpart. And fix grammar.", "temperature": 0, "top_p": 1}' message='Post details'
[2022-11-17 23:46:35,345] DEBUG - https://api.openai.com:443 "POST /v1/edits HTTP/1.1" 200 294
[2022-11-17 23:46:35,345] INFO - message='OpenAI API response' path=https://api.openai.com/v1/edits processing_ms=1334 request_id=c85a7fc2d23c779152ed58e880e6fe5f response_code=200
[2022-11-17 23:46:35,346] INFO - message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
[2022-11-17 23:46:35,347] DEBUG - api_version=None data='{"model": "text-davinci-002", "prompt": "Expand greatly upon the topic of The Windows Story: How an Operating System Overcame Its rocky start to become a Domin in the context of computer science summarised for a 9th grader:\\n\\n1. What is an operating system?\\n\\nAn operating system (OS) is a program that manages a computer\'s hardware and software resources and provides common services for computer programs.\\n\\n2. What is The Windows Story?\\n\\n", "temperature": 1, "max_tokens": 128, "top_p": 1, "frequency_penalty": 0, "presence_penalty": 0, "n": 1, "stop": ["3.", "2."], "echo": false}' message='Post details'
[2022-11-17 23:46:36,476] DEBUG - https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 359
[2022-11-17 23:46:36,476] INFO - message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=990 request_id=0c693a3a373ecf6fef9c4b4c18f5884b response_code=200
[2022-11-17 23:46:36,477] INFO - message='Request to OpenAI API' method=post path=https://api.openai.com/v1/edits
[2022-11-17 23:46:36,477] DEBUG - api_version=None data='{"model": "text-davinci-edit-001", "input": "The Windows Story is a book that chronicles the history of the Windows operating system.", "instruction": "Replace all non-characters with their spoken counterpart. And fix grammar.", "temperature": 0, "top_p": 1}' message='Post details'
[2022-11-17 23:46:38,190] DEBUG - https://api.openai.com:443 "POST /v1/edits HTTP/1.1" 200 315
[2022-11-17 23:46:38,190] INFO - message='OpenAI API response' path=https://api.openai.com/v1/edits processing_ms=1576 request_id=b6c5afaeb1e88264a2abddcc9b707eb0 response_code=200
[2022-11-17 23:46:38,190] INFO - message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
[2022-11-17 23:46:38,191] DEBUG - api_version=None data='{"model": "text-davinci-002", "prompt": "Expand greatly upon the topic of The Windows Story: How an Operating System Overcame Its rocky start to become a Domin in the context of computer science summarised for a 9th grader:\\n\\n1. What is an operating system?\\n\\nAn operating system (OS) is a program that manages a computer\'s hardware and software resources and provides common services for computer programs.\\n\\n2. What is The Windows Story?\\n\\nThe Windows Story is a book that chronicles the history of the Windows operating system, from its beginnings as a graphical user interface for MSDOS to the present day.\\n\\n3. How did Windows become a dominant operating system?\\n\\n", "temperature": 1, "max_tokens": 128, "top_p": 1, "frequency_penalty": 0, "presence_penalty": 0, "n": 1, "stop": ["4.", "3."], "echo": false}' message='Post details'
[2022-11-17 23:46:40,078] DEBUG - https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 483
[2022-11-17 23:46:40,078] INFO - message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1744 request_id=b2c82466558cdd9e0c4addd5832e0f13 response_code=200
[2022-11-17 23:46:40,079] INFO - message='Request to OpenAI API' method=post path=https://api.openai.com/v1/edits
[2022-11-17 23:46:40,079] DEBUG - api_version=None data='{"model": "text-davinci-edit-001", "input": "Windows became a dominant operating system due to a number of factors, including its user-friendly interface, its support for popular programming languages, and its ability to run on a variety of hardware platforms.", "instruction": "Replace all non-characters with their spoken counterpart. And fix grammar.", "temperature": 0, "top_p": 1}' message='Post details'
[2022-11-17 23:46:43,032] DEBUG - https://api.openai.com:443 "POST /v1/edits HTTP/1.1" 200 362
[2022-11-17 23:46:43,033] INFO - message='OpenAI API response' path=https://api.openai.com/v1/edits processing_ms=2807 request_id=4d1f13457583309f105449376e568418 response_code=200
[2022-11-17 23:46:43,033] INFO - message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
[2022-11-17 23:46:43,033] DEBUG - api_version=None data='{"model": "text-davinci-002", "prompt": "Expand greatly upon the topic of The Windows Story: How an Operating System Overcame Its rocky start to become a Domin in the context of computer science summarised for a 9th grader:\\n\\n1. What is an operating system?\\n\\nAn operating system (OS) is a program that manages a computer\'s hardware and software resources and provides common services for computer programs.\\n\\n2. What is The Windows Story?\\n\\nThe Windows Story is a book that chronicles the history of the Windows operating system, from its beginnings as a graphical user interface for MSDOS to the present day.\\n\\n3. How did Windows become a dominant operating system?\\n\\nWindows became a dominant operating system due to a number of factors, including its userfriendly interface, its support for popular programming languages, and its ability to run on a variety of hardware platforms.\\n\\n4. What are the key features of Windows?\\n\\n", "temperature": 1, "max_tokens": 128, "top_p": 1, "frequency_penalty": 0, "presence_penalty": 0, "n": 1, "stop": ["5.", "4."], "echo": false}' message='Post details'
[2022-11-17 23:46:45,777] DEBUG - https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 435
[2022-11-17 23:46:45,777] INFO - message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=2597 request_id=5767dddf4c5667092bf65d571ab300ef response_code=200
[2022-11-17 23:46:45,777] INFO - message='Request to OpenAI API' method=post path=https://api.openai.com/v1/edits
[2022-11-17 23:46:45,777] DEBUG - api_version=None data='{"model": "text-davinci-edit-001", "input": "Some of the key features of Windows include the Windows shell, the graphical user interface (GUI), multitasking, and support for a wide range of hardware and software.", "instruction": "Replace all non-characters with their spoken counterpart. And fix grammar.", "temperature": 0, "top_p": 1}' message='Post details'
[2022-11-17 23:46:47,699] DEBUG - https://api.openai.com:443 "POST /v1/edits HTTP/1.1" 200 314
[2022-11-17 23:46:47,700] INFO - message='OpenAI API response' path=https://api.openai.com/v1/edits processing_ms=1783 request_id=c9d105bbe519762e650aaf0351b73fd3 response_code=200
[2022-11-17 23:46:47,700] INFO - message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
[2022-11-17 23:46:47,700] DEBUG - api_version=None data='{"model": "text-davinci-002", "prompt": "Expand greatly upon the topic of The Windows Story: How an Operating System Overcame Its rocky start to become a Domin in the context of computer science summarised for a 9th grader:\\n\\n1. What is an operating system?\\n\\nAn operating system (OS) is a program that manages a computer\'s hardware and software resources and provides common services for computer programs.\\n\\n2. What is The Windows Story?\\n\\nThe Windows Story is a book that chronicles the history of the Windows operating system, from its beginnings as a graphical user interface for MSDOS to the present day.\\n\\n3. How did Windows become a dominant operating system?\\n\\nWindows became a dominant operating system due to a number of factors, including its userfriendly interface, its support for popular programming languages, and its ability to run on a variety of hardware platforms.\\n\\n4. What are the key features of Windows?\\n\\nSome of the key features of Windows include the Windows shell, the graphical user interface (GUI), multitasking, and support for a wide range of hardware and software.\\n\\n5. How has Windows evolved over time?\\n\\n", "temperature": 1, "max_tokens": 128, "top_p": 1, "frequency_penalty": 0, "presence_penalty": 0, "n": 1, "stop": ["6.", "5."], "echo": false}' message='Post details'
[2022-11-17 23:46:49,403] DEBUG - https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 467
[2022-11-17 23:46:49,403] INFO - message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1559 request_id=996c4bc00f6f32e68260dc8f03c25104 response_code=200
[2022-11-17 23:46:49,403] INFO - message='Request to OpenAI API' method=post path=https://api.openai.com/v1/edits
[2022-11-17 23:46:49,403] DEBUG - api_version=None data='{"model": "text-davinci-edit-001", "input": "Windows has undergone a number of major releases over the years, each adding new features and improving upon existing ones. The most recent version of Windows is Windows 10, which was released in 201", "instruction": "Replace all non-characters with their spoken counterpart. And fix grammar.", "temperature": 0, "top_p": 1}' message='Post details'
[2022-11-17 23:46:51,290] DEBUG - https://api.openai.com:443 "POST /v1/edits HTTP/1.1" 200 347
[2022-11-17 23:46:51,291] INFO - message='OpenAI API response' path=https://api.openai.com/v1/edits processing_ms=1750 request_id=4a86e83e56264a2355ee2995bdccbaf4 response_code=200
[2022-11-17 23:46:51,292] DEBUG - Starting new HTTPS connection (1): www.googleapis.com:443
[2022-11-17 23:46:51,487] DEBUG - https://www.googleapis.com:443 "GET /youtube/v3/playlists?part=id&id=UC_x5XG1OV2P6uZZ5FSM9Ttw&key=AIzaSyDfv2ISoNjVh2oX2JRJUQ1loS-voHH3GlI&maxResults=2 HTTP/1.1" 200 None
[2022-11-17 23:46:51,489] DEBUG - Starting new HTTPS connection (1): www.googleapis.com:443
[2022-11-17 23:46:51,990] DEBUG - https://www.googleapis.com:443 "GET /youtube/v3/search?part=snippet&type=video&maxResults=50&order=relevance&key=AIzaSyDfv2ISoNjVh2oX2JRJUQ1loS-voHH3GlI&q=The%20Windows%20Story:%20How%20an%20Operating%20System%20Overcame%20Its%20rocky%20start%20to%20become%20a%20Domin&publishedAfter=2000-01-01T00:00:00Z&publishedBefore=3000-01-01T00:00:00Z HTTP/1.1" 200 None
[2022-11-17 23:46:51,993] DEBUG - Starting new HTTPS connection (1): www.googleapis.com:443
[2022-11-17 23:46:52,046] DEBUG - https://www.googleapis.com:443 "GET /youtube/v3/videos?key=AIzaSyDfv2ISoNjVh2oX2JRJUQ1loS-voHH3GlI&fields=items(snippet(description,tags))&part=snippet&id=1rc0d5Sp4Ic HTTP/1.1" 200 None
[2022-11-17 23:46:52,048] DEBUG - Starting new HTTPS connection (1): www.googleapis.com:443
[2022-11-17 23:46:52,115] DEBUG - https://www.googleapis.com:443 "GET /youtube/v3/videos?key=AIzaSyDfv2ISoNjVh2oX2JRJUQ1loS-voHH3GlI&fields=items(snippet(description,tags))&part=snippet&id=TYiEf9ZY2hM HTTP/1.1" 200 None
[2022-11-17 23:46:52,118] DEBUG - Starting new HTTPS connection (1): www.googleapis.com:443
[2022-11-17 23:46:52,186] DEBUG - https://www.googleapis.com:443 "GET /youtube/v3/videos?key=AIzaSyDfv2ISoNjVh2oX2JRJUQ1loS-voHH3GlI&fields=items(snippet(description,tags))&part=snippet&id=RYBrMQzoTcY HTTP/1.1" 200 None
[2022-11-17 23:46:52,189] DEBUG - Starting new HTTPS connection (1): www.googleapis.com:443
[2022-11-17 23:46:52,270] DEBUG - https://www.googleapis.com:443 "GET /youtube/v3/videos?key=AIzaSyDfv2ISoNjVh2oX2JRJUQ1loS-voHH3GlI&fields=items(snippet(description,tags))&part=snippet&id=mIjAaU0fnNU HTTP/1.1" 200 None
[2022-11-17 23:46:52,273] DEBUG - Starting new HTTPS connection (1): www.googleapis.com:443
[2022-11-17 23:46:52,357] DEBUG - https://www.googleapis.com:443 "GET /youtube/v3/videos?key=AIzaSyDfv2ISoNjVh2oX2JRJUQ1loS-voHH3GlI&fields=items(snippet(description,tags))&part=snippet&id=EDXxhAM5oFg HTTP/1.1" 200 None
[2022-11-17 23:46:52,360] DEBUG - Starting new HTTPS connection (1): www.googleapis.com:443
[2022-11-17 23:46:52,422] DEBUG - https://www.googleapis.com:443 "GET /youtube/v3/videos?key=AIzaSyDfv2ISoNjVh2oX2JRJUQ1loS-voHH3GlI&fields=items(snippet(description,tags))&part=snippet&id=QlyklYOP1-8 HTTP/1.1" 200 None
[2022-11-17 23:46:52,426] DEBUG - Starting new HTTPS connection (1): www.googleapis.com:443
[2022-11-17 23:46:52,488] DEBUG - https://www.googleapis.com:443 "GET /youtube/v3/videos?key=AIzaSyDfv2ISoNjVh2oX2JRJUQ1loS-voHH3GlI&fields=items(snippet(description,tags))&part=snippet&id=Xg8hTOst7ok HTTP/1.1" 200 None
[2022-11-17 23:46:52,490] DEBUG - Starting new HTTPS connection (1): www.googleapis.com:443
[2022-11-17 23:46:52,549] DEBUG - https://www.googleapis.com:443 "GET /youtube/v3/videos?key=AIzaSyDfv2ISoNjVh2oX2JRJUQ1loS-voHH3GlI&fields=items(snippet(description,tags))&part=snippet&id=xsN94zM70sY HTTP/1.1" 200 None
[2022-11-17 23:46:52,552] DEBUG - Starting new HTTPS connection (1): www.googleapis.com:443
[2022-11-17 23:46:52,624] DEBUG - https://www.googleapis.com:443 "GET /youtube/v3/videos?key=AIzaSyDfv2ISoNjVh2oX2JRJUQ1loS-voHH3GlI&fields=items(snippet(description,tags))&part=snippet&id=PNWofnwiR-A HTTP/1.1" 200 None
[2022-11-17 23:46:52,627] DEBUG - Starting new HTTPS connection (1): www.googleapis.com:443
[2022-11-17 23:46:52,694] DEBUG - https://www.googleapis.com:443 "GET /youtube/v3/videos?key=AIzaSyDfv2ISoNjVh2oX2JRJUQ1loS-voHH3GlI&fields=items(snippet(description,tags))&part=snippet&id=mhHUUw9oVqM HTTP/1.1" 200 None
[2022-11-17 23:46:52,696] DEBUG - Starting new HTTPS connection (1): www.googleapis.com:443
[2022-11-17 23:46:52,748] DEBUG - https://www.googleapis.com:443 "GET /youtube/v3/videos?key=AIzaSyDfv2ISoNjVh2oX2JRJUQ1loS-voHH3GlI&fields=items(snippet(description,tags))&part=snippet&id=xOAY9EzwMRI HTTP/1.1" 200 None
[2022-11-17 23:46:52,750] DEBUG - Starting new HTTPS connection (1): www.googleapis.com:443
[2022-11-17 23:46:52,823] DEBUG - https://www.googleapis.com:443 "GET /youtube/v3/videos?key=AIzaSyDfv2ISoNjVh2oX2JRJUQ1loS-voHH3GlI&fields=items(snippet(description,tags))&part=snippet&id=Rn1MCYFjqHY HTTP/1.1" 200 None
[2022-11-17 23:46:52,826] DEBUG - Starting new HTTPS connection (1): www.googleapis.com:443
[2022-11-17 23:46:52,890] DEBUG - https://www.googleapis.com:443 "GET /youtube/v3/videos?key=AIzaSyDfv2ISoNjVh2oX2JRJUQ1loS-voHH3GlI&fields=items(snippet(description,tags))&part=snippet&id=gULQaanxFNc HTTP/1.1" 200 None
[2022-11-17 23:46:52,892] DEBUG - Starting new HTTPS connection (1): www.googleapis.com:443
[2022-11-17 23:46:52,964] DEBUG - https://www.googleapis.com:443 "GET /youtube/v3/videos?key=AIzaSyDfv2ISoNjVh2oX2JRJUQ1loS-voHH3GlI&fields=items(snippet(description,tags))&part=snippet&id=Q3qDjcVvtA8 HTTP/1.1" 200 None
[2022-11-17 23:46:52,966] DEBUG - Starting new HTTPS connection (1): www.googleapis.com:443
[2022-11-17 23:46:53,022] DEBUG - https://www.googleapis.com:443 "GET /youtube/v3/videos?key=AIzaSyDfv2ISoNjVh2oX2JRJUQ1loS-voHH3GlI&fields=items(snippet(description,tags))&part=snippet&id=u35NCd-gRvA HTTP/1.1" 200 None
[2022-11-17 23:46:53,024] DEBUG - Starting new HTTPS connection (1): www.googleapis.com:443
[2022-11-17 23:46:53,092] DEBUG - https://www.googleapis.com:443 "GET /youtube/v3/videos?key=AIzaSyDfv2ISoNjVh2oX2JRJUQ1loS-voHH3GlI&fields=items(snippet(description,tags))&part=snippet&id=oJabv_WkLS8 HTTP/1.1" 200 None
[2022-11-17 23:46:53,095] DEBUG - Starting new HTTPS connection (1): www.googleapis.com:443
[2022-11-17 23:46:53,147] DEBUG - https://www.googleapis.com:443 "GET /youtube/v3/videos?key=AIzaSyDfv2ISoNjVh2oX2JRJUQ1loS-voHH3GlI&fields=items(snippet(description,tags))&part=snippet&id=20XrCOMi6o4 HTTP/1.1" 200 None
[2022-11-17 23:46:53,150] DEBUG - Starting new HTTPS connection (1): www.googleapis.com:443
[2022-11-17 23:46:53,211] DEBUG - https://www.googleapis.com:443 "GET /youtube/v3/videos?key=AIzaSyDfv2ISoNjVh2oX2JRJUQ1loS-voHH3GlI&fields=items(snippet(description,tags))&part=snippet&id=NYKjIDCEG2M HTTP/1.1" 200 None
[2022-11-17 23:46:53,214] DEBUG - Starting new HTTPS connection (1): www.googleapis.com:443
[2022-11-17 23:46:53,267] DEBUG - https://www.googleapis.com:443 "GET /youtube/v3/videos?key=AIzaSyDfv2ISoNjVh2oX2JRJUQ1loS-voHH3GlI&fields=items(snippet(description,tags))&part=snippet&id=c7Dk9RLbOic HTTP/1.1" 200 None
[2022-11-17 23:46:53,269] DEBUG - Starting new HTTPS connection (1): www.googleapis.com:443
[2022-11-17 23:46:53,327] DEBUG - https://www.googleapis.com:443 "GET /youtube/v3/videos?key=AIzaSyDfv2ISoNjVh2oX2JRJUQ1loS-voHH3GlI&fields=items(snippet(description,tags))&part=snippet&id=rClsdpChy00 HTTP/1.1" 200 None
[2022-11-17 23:46:53,331] DEBUG - Starting new HTTPS connection (1): www.googleapis.com:443
[2022-11-17 23:46:53,377] DEBUG - https://www.googleapis.com:443 "GET /youtube/v3/videos?key=AIzaSyDfv2ISoNjVh2oX2JRJUQ1loS-voHH3GlI&fields=items(snippet(description,tags))&part=snippet&id=tael1JC2X_U HTTP/1.1" 200 None
[2022-11-17 23:46:53,380] DEBUG - Starting new HTTPS connection (1): www.googleapis.com:443
[2022-11-17 23:46:53,429] DEBUG - https://www.googleapis.com:443 "GET /youtube/v3/videos?key=AIzaSyDfv2ISoNjVh2oX2JRJUQ1loS-voHH3GlI&fields=items(snippet(description,tags))&part=snippet&id=QwiUyuPzNlo HTTP/1.1" 200 None
[2022-11-17 23:46:53,432] DEBUG - Starting new HTTPS connection (1): www.googleapis.com:443
[2022-11-17 23:46:53,489] DEBUG - https://www.googleapis.com:443 "GET /youtube/v3/videos?key=AIzaSyDfv2ISoNjVh2oX2JRJUQ1loS-voHH3GlI&fields=items(snippet(description,tags))&part=snippet&id=wQ6bcYZx5ZY HTTP/1.1" 200 None
[2022-11-17 23:46:53,491] DEBUG - Starting new HTTPS connection (1): www.googleapis.com:443
[2022-11-17 23:46:53,559] DEBUG - https://www.googleapis.com:443 "GET /youtube/v3/videos?key=AIzaSyDfv2ISoNjVh2oX2JRJUQ1loS-voHH3GlI&fields=items(snippet(description,tags))&part=snippet&id=hYEIUTRx6mM HTTP/1.1" 200 None
[2022-11-17 23:46:53,562] DEBUG - Starting new HTTPS connection (1): www.googleapis.com:443
[2022-11-17 23:46:53,611] DEBUG - https://www.googleapis.com:443 "GET /youtube/v3/videos?key=AIzaSyDfv2ISoNjVh2oX2JRJUQ1loS-voHH3GlI&fields=items(snippet(description,tags))&part=snippet&id=0ks10QRZpHU HTTP/1.1" 200 None
[2022-11-17 23:46:53,613] DEBUG - Hashtags ['#horrorstories', '#creepypasta', '#nosleep', '#drcreepen', '#horrorstories', '#creepypasta', '#nosleep', '#drcreepen', '#audiobook', '#webnovel', '#lightnovel', '#japanese', '#novel', '#fantasynovel', '#pricelessaudiobooks', '#audiobooks', '#audiobooksfree', '#audiobooksfree90', '#audiobooksfreeyourhands', '#audiobooksfreedom', '#freeaudiobooks', '#freeaudiobooksforkids', '#freeaudiobooks365', '#freeaudiobooksmotivational', '#freeaudiobooksonyoutube', '#2freeaudiobooks', '#8freeaudiobooksleft', '#audiobook', '#webnovel', '#lightnovel', '#japanese', '#novel', '#fantasynovel', '#pricelessaudiobooks', '#audiobooks', '#audiobooksfree', '#audiobooksfree90', '#audiobooksfreeyourhands', '#audiobooksfreedom', '#freeaudiobooks', '#freeaudiobooksforkids', '#freeaudiobooks365', '#freeaudiobooksmotivational', '#freeaudiobooksonyoutube', '#2freeaudiobooks', '#8freeaudiobooksleft', '#audiobook', '#audiobooks', '#freeaudiobooks', '#fullaudiobook', '#freeaudiobook', '#bestaudiobooks', '#freebooks', '#book', '#books', '#free', '#audiobookfull8', '#pricelessaudiobooks', '#audiobooks', '#audiobooksfree', '#audiobooksfree90', '#audiobooksfreeyourhands', '#audiobooksfreedom', '#freeaudiobooks', '#freeaudiobooksforkids', '#freeaudiobooks365', '#freeaudiobooksmotivational', '#freeaudiobooksonyoutube', '#2freeaudiobooks', '#8freeaudiobooksleft']
[2022-11-17 23:46:53,613] DEBUG - Top Hashtags ['#audiobooks', '#freeaudiobooks', '#audiobook', '#pricelessaudiobooks', '#audiobooksfree']
[2022-11-17 23:46:53,613] DEBUG - Tags ['dr creepens vault', 'dr creepen', 'dr. creepen', 'nosleep stories', 'creepypasta', 'scary stories', 'asmr stories', 'best horror stories', 'nosleep horror', 'creepypasta horror', 'sci fi', 'science fiction', 'cosmic horror', 'dr creepens vault', 'dr creepen', 'dr. creepen', 'nosleep stories', 'creepypasta', 'scary stories', 'asmr stories', 'best horror stories', 'nosleep horror', 'creepypasta horror', 'asmr stories to fall asleep to', 'asmr stories for sleep', 'asmr stories scary', 'asmr stories soft spoken', 'asmr stories with rain', 'best horror stories of all time', 'nosleep stories with a twist', 'best nosleep stories', 'sci-fi horror story compilation', 'best horror stories podcast', 'old-school sci-fi stories', 'audiobook', 'epub', 'lightnovel', 'koreanlightnovel', 'japanese light novel', 'epub reader', 'mc overpowered', 'anti hero mc', 'chinese novel', 'light novel', 'webnovel', 'solo leveling', 'gambit', 'read light novel', 'mc', 'protagonist', 'reincarnator', 'isekai', 'school of policy studies', 'policy studies', "queen's universit", "queen's university", "queen's u", "queen's", 'public administration', 'covid', 'coronavirus', 'covid19', 'andrew graham', 'contagion cultures', 'contagion', 'audiobook in english short', 'best audiobook in english', 'famous audiobook in english', 'story audiobook in english', 'audiobookucly1zckpgzgw9wzmczodwoa', 'audiolibroucly1zckpgzgw9wzmczodwoa', 'sonlibroucly1zckpgzgw9wzmczodwoa', 'audiobook', 'audiobooks', 'audio book', 'audio books', 'audiolibro', 'hörbuch', 'livre audio', 'livro falado', 'luisterboek', 'аудиокнига', 'ספר מוקלט', 'książka mówiona', 'ljudbok', 'lydbog', 'äänikirja', 'sonlibro', 'hangoskönyv', 'аудіокнига', 'аудиокниги', 'persuasion audiobook', 'audiobook', 'epub', 'lightnovel', 'koreanlightnovel', 'japanese light novel', 'epub reader', 'mc overpowered', 'anti hero mc', 'chinese novel', 'light novel', 'webnovel', 'solo leveling', 'gambit', 'read light novel', 'mc', 'protagonist', 'reincarnator', 'isekai', 'full', 'audio', 'book', 'books', 'free', 'audiobooks', 'librivox', 'fort concho; its why and wherefore', 'j. n. gregory', 'audiobook', 'essays', 'nonfiction', 'stories', 'book', 'ebook', 'e book', 'e-book', 'audio book', 'free', 'free book', 'public domain', 'free audio book', 'scool', 'literature', 'fiction', 'poetry', 'poem', 'art', 'drama', 'short story', 'novella', 'epic', 'lyric', 'romance', 'satire', 'tragedy', 'comedy', 'tragicomedy', 'play book', 'books', 'libary', 'criticism', 'philosophy', 'classic', 'classics', 'author', 'writing', 'novel', 'reading', 'library', 'comic', 'word', 'english', 'voice', 'audio', 'tale', 'fable', 'fairytale', 'readable', 'scholarly', 'audiobook in english short', 'best audiobook in english', 'famous audiobook in english', 'story audiobook in english', 'audiobookucly1zckpgzgw9wzmczodwoa', 'audiolibroucly1zckpgzgw9wzmczodwoa', 'sonlibroucly1zckpgzgw9wzmczodwoa', 'audiobook', 'audiobooks', 'audio book', 'audio books', 'audiolibro', 'hörbuch', 'livre audio', 'livro falado', 'luisterboek', 'аудиокнига', 'ספר מוקלט', 'książka mówiona', 'ljudbok', 'lydbog', 'äänikirja', 'sonlibro', 'hangoskönyv', 'аудіокнига', 'аудиокниги', 'persuasion audiobook', 'yt:cc=on', 'microsoft windows 2016', 'storage spaces direct', 'hyper-converged infastructure', 'software-defined data converge', 'veeam', 'hgst', 'sddc', 'storage replica', 'dataon', 'mellanox', 'trident seafoods', 'intel', 'microsoft', 'intel select solutions', 'windows server', 'windows admin center', 'project honolulu', 'dataon must', 'rdma over converged ethernet', 'roce', 'spectrum switches', 'connectx-4', 'daniel lee', 'shawn leonard', 'jeff shao', 'deadliest catch', 'howard lo', 'webinar', 'portfolio', 'program', 'project', 'cloud', 'isetia', 'fnd', 'document management', '3p', 'kanban', 'isetia board', 'platform', 'solution', 'bim', 'library of congress', 'audiobook', 'full', 'philip francis nowlan', 'the airlords of han', 'book', 'audio book', 'audiobook', 'story', 'short story', 'air ships', 'airships', 'future', 'ripvanwinkle', 'air lords of han', 'warlords of han', 'skyloards', 'sky loards', 'sky lords', 'skylords', 'free', 'full', 'science fiction', 'scifi', 'sci-fi', 'skylord', 'skyships', 'skycraft', 'sky', 'sky crafts', 'audiobook in english short', 'best audiobook in english', 'famous audiobook in english', 'story audiobook in english', 'audiobookucly1zckpgzgw9wzmczodwoa', 'audiolibroucly1zckpgzgw9wzmczodwoa', 'sonlibroucly1zckpgzgw9wzmczodwoa', 'audiobook', 'audiobooks', 'audio book', 'audio books', 'audiolibro', 'hörbuch', 'livre audio', 'livro falado', 'luisterboek', 'аудиокнига', 'ספר מוקלט', 'książka mówiona', 'ljudbok', 'lydbog', 'äänikirja', 'sonlibro', 'hangoskönyv', 'аудіокнига', 'аудиокниги', 'persuasion audiobook']
[2022-11-17 23:46:53,620] DEBUG - Top Tags ['audiobook', 'audio book', 'audiobooks', 'audiobook in english short', 'best audiobook in english', 'famous audiobook in english', 'story audiobook in english', 'audiobookucly1zckpgzgw9wzmczodwoa']
[2022-11-17 23:47:04,312] CRITICAL - Failed to generate audio
[2022-11-17 23:47:04,312] INFO - Getting video script.
[2022-11-17 23:47:04,313] INFO - message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
[2022-11-17 23:47:04,313] DEBUG - api_version=None data='{"model": "text-davinci-002", "prompt": "Write a list of unique and interesting keywords relating to basic computer science:\\n\\n-", "temperature": 1, "max_tokens": 128, "top_p": 1, "frequency_penalty": 0, "presence_penalty": 0, "n": 1, "stop": "", "echo": false}' message='Post details'
[2022-11-17 23:47:07,673] DEBUG - https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 491
[2022-11-17 23:47:07,673] INFO - message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=3216 request_id=33674a3ae8aa6c7214946c08ec87c9a7 response_code=200
[2022-11-17 23:47:07,673] INFO - message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
[2022-11-17 23:47:07,673] DEBUG - api_version=None data='{"model": "text-curie-001", "prompt": "Write a list of 5 interesting beginner topics on where Theory of computation is used in the context of computer science:\\n-", "temperature": 0.7, "max_tokens": 256, "top_p": 1, "frequency_penalty": 0, "presence_penalty": 0, "n": 1, "stop": "", "echo": false}' message='Post details'
[2022-11-17 23:47:08,171] DEBUG - https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 468
[2022-11-17 23:47:08,171] INFO - message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=349 request_id=ef9e5145630c0609879d038a5be05f2d response_code=200
[2022-11-17 23:47:08,171] INFO - message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
[2022-11-17 23:47:08,171] DEBUG - api_version=None data='{"model": "text-davinci-002", "prompt": "Write a short, unique and interesting title relating to the theory of The history of computer science in the form of a video essay title without involving numbers:", "temperature": 1, "max_tokens": 20, "top_p": 1, "frequency_penalty": 0, "presence_penalty": 0, "n": 1, "stop": "", "echo": false}' message='Post details'
[2022-11-17 23:47:09,095] DEBUG - https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 358
[2022-11-17 23:47:09,096] INFO - message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=785 request_id=c88ccb814147b71c1e461f0fdf99e1ce response_code=200
[2022-11-17 23:47:09,136] DEBUG - Keyword Theory of computation, Topics ['The theoretical foundations of computer science', 'The various models of computation', 'The complexity of solving problems with computers', 'The design of computer architectures', 'The history of computer science'], Topic The Evolution of Computer Science

A Brief History of Computer Science

The History of
[2022-11-17 23:47:09,136] INFO - message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
[2022-11-17 23:47:09,136] DEBUG - api_version=None data='{"model": "text-davinci-002", "prompt": "Write a list of beginner topics relating to what is The Evolution of Computer Science\\n\\nA Brief History of Computer Science\\n\\nThe History of in the context of computer science:\\n\\n", "temperature": 0, "max_tokens": 256, "top_p": 1, "frequency_penalty": 0, "presence_penalty": 0, "n": 1, "stop": "", "echo": false}' message='Post details'
[2022-11-17 23:47:13,774] DEBUG - https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 866
[2022-11-17 23:47:13,775] INFO - message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=4494 request_id=bf041ac04174dbeea6f0f9d395dc7fbb response_code=200
[2022-11-17 23:47:13,775] DEBUG - topic: The Evolution of Computer Science

A Brief History of Computer Science

The History of, sub topics 
- The first computers were created in the early 1800s.

- The first computers were created for scientific and mathematical purposes.

- The first computers were created by Charles Babbage and Ada Lovelace.

- The first computers were large and expensive.

- The first computers were slow and had limited memory.

- The first computers used vacuum tubes.

- The first computers were used for military purposes.

- The first computers were used for commercial purposes.

- The first computers were used for personal purposes.

- The first computers were used for educational purposes.
[2022-11-17 23:47:13,775] DEBUG - getting summary for topic
[2022-11-17 23:47:13,775] INFO - message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
[2022-11-17 23:47:13,775] DEBUG - api_version=None data='{"model": "text-curie-001", "prompt": "Write a summary for the following topic in the form of a youtube description in the context of computer science:\\n\\ntopic: The Evolution of Computer Science\\n\\nA Brief History of Computer Science\\n\\nThe History of\\n\\nsummary:", "temperature": 0, "max_tokens": 256, "top_p": 1, "frequency_penalty": 0, "presence_penalty": 0, "n": 1, "stop": "", "echo": false}' message='Post details'
[2022-11-17 23:47:14,792] DEBUG - https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 730
[2022-11-17 23:47:14,793] INFO - message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=870 request_id=e1767601012657a2dcee2544e489c3b3 response_code=200
[2022-11-17 23:47:14,793] INFO - message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
[2022-11-17 23:47:14,793] DEBUG - api_version=None data='{"model": "text-davinci-002", "prompt": "Expand greatly upon the topic of The Evolution of Computer Science\\n\\nA Brief History of Computer Science\\n\\nThe History of in the context of computer science summarised for a 9th grader:\\n\\n1. The first computers were created in the early 1800s.\\n\\n", "temperature": 1, "max_tokens": 128, "top_p": 1, "frequency_penalty": 0, "presence_penalty": 0, "n": 1, "stop": ["2.", "1."], "echo": false}' message='Post details'
[2022-11-17 23:47:15,231] DEBUG - https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 265
[2022-11-17 23:47:15,231] INFO - message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=287 request_id=3f15088f9d17597422933fb401b29527 response_code=200
[2022-11-17 23:47:15,232] CRITICAL - Failed to generate video script
[2022-11-17 23:47:15,232] INFO - Getting video script.
[2022-11-17 23:47:15,233] INFO - message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
[2022-11-17 23:47:15,233] DEBUG - api_version=None data='{"model": "text-davinci-002", "prompt": "Write a list of unique and interesting keywords relating to basic computer science:\\n\\n-", "temperature": 1, "max_tokens": 128, "top_p": 1, "frequency_penalty": 0, "presence_penalty": 0, "n": 1, "stop": "", "echo": false}' message='Post details'
[2022-11-17 23:47:17,403] DEBUG - https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 441
[2022-11-17 23:47:17,404] INFO - message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=2028 request_id=2fece46bc21a8be07bfcfdbff9bf3fb8 response_code=200
[2022-11-17 23:47:17,404] INFO - message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
[2022-11-17 23:47:17,404] DEBUG - api_version=None data='{"model": "text-curie-001", "prompt": "Write a list of 5 interesting beginner topics on where Data structures is used in the context of computer science:\\n-", "temperature": 0.7, "max_tokens": 256, "top_p": 1, "frequency_penalty": 0, "presence_penalty": 0, "n": 1, "stop": "", "echo": false}' message='Post details'
[2022-11-17 23:47:17,793] DEBUG - https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 333
[2022-11-17 23:47:17,793] INFO - message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=243 request_id=4d06812640968b0856798f23e6401d16 response_code=200
[2022-11-17 23:47:17,794] INFO - message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
[2022-11-17 23:47:17,794] DEBUG - api_version=None data='{"model": "text-davinci-002", "prompt": "Write a short, unique and interesting title relating to the theory of Sequences in the form of a video essay title without involving numbers:", "temperature": 1, "max_tokens": 20, "top_p": 1, "frequency_penalty": 0, "presence_penalty": 0, "n": 1, "stop": "", "echo": false}' message='Post details'
[2022-11-17 23:47:18,937] DEBUG - https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 309
[2022-11-17 23:47:18,938] INFO - message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1004 request_id=0c39c9842fa1d98d5f34eb9791309a75 response_code=200
[2022-11-17 23:47:18,960] DEBUG - Keyword Data structures, Topics ['Linked lists', 'Dynamic arrays', 'Hash tables', 'Tree structures', 'Sequences'], Topic Everything You Need to Know About Sequences
[2022-11-17 23:47:18,960] INFO - message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
[2022-11-17 23:47:18,960] DEBUG - api_version=None data='{"model": "text-davinci-002", "prompt": "Write a list of beginner topics relating to what is Everything You Need to Know About Sequences in the context of computer science:\\n\\n", "temperature": 0, "max_tokens": 256, "top_p": 1, "frequency_penalty": 0, "presence_penalty": 0, "n": 1, "stop": "", "echo": false}' message='Post details'
[2022-11-17 23:47:21,547] DEBUG - https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 549
[2022-11-17 23:47:21,548] INFO - message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=2443 request_id=9f3afcfc243102aa90da45ba65796063 response_code=200
[2022-11-17 23:47:21,548] DEBUG - topic: Everything You Need to Know About Sequences, sub topics 
-What is a sequence?
-What are the different types of sequences?
-What are the properties of a sequence?
-How do you represent a sequence in computer memory?
-What are the operations that can be performed on a sequence?
-What are the applications of sequences in computer science?
[2022-11-17 23:47:21,548] DEBUG - getting summary for topic
[2022-11-17 23:47:21,548] INFO - message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
[2022-11-17 23:47:21,548] DEBUG - api_version=None data='{"model": "text-curie-001", "prompt": "Write a summary for the following topic in the form of a youtube description in the context of computer science:\\n\\ntopic: Everything You Need to Know About Sequences\\n\\nsummary:", "temperature": 0, "max_tokens": 256, "top_p": 1, "frequency_penalty": 0, "presence_penalty": 0, "n": 1, "stop": "", "echo": false}' message='Post details'
[2022-11-17 23:47:22,060] DEBUG - https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 437
[2022-11-17 23:47:22,060] INFO - message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=365 request_id=6ab2eef991af357fbdf66e75b6db96e0 response_code=200
[2022-11-17 23:47:22,061] INFO - message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
[2022-11-17 23:47:22,061] DEBUG - api_version=None data='{"model": "text-davinci-002", "prompt": "Expand greatly upon the topic of Everything You Need to Know About Sequences in the context of computer science summarised for a 9th grader:\\n\\n1. What is a sequence?\\n\\n", "temperature": 1, "max_tokens": 128, "top_p": 1, "frequency_penalty": 0, "presence_penalty": 0, "n": 1, "stop": ["2.", "1."], "echo": false}' message='Post details'
[2022-11-17 23:47:23,624] DEBUG - https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 413
[2022-11-17 23:47:23,624] INFO - message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1423 request_id=b192e556bf2e5a91e2ebbc325ae438bb response_code=200
[2022-11-17 23:47:23,624] INFO - message='Request to OpenAI API' method=post path=https://api.openai.com/v1/edits
[2022-11-17 23:47:23,625] DEBUG - api_version=None data='{"model": "text-davinci-edit-001", "input": "In computer science, a sequence is a set of data that is organized in a particular order. A sequence can be any length, but it is usually finite.", "instruction": "Replace all non-characters with their spoken counterpart. And fix grammar.", "temperature": 0, "top_p": 1}' message='Post details'
[2022-11-17 23:47:26,695] DEBUG - https://api.openai.com:443 "POST /v1/edits HTTP/1.1" 200 333
[2022-11-17 23:47:26,695] INFO - message='OpenAI API response' path=https://api.openai.com/v1/edits processing_ms=2931 request_id=3d1d7ae9eb775ff4138481d1a2dbb227 response_code=200
[2022-11-17 23:47:26,696] INFO - message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
[2022-11-17 23:47:26,696] DEBUG - api_version=None data='{"model": "text-davinci-002", "prompt": "Expand greatly upon the topic of Everything You Need to Know About Sequences in the context of computer science summarised for a 9th grader:\\n\\n1. What is a sequence?\\n\\nIn computer science, a sequence is a set of data that is organized in a particular order.\\nA sequence can be any length, but it is usually finite.\\nA sequence is a type of data structure.\\n\\n2. What are the different types of sequences?\\n\\n", "temperature": 1, "max_tokens": 128, "top_p": 1, "frequency_penalty": 0, "presence_penalty": 0, "n": 1, "stop": ["3.", "2."], "echo": false}' message='Post details'
[2022-11-17 23:47:30,533] DEBUG - https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 607
[2022-11-17 23:47:30,533] INFO - message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=3697 request_id=f12119ff55a2802aa2e0bc9a42be2e4e response_code=200
[2022-11-17 23:47:30,533] INFO - message='Request to OpenAI API' method=post path=https://api.openai.com/v1/edits
[2022-11-17 23:47:30,533] DEBUG - api_version=None data='{"model": "text-davinci-edit-001", "input": "There are two main types of sequences: linear and nonlinear.\\n\\nLinear sequences are those where the data is arranged in a straight line. The most common type of linear sequence is an array.\\n\\nNonlinear sequences are those where the data is arranged in a more complex pattern. The most common type of nonlinear sequence is a linked list.", "instruction": "Replace all non-characters with their spoken counterpart. And fix grammar.", "temperature": 0, "top_p": 1}' message='Post details'
[2022-11-17 23:47:33,024] DEBUG - https://api.openai.com:443 "POST /v1/edits HTTP/1.1" 200 489
[2022-11-17 23:47:33,024] INFO - message='OpenAI API response' path=https://api.openai.com/v1/edits processing_ms=2353 request_id=05f5b0977e1c9915d967588de49bf42d response_code=200
[2022-11-17 23:47:33,024] INFO - message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
[2022-11-17 23:47:33,025] DEBUG - api_version=None data='{"model": "text-davinci-002", "prompt": "Expand greatly upon the topic of Everything You Need to Know About Sequences in the context of computer science summarised for a 9th grader:\\n\\n1. What is a sequence?\\n\\nIn computer science, a sequence is a set of data that is organized in a particular order.\\nA sequence can be any length, but it is usually finite.\\nA sequence is a type of data structure.\\n\\n2. What are the different types of sequences?\\n\\nThere are two main types of sequences: linear and nonlinear.\\n\\nLinear sequences are those where the data is arranged in a straight line. The most common type of linear sequence is an array.\\n\\nNonlinear sequences are those where the data is arranged in a more complex pattern. The most common type of nonlinear sequence is a linked list.\\n\\n3. What are the properties of a sequence?\\n\\n", "temperature": 1, "max_tokens": 128, "top_p": 1, "frequency_penalty": 0, "presence_penalty": 0, "n": 1, "stop": ["4.", "3."], "echo": false}' message='Post details'
[2022-11-17 23:47:34,653] DEBUG - https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 418
[2022-11-17 23:47:34,654] INFO - message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1488 request_id=2dd26c7369edf5af2b9829db7241e8d9 response_code=200
[2022-11-17 23:47:34,654] INFO - message='Request to OpenAI API' method=post path=https://api.openai.com/v1/edits
[2022-11-17 23:47:34,654] DEBUG - api_version=None data='{"model": "text-davinci-edit-001", "input": "In computer science, there are four main properties of a sequence:\\n\\n1. The order of the elements is important.\\n2. The number of elements is finite.", "instruction": "Replace all non-characters with their spoken counterpart. And fix grammar.", "temperature": 0, "top_p": 1}' message='Post details'
[2022-11-17 23:47:37,409] DEBUG - https://api.openai.com:443 "POST /v1/edits HTTP/1.1" 200 293
[2022-11-17 23:47:37,410] INFO - message='OpenAI API response' path=https://api.openai.com/v1/edits processing_ms=2615 request_id=f98e9048a4a3a0cdd2e266fe52f46cbd response_code=200
[2022-11-17 23:47:37,410] INFO - message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
[2022-11-17 23:47:37,410] DEBUG - api_version=None data='{"model": "text-davinci-002", "prompt": "Expand greatly upon the topic of Everything You Need to Know About Sequences in the context of computer science summarised for a 9th grader:\\n\\n1. What is a sequence?\\n\\nIn computer science, a sequence is a set of data that is organized in a particular order.\\nA sequence can be any length, but it is usually finite.\\nA sequence is a type of data structure.\\n\\n2. What are the different types of sequences?\\n\\nThere are two main types of sequences: linear and nonlinear.\\n\\nLinear sequences are those where the data is arranged in a straight line. The most common type of linear sequence is an array.\\n\\nNonlinear sequences are those where the data is arranged in a more complex pattern. The most common type of nonlinear sequence is a linked list.\\n\\n3. What are the properties of a sequence?\\n\\nIn computer science, there are two main properties of a sequence:\\n\\n1. The order of the elements is important\\n2. The number of elements is finite\\n\\n4. How do you represent a sequence in computer memory?\\n\\n", "temperature": 1, "max_tokens": 128, "top_p": 1, "frequency_penalty": 0, "presence_penalty": 0, "n": 1, "stop": ["5.", "4."], "echo": false}' message='Post details'
[2022-11-17 23:47:38,736] DEBUG - https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 373
[2022-11-17 23:47:38,736] INFO - message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1188 request_id=77a2f6ba034d92d227104a4184a03c2a response_code=200
[2022-11-17 23:47:38,736] INFO - message='Request to OpenAI API' method=post path=https://api.openai.com/v1/edits
[2022-11-17 23:47:38,736] DEBUG - api_version=None data='{"model": "text-davinci-edit-001", "input": "There are two ways to represent a sequence in computer memory:\\n\\n1. Using an array\\n2. Using a linked list", "instruction": "Replace all non-characters with their spoken counterpart. And fix grammar.", "temperature": 0, "top_p": 1}' message='Post details'
[2022-11-17 23:47:39,944] DEBUG - https://api.openai.com:443 "POST /v1/edits HTTP/1.1" 200 252
[2022-11-17 23:47:39,944] INFO - message='OpenAI API response' path=https://api.openai.com/v1/edits processing_ms=1068 request_id=4d69d23520ddeca0e64bac963dc5b82c response_code=200
[2022-11-17 23:47:39,944] INFO - message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
[2022-11-17 23:47:39,945] DEBUG - api_version=None data='{"model": "text-davinci-002", "prompt": "Expand greatly upon the topic of Everything You Need to Know About Sequences in the context of computer science summarised for a 9th grader:\\n\\n1. What is a sequence?\\n\\nIn computer science, a sequence is a set of data that is organized in a particular order.\\nA sequence can be any length, but it is usually finite.\\nA sequence is a type of data structure.\\n\\n2. What are the different types of sequences?\\n\\nThere are two main types of sequences: linear and nonlinear.\\n\\nLinear sequences are those where the data is arranged in a straight line. The most common type of linear sequence is an array.\\n\\nNonlinear sequences are those where the data is arranged in a more complex pattern. The most common type of nonlinear sequence is a linked list.\\n\\n3. What are the properties of a sequence?\\n\\nIn computer science, there are two main properties of a sequence:\\n\\n1. The order of the elements is important\\n2. The number of elements is finite\\n\\n4. How do you represent a sequence in computer memory?\\n\\nThere are two ways to represent a sequence in computer memory.\\n\\n1. Using an array\\n2. Using a linked list\\n\\n5. What are the operations that can be performed on a sequence?\\n\\n", "temperature": 1, "max_tokens": 128, "top_p": 1, "frequency_penalty": 0, "presence_penalty": 0, "n": 1, "stop": ["6.", "5."], "echo": false}' message='Post details'
[2022-11-17 23:47:44,614] DEBUG - https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 719
[2022-11-17 23:47:44,614] INFO - message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=4529 request_id=09269e6402a8ea373f0fffc034a9fdee response_code=200
[2022-11-17 23:47:44,614] INFO - message='Request to OpenAI API' method=post path=https://api.openai.com/v1/edits
[2022-11-17 23:47:44,614] DEBUG - api_version=None data='{"model": "text-davinci-edit-001", "input": "The most common operations that can be performed on a sequence are:\\n\\n1. Accessing an element: This operation allows you to retrieve a specific element from the sequence.\\n\\n2. Searching for an element: This operation allows you to find an element in the sequence.\\n\\n3. Inserting an element: This operation allows you to insert an element into the sequence.\\n\\n4. Deleting an element: This operation allows you to delete an element from the sequence.", "instruction": "Replace all non-characters with their spoken counterpart. And fix grammar.", "temperature": 0, "top_p": 1}' message='Post details'
[2022-11-17 23:47:50,418] DEBUG - https://api.openai.com:443 "POST /v1/edits HTTP/1.1" 200 596
[2022-11-17 23:47:50,418] INFO - message='OpenAI API response' path=https://api.openai.com/v1/edits processing_ms=5667 request_id=ffe19b48acdbc35c0d6bd8d1261967ac response_code=200
[2022-11-17 23:47:50,418] INFO - message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
[2022-11-17 23:47:50,419] DEBUG - api_version=None data='{"model": "text-davinci-002", "prompt": "Expand greatly upon the topic of Everything You Need to Know About Sequences in the context of computer science summarised for a 9th grader:\\n\\n1. What is a sequence?\\n\\nIn computer science, a sequence is a set of data that is organized in a particular order.\\nA sequence can be any length, but it is usually finite.\\nA sequence is a type of data structure.\\n\\n2. What are the different types of sequences?\\n\\nThere are two main types of sequences: linear and nonlinear.\\n\\nLinear sequences are those where the data is arranged in a straight line. The most common type of linear sequence is an array.\\n\\nNonlinear sequences are those where the data is arranged in a more complex pattern. The most common type of nonlinear sequence is a linked list.\\n\\n3. What are the properties of a sequence?\\n\\nIn computer science, there are two main properties of a sequence:\\n\\n1. The order of the elements is important\\n2. The number of elements is finite\\n\\n4. How do you represent a sequence in computer memory?\\n\\nThere are two ways to represent a sequence in computer memory.\\n\\n1. Using an array\\n2. Using a linked list\\n\\n5. What are the operations that can be performed on a sequence?\\n\\nThe most common operations that can be performed on a sequence are:\\n\\n1. Accessing an element: This operation allows you to retrieve a specific element from the sequence\\n\\n2. Searching for an element: This operation allows you to find an element in the sequence\\n\\n3. Inserting an element: This operation allows you to insert an element into the sequence\\n\\n4. Deleting an element: This operation allows you to delete an element from the sequence\\n\\n6. What are the applications of sequences in computer science?\\n\\n", "temperature": 1, "max_tokens": 128, "top_p": 1, "frequency_penalty": 0, "presence_penalty": 0, "n": 1, "stop": ["7.", "6."], "echo": false}' message='Post details'
[2022-11-17 23:47:54,950] DEBUG - https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 707
[2022-11-17 23:47:54,950] INFO - message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=4384 request_id=4f4f5782b70bb530ba9a85c79bffa70e response_code=200
[2022-11-17 23:47:54,950] INFO - message='Request to OpenAI API' method=post path=https://api.openai.com/v1/edits
[2022-11-17 23:47:54,950] DEBUG - api_version=None data='{"model": "text-davinci-edit-001", "input": "There are many applications of sequences in computer science. Some of the most common applications are:\\n\\n1. Data storage: Sequences are often used to store data in computer memory.\\n\\n2. Data retrieval: Sequences are often used to retrieve data from computer memory.\\n\\n3. Data manipulation: Sequences are often used to manipulate data in computer memory.\\n\\n4. Data processing: Sequences are often used to process data in computer memory.", "instruction": "Replace all non-characters with their spoken counterpart. And fix grammar.", "temperature": 0, "top_p": 1}' message='Post details'
[2022-11-17 23:48:01,568] DEBUG - https://api.openai.com:443 "POST /v1/edits HTTP/1.1" 200 596
[2022-11-17 23:48:01,568] INFO - message='OpenAI API response' path=https://api.openai.com/v1/edits processing_ms=6479 request_id=ed8d51d62a4602f66945cebfc72432c1 response_code=200
[2022-11-17 23:48:01,569] DEBUG - Starting new HTTPS connection (1): www.googleapis.com:443
[2022-11-17 23:48:01,726] DEBUG - https://www.googleapis.com:443 "GET /youtube/v3/playlists?part=id&id=UC_x5XG1OV2P6uZZ5FSM9Ttw&key=AIzaSyDfv2ISoNjVh2oX2JRJUQ1loS-voHH3GlI&maxResults=2 HTTP/1.1" 200 None
[2022-11-17 23:48:01,728] DEBUG - Starting new HTTPS connection (1): www.googleapis.com:443
[2022-11-17 23:48:02,273] DEBUG - https://www.googleapis.com:443 "GET /youtube/v3/search?part=snippet&type=video&maxResults=50&order=relevance&key=AIzaSyDfv2ISoNjVh2oX2JRJUQ1loS-voHH3GlI&q=Everything%20You%20Need%20to%20Know%20About%20Sequences&publishedAfter=2000-01-01T00:00:00Z&publishedBefore=3000-01-01T00:00:00Z HTTP/1.1" 200 None
[2022-11-17 23:48:02,278] DEBUG - Starting new HTTPS connection (1): www.googleapis.com:443
[2022-11-17 23:48:02,339] DEBUG - https://www.googleapis.com:443 "GET /youtube/v3/videos?key=AIzaSyDfv2ISoNjVh2oX2JRJUQ1loS-voHH3GlI&fields=items(snippet(description,tags))&part=snippet&id=_cooC3yG_p0 HTTP/1.1" 200 None
[2022-11-17 23:48:02,343] DEBUG - Starting new HTTPS connection (1): www.googleapis.com:443
[2022-11-17 23:48:02,409] DEBUG - https://www.googleapis.com:443 "GET /youtube/v3/videos?key=AIzaSyDfv2ISoNjVh2oX2JRJUQ1loS-voHH3GlI&fields=items(snippet(description,tags))&part=snippet&id=XZJdyPkCxuE HTTP/1.1" 200 None
[2022-11-17 23:48:02,412] DEBUG - Starting new HTTPS connection (1): www.googleapis.com:443
[2022-11-17 23:48:02,480] DEBUG - https://www.googleapis.com:443 "GET /youtube/v3/videos?key=AIzaSyDfv2ISoNjVh2oX2JRJUQ1loS-voHH3GlI&fields=items(snippet(description,tags))&part=snippet&id=eSYeHlwDCNA HTTP/1.1" 200 None
[2022-11-17 23:48:02,482] DEBUG - Starting new HTTPS connection (1): www.googleapis.com:443
[2022-11-17 23:48:02,534] DEBUG - https://www.googleapis.com:443 "GET /youtube/v3/videos?key=AIzaSyDfv2ISoNjVh2oX2JRJUQ1loS-voHH3GlI&fields=items(snippet(description,tags))&part=snippet&id=JV5gLfXAEPk HTTP/1.1" 200 None
[2022-11-17 23:48:02,538] DEBUG - Starting new HTTPS connection (1): www.googleapis.com:443
[2022-11-17 23:48:02,584] DEBUG - https://www.googleapis.com:443 "GET /youtube/v3/videos?key=AIzaSyDfv2ISoNjVh2oX2JRJUQ1loS-voHH3GlI&fields=items(snippet(description,tags))&part=snippet&id=2vZAiAHa2GY HTTP/1.1" 200 None
[2022-11-17 23:48:02,586] DEBUG - Starting new HTTPS connection (1): www.googleapis.com:443
[2022-11-17 23:48:02,648] DEBUG - https://www.googleapis.com:443 "GET /youtube/v3/videos?key=AIzaSyDfv2ISoNjVh2oX2JRJUQ1loS-voHH3GlI&fields=items(snippet(description,tags))&part=snippet&id=4mnD1tSwy84 HTTP/1.1" 200 None
[2022-11-17 23:48:02,651] DEBUG - Starting new HTTPS connection (1): www.googleapis.com:443
[2022-11-17 23:48:02,713] DEBUG - https://www.googleapis.com:443 "GET /youtube/v3/videos?key=AIzaSyDfv2ISoNjVh2oX2JRJUQ1loS-voHH3GlI&fields=items(snippet(description,tags))&part=snippet&id=Tj89FA-d0f8 HTTP/1.1" 200 None
[2022-11-17 23:48:02,716] DEBUG - Starting new HTTPS connection (1): www.googleapis.com:443
[2022-11-17 23:48:02,765] DEBUG - https://www.googleapis.com:443 "GET /youtube/v3/videos?key=AIzaSyDfv2ISoNjVh2oX2JRJUQ1loS-voHH3GlI&fields=items(snippet(description,tags))&part=snippet&id=c5D7BJ-R41I HTTP/1.1" 200 None
[2022-11-17 23:48:02,768] DEBUG - Starting new HTTPS connection (1): www.googleapis.com:443
[2022-11-17 23:48:02,831] DEBUG - https://www.googleapis.com:443 "GET /youtube/v3/videos?key=AIzaSyDfv2ISoNjVh2oX2JRJUQ1loS-voHH3GlI&fields=items(snippet(description,tags))&part=snippet&id=yh1xu9ZUlFY HTTP/1.1" 200 None
[2022-11-17 23:48:02,833] DEBUG - Starting new HTTPS connection (1): www.googleapis.com:443
[2022-11-17 23:48:02,886] DEBUG - https://www.googleapis.com:443 "GET /youtube/v3/videos?key=AIzaSyDfv2ISoNjVh2oX2JRJUQ1loS-voHH3GlI&fields=items(snippet(description,tags))&part=snippet&id=3oFGZDamTDM HTTP/1.1" 200 None
[2022-11-17 23:48:02,889] DEBUG - Starting new HTTPS connection (1): www.googleapis.com:443
[2022-11-17 23:48:02,943] DEBUG - https://www.googleapis.com:443 "GET /youtube/v3/videos?key=AIzaSyDfv2ISoNjVh2oX2JRJUQ1loS-voHH3GlI&fields=items(snippet(description,tags))&part=snippet&id=pXo0bG4iAyg HTTP/1.1" 200 None
[2022-11-17 23:48:02,946] DEBUG - Starting new HTTPS connection (1): www.googleapis.com:443
[2022-11-17 23:48:02,990] DEBUG - https://www.googleapis.com:443 "GET /youtube/v3/videos?key=AIzaSyDfv2ISoNjVh2oX2JRJUQ1loS-voHH3GlI&fields=items(snippet(description,tags))&part=snippet&id=xvZGmaLqp7c HTTP/1.1" 200 None
[2022-11-17 23:48:02,992] DEBUG - Starting new HTTPS connection (1): www.googleapis.com:443
[2022-11-17 23:48:03,050] DEBUG - https://www.googleapis.com:443 "GET /youtube/v3/videos?key=AIzaSyDfv2ISoNjVh2oX2JRJUQ1loS-voHH3GlI&fields=items(snippet(description,tags))&part=snippet&id=zRKZ0-kOUZM HTTP/1.1" 200 None
[2022-11-17 23:48:03,054] DEBUG - Starting new HTTPS connection (1): www.googleapis.com:443
[2022-11-17 23:48:03,117] DEBUG - https://www.googleapis.com:443 "GET /youtube/v3/videos?key=AIzaSyDfv2ISoNjVh2oX2JRJUQ1loS-voHH3GlI&fields=items(snippet(description,tags))&part=snippet&id=ke0LGvMFPrQ HTTP/1.1" 200 None
[2022-11-17 23:48:03,123] DEBUG - Starting new HTTPS connection (1): www.googleapis.com:443
[2022-11-17 23:48:03,175] DEBUG - https://www.googleapis.com:443 "GET /youtube/v3/videos?key=AIzaSyDfv2ISoNjVh2oX2JRJUQ1loS-voHH3GlI&fields=items(snippet(description,tags))&part=snippet&id=PStn9zHgXHU HTTP/1.1" 200 None
[2022-11-17 23:48:03,177] DEBUG - Starting new HTTPS connection (1): www.googleapis.com:443
[2022-11-17 23:48:03,230] DEBUG - https://www.googleapis.com:443 "GET /youtube/v3/videos?key=AIzaSyDfv2ISoNjVh2oX2JRJUQ1loS-voHH3GlI&fields=items(snippet(description,tags))&part=snippet&id=VDD6FDhKCYA HTTP/1.1" 200 None
[2022-11-17 23:48:03,233] DEBUG - Starting new HTTPS connection (1): www.googleapis.com:443
[2022-11-17 23:48:03,283] DEBUG - https://www.googleapis.com:443 "GET /youtube/v3/videos?key=AIzaSyDfv2ISoNjVh2oX2JRJUQ1loS-voHH3GlI&fields=items(snippet(description,tags))&part=snippet&id=bw9DICA8TDU HTTP/1.1" 200 None
[2022-11-17 23:48:03,286] DEBUG - Starting new HTTPS connection (1): www.googleapis.com:443
[2022-11-17 23:48:03,344] DEBUG - https://www.googleapis.com:443 "GET /youtube/v3/videos?key=AIzaSyDfv2ISoNjVh2oX2JRJUQ1loS-voHH3GlI&fields=items(snippet(description,tags))&part=snippet&id=ylubn9pYPrQ HTTP/1.1" 200 None
[2022-11-17 23:48:03,349] DEBUG - Starting new HTTPS connection (1): www.googleapis.com:443
[2022-11-17 23:48:03,412] DEBUG - https://www.googleapis.com:443 "GET /youtube/v3/videos?key=AIzaSyDfv2ISoNjVh2oX2JRJUQ1loS-voHH3GlI&fields=items(snippet(description,tags))&part=snippet&id=UuceRRQGk8E HTTP/1.1" 200 None
[2022-11-17 23:48:03,418] DEBUG - Starting new HTTPS connection (1): www.googleapis.com:443
[2022-11-17 23:48:03,479] DEBUG - https://www.googleapis.com:443 "GET /youtube/v3/videos?key=AIzaSyDfv2ISoNjVh2oX2JRJUQ1loS-voHH3GlI&fields=items(snippet(description,tags))&part=snippet&id=KRFiAlo7t1E HTTP/1.1" 200 None
[2022-11-17 23:48:03,483] DEBUG - Starting new HTTPS connection (1): www.googleapis.com:443
[2022-11-17 23:48:03,532] DEBUG - https://www.googleapis.com:443 "GET /youtube/v3/videos?key=AIzaSyDfv2ISoNjVh2oX2JRJUQ1loS-voHH3GlI&fields=items(snippet(description,tags))&part=snippet&id=hmrgBP-_rPo HTTP/1.1" 200 None
[2022-11-17 23:48:03,535] DEBUG - Starting new HTTPS connection (1): www.googleapis.com:443
[2022-11-17 23:48:03,591] DEBUG - https://www.googleapis.com:443 "GET /youtube/v3/videos?key=AIzaSyDfv2ISoNjVh2oX2JRJUQ1loS-voHH3GlI&fields=items(snippet(description,tags))&part=snippet&id=9Nj3_JXA1p4 HTTP/1.1" 200 None
[2022-11-17 23:48:03,595] DEBUG - Starting new HTTPS connection (1): www.googleapis.com:443
[2022-11-17 23:48:03,645] DEBUG - https://www.googleapis.com:443 "GET /youtube/v3/videos?key=AIzaSyDfv2ISoNjVh2oX2JRJUQ1loS-voHH3GlI&fields=items(snippet(description,tags))&part=snippet&id=rBU9E-ZOZAI HTTP/1.1" 200 None
[2022-11-17 23:48:03,648] DEBUG - Starting new HTTPS connection (1): www.googleapis.com:443
[2022-11-17 23:48:03,730] DEBUG - https://www.googleapis.com:443 "GET /youtube/v3/videos?key=AIzaSyDfv2ISoNjVh2oX2JRJUQ1loS-voHH3GlI&fields=items(snippet(description,tags))&part=snippet&id=jrxbUkJwTBg HTTP/1.1" 200 None
[2022-11-17 23:48:03,733] DEBUG - Starting new HTTPS connection (1): www.googleapis.com:443
[2022-11-17 23:48:03,793] DEBUG - https://www.googleapis.com:443 "GET /youtube/v3/videos?key=AIzaSyDfv2ISoNjVh2oX2JRJUQ1loS-voHH3GlI&fields=items(snippet(description,tags))&part=snippet&id=GMS-IsCgDyk HTTP/1.1" 200 None
[2022-11-17 23:48:03,794] DEBUG - Hashtags ['#youcanlearnanything', '#youcanlearnanything', '#igcsesequences', '#igcse0580', '#igcsemaths', '#youcanlearnanything']
[2022-11-17 23:48:03,794] DEBUG - Top Hashtags ['#youcanlearnanything', '#igcsesequences', '#igcse0580', '#igcsemaths']
[2022-11-17 23:48:03,795] DEBUG - Tags ['arithmetic sequences', 'arithmetic series', 'video help', 'video how to', 'video tutorial', 'computer science sequences', 'computer science selections', 'computer science loops', 'computer loops', 'computer selections', 'computer sequences', 'sequences', 'loops', 'selections', 'code', 'computer code', 'programming structures', 'algorithms', 'math', 'maths', 'mathematics', 'gcse', 'maths', 'revision', 'sequence', 'math', 'mathematics (field of study)', 'maths online', 'what is an arithmetic sequence', 'arithmetic sequence', 'arithmetic sequence formula', 'sum of the terms in an arithmetic sequence', 'sum of an arithmetic sequence', 'sequences for a level maths', 'sequences and series', 'arithmetic and geometric sequences', 'arithmetic and geometric series', 'arithmetic recursive formula', 'arithmetic and geometric formulas', 'sum of an arithmetic series', 'sum of a geometric series', 'find arithmetic formula given 2 terms', 'find geometric formula given 2 terms', "mario's math tutoring", 'mario', 'youcanlearnanyhing', 'gcse', 'maths', 'revision', 'sequence', 'mathematics (field of study)', 'none', 'quadratic equation (literature subject)', 'lc', 'hl', 'ol', 'higher level', 'ordinary level', 'how to', 'how to get', '625', 'h1', 'dublin', 'ireland', 'grinds', 'online', 'website', 'notes', 'study', 'exam', 'examlearn', 'questions', 'advice', 'videos', 'maths', 'leaving cert', 'geometric series', 'geometric sequences', 'science', 'learn', 'revision', 'gcse', 'alevels', 'aqa', 'students free online courses video science videos', 'student', 'fuseschool', 'global education', 'ict4d', 'maths', 'algebra', 'arithmetic sequence', 'linear', 'nth term', 'arithmetic sequence', 'numbers', 'sequences', 'constant', 'seven', "khintchine's constant", 'wieferich primes', "golomb's sequence", 'metadrome', 'wild numbers', 'sequence', 'math', 'integest', 'igcse sequences', 'igcse sequences questions', 'igcse sequences past paper questions', 'igcse sequences exam questions', 'quadratic sequence igcse', 'cubic sequences igcse', 'exponential sequences igcse', 'geometric sequence igcse', 'number sequences igcse', 'igcse math number sequences', 'linear sequences igcse', 'igcse maths geometric sequences', 'geometric sequence igcse questions', 'quadratic sequence igcse worksheet', 'sequence', 'sequences', 'arithmetic sequence', 'geometric sequence', 'math sequences', 'math sequences and series', 'math sequence tutorial', 'what is a sequence in math', 'common ratio', 'common difference', 'series', 'arithmetic series', 'geometric series', 'arithmetic sequence formula', 'arithmetic sequence vs geometric sequence', 'geometric sequence formula', 'find the common ratio', 'find the common difference', 'nth term', 'infinite sum', 'arithmetic mean', 'geometric mean', 'common ratio definition', 'algebra', 'math', 'maths', 'math', 'math tutor', 'maths tutor', 'gcse', 'gcse maths', 'edexcel', 'sequences', 'linear sequences', 'patterns', 'nth term', 'hegartymaths', 'igcse', 'maths', 'revision', 'international', 'gcse', 'sum', 'sn', 'linear', 'nth term', 'predictable revenue', 'aaron ross', 'collin stewart', 'sdr', 'meetings', 'sequences', 'cadences', 'book meetings', 'build sequences', 'build cadences', 'outreach', 'prospecting', 'sales development representative', 'sales tips', 'b2b sales', 'numberphile', 'sequence', 'introduction to sequence', 'arithmetic sequence', 'geometric sequence', 'grade 10 math', 'math lessons grade 10', 'first lesson in math 10', 'grade 12', 'mathematics', 'quadratic sequence', 'arithmetic sequence', 'geometric sequence', 'simultaneous equations', 'formula']
[2022-11-17 23:48:03,795] DEBUG - Top Tags ['maths', 'arithmetic sequence', 'sequences', 'math', 'gcse', 'sequence', 'revision', 'nth term', 'geometric sequence', 'arithmetic series', 'mathematics', 'mathematics (field of study)', 'arithmetic sequence formula', 'geometric series', 'algebra', 'linear']
[2022-11-17 23:48:16,330] DEBUG - processing 32 tts sections
[2022-11-17 23:48:16,330] DEBUG - Text-to-speech: What is a sequence?
[2022-11-17 23:48:16,331] DEBUG - [#1] Subsection: What is a sequence?
[2022-11-17 23:48:32,128] DEBUG - Text-to-speech: In computer science, a sequence is a set of data that is organized in a particular order.
A sequence can be any length, but it is usually finite.
A sequence is a type of data structure.
[2022-11-17 23:48:32,128] DEBUG - [#1] Subsection: In computer science, a sequence is a set of data that is organized in a particular order.
A sequence can be any length, but it is usually finite.
A sequence is a type of data structure.
[2022-11-17 23:49:01,857] DEBUG - [#2] Subsection: In computer science, a sequence is a set of data that is organized in a particular order.
A sequence can be any length, but it is usually finite.
A sequence is a type of data structure.
[2022-11-17 23:49:27,816] DEBUG - [#3] Subsection: In computer science, a sequence is a set of data that is organized in a particular order.
A sequence can be any length, but it is usually finite.
A sequence is a type of data structure.
[2022-11-17 23:49:48,412] DEBUG - Text-to-speech: What are the different types of sequences?
[2022-11-17 23:49:48,413] DEBUG - [#1] Subsection: What are the different types of sequences?
[2022-11-17 23:50:06,472] DEBUG - Text-to-speech: There are two main types of sequences: linear and nonlinear.

Linear sequences are those where the data is arranged in a straight line. The most common type of linear sequence is an array.

Nonlinear sequences are those where the data is arranged in a more complex pattern. The most common type of nonlinear sequence is a linked list.
[2022-11-17 23:50:06,473] DEBUG - [#1] Subsection: There are two main types of sequences: linear and nonlinear.

Linear sequences are those where the data is arranged in a straight line. The most common type of linear sequence is an array.

Nonlinear sequences are those where the data is arranged in a more complex pattern. The most common type of nonlinear sequence is a linked list.
[2022-11-17 23:50:30,877] DEBUG - [#2] Subsection: There are two main types of sequences: linear and nonlinear.

Linear sequences are those where the data is arranged in a straight line. The most common type of linear sequence is an array.

Nonlinear sequences are those where the data is arranged in a more complex pattern. The most common type of nonlinear sequence is a linked list.
[2022-11-17 23:50:54,821] DEBUG - [#3] Subsection: There are two main types of sequences: linear and nonlinear.

Linear sequences are those where the data is arranged in a straight line. The most common type of linear sequence is an array.

Nonlinear sequences are those where the data is arranged in a more complex pattern. The most common type of nonlinear sequence is a linked list.
[2022-11-17 23:51:15,682] DEBUG - [#4] Subsection: There are two main types of sequences: linear and nonlinear.

Linear sequences are those where the data is arranged in a straight line. The most common type of linear sequence is an array.

Nonlinear sequences are those where the data is arranged in a more complex pattern. The most common type of nonlinear sequence is a linked list.
[2022-11-17 23:51:43,989] DEBUG - [#5] Subsection: There are two main types of sequences: linear and nonlinear.

Linear sequences are those where the data is arranged in a straight line. The most common type of linear sequence is an array.

Nonlinear sequences are those where the data is arranged in a more complex pattern. The most common type of nonlinear sequence is a linked list.
[2022-11-17 23:52:06,943] DEBUG - Text-to-speech: What are the properties of a sequence?
[2022-11-17 23:52:06,943] DEBUG - [#1] Subsection: What are the properties of a sequence?
[2022-11-17 23:52:23,632] DEBUG - Text-to-speech: In computer science, there are two main properties of a sequence:

1. The order of the elements is important
2. The number of elements is finite
[2022-11-17 23:52:23,632] DEBUG - [#1] Subsection: In computer science, there are two main properties of a sequence:

1. The order of the elements is important
2. The number of elements is finite
[2022-11-17 23:52:49,415] DEBUG - [#2] Subsection: In computer science, there are two main properties of a sequence:

1. The order of the elements is important
2. The number of elements is finite
[2022-11-17 23:53:06,804] DEBUG - [#3] Subsection: In computer science, there are two main properties of a sequence:

1. The order of the elements is important
2. The number of elements is finite
[2022-11-17 23:53:23,046] DEBUG - Text-to-speech: How do you represent a sequence in computer memory?
[2022-11-17 23:53:23,047] DEBUG - [#1] Subsection: How do you represent a sequence in computer memory?
[2022-11-17 23:53:41,518] DEBUG - Text-to-speech: There are two ways to represent a sequence in computer memory.

1. Using an array
2. Using a linked list
[2022-11-17 23:53:41,518] DEBUG - [#1] Subsection: There are two ways to represent a sequence in computer memory.

1. Using an array
2. Using a linked list
[2022-11-17 23:54:04,079] DEBUG - [#2] Subsection: There are two ways to represent a sequence in computer memory.

1. Using an array
2. Using a linked list
[2022-11-17 23:54:17,189] DEBUG - [#3] Subsection: There are two ways to represent a sequence in computer memory.

1. Using an array
2. Using a linked list
[2022-11-17 23:54:31,342] DEBUG - [#4] Subsection: There are two ways to represent a sequence in computer memory.

1. Using an array
2. Using a linked list
[2022-11-17 23:54:45,205] DEBUG - Text-to-speech: What are the operations that can be performed on a sequence?
[2022-11-17 23:54:45,205] DEBUG - [#1] Subsection: What are the operations that can be performed on a sequence?
[2022-11-17 23:55:03,204] DEBUG - Text-to-speech: The most common operations that can be performed on a sequence are:

1. Accessing an element: This operation allows you to retrieve a specific element from the sequence

2. Searching for an element: This operation allows you to find an element in the sequence

3. Inserting an element: This operation allows you to insert an element into the sequence

4. Deleting an element: This operation allows you to delete an element from the sequence
[2022-11-17 23:55:03,204] DEBUG - [#1] Subsection: The most common operations that can be performed on a sequence are:

1. Accessing an element: This operation allows you to retrieve a specific element from the sequence

2. Searching for an element: This operation allows you to find an element in the sequence

3. Inserting an element: This operation allows you to insert an element into the sequence

4. Deleting an element: This operation allows you to delete an element from the sequence
[2022-11-17 23:55:28,621] DEBUG - [#2] Subsection: The most common operations that can be performed on a sequence are:

1. Accessing an element: This operation allows you to retrieve a specific element from the sequence

2. Searching for an element: This operation allows you to find an element in the sequence

3. Inserting an element: This operation allows you to insert an element into the sequence

4. Deleting an element: This operation allows you to delete an element from the sequence
[2022-11-17 23:55:58,418] DEBUG - [#3] Subsection: The most common operations that can be performed on a sequence are:

1. Accessing an element: This operation allows you to retrieve a specific element from the sequence

2. Searching for an element: This operation allows you to find an element in the sequence

3. Inserting an element: This operation allows you to insert an element into the sequence

4. Deleting an element: This operation allows you to delete an element from the sequence
[2022-11-17 23:56:25,810] DEBUG - [#4] Subsection: The most common operations that can be performed on a sequence are:

1. Accessing an element: This operation allows you to retrieve a specific element from the sequence

2. Searching for an element: This operation allows you to find an element in the sequence

3. Inserting an element: This operation allows you to insert an element into the sequence

4. Deleting an element: This operation allows you to delete an element from the sequence
[2022-11-17 23:56:54,794] DEBUG - [#5] Subsection: The most common operations that can be performed on a sequence are:

1. Accessing an element: This operation allows you to retrieve a specific element from the sequence

2. Searching for an element: This operation allows you to find an element in the sequence

3. Inserting an element: This operation allows you to insert an element into the sequence

4. Deleting an element: This operation allows you to delete an element from the sequence
[2022-11-17 23:57:22,683] DEBUG - Text-to-speech: What are the applications of sequences in computer science?
[2022-11-17 23:57:22,683] DEBUG - [#1] Subsection: What are the applications of sequences in computer science?
[2022-11-17 23:57:42,524] DEBUG - Text-to-speech: There are many applications of sequences in computer science. Some of the most common applications are as follows:

1. Data storage: Sequences are often used to store data in computer memory

2. Data retrieval: Sequences are often used to retrieve data from computer memory

3. Data manipulation: Sequences are often used to manipulate data in computer memory

4. Data processing: Sequences are often used to process data in computer memory
[2022-11-17 23:57:42,524] DEBUG - [#1] Subsection: There are many applications of sequences in computer science. Some of the most common applications are as follows:

1. Data storage: Sequences are often used to store data in computer memory

2. Data retrieval: Sequences are often used to retrieve data from computer memory

3. Data manipulation: Sequences are often used to manipulate data in computer memory

4. Data processing: Sequences are often used to process data in computer memory
[2022-11-17 23:58:01,899] DEBUG - [#2] Subsection: There are many applications of sequences in computer science. Some of the most common applications are as follows:

1. Data storage: Sequences are often used to store data in computer memory

2. Data retrieval: Sequences are often used to retrieve data from computer memory

3. Data manipulation: Sequences are often used to manipulate data in computer memory

4. Data processing: Sequences are often used to process data in computer memory
[2022-11-17 23:58:23,406] DEBUG - [#3] Subsection: There are many applications of sequences in computer science. Some of the most common applications are as follows:

1. Data storage: Sequences are often used to store data in computer memory

2. Data retrieval: Sequences are often used to retrieve data from computer memory

3. Data manipulation: Sequences are often used to manipulate data in computer memory

4. Data processing: Sequences are often used to process data in computer memory
[2022-11-17 23:58:52,124] DEBUG - [#4] Subsection: There are many applications of sequences in computer science. Some of the most common applications are as follows:

1. Data storage: Sequences are often used to store data in computer memory

2. Data retrieval: Sequences are often used to retrieve data from computer memory

3. Data manipulation: Sequences are often used to manipulate data in computer memory

4. Data processing: Sequences are often used to process data in computer memory
[2022-11-17 23:59:20,647] DEBUG - [#5] Subsection: There are many applications of sequences in computer science. Some of the most common applications are as follows:

1. Data storage: Sequences are often used to store data in computer memory

2. Data retrieval: Sequences are often used to retrieve data from computer memory

3. Data manipulation: Sequences are often used to manipulate data in computer memory

4. Data processing: Sequences are often used to process data in computer memory
[2022-11-17 23:59:50,791] DEBUG - [#6] Subsection: There are many applications of sequences in computer science. Some of the most common applications are as follows:

1. Data storage: Sequences are often used to store data in computer memory

2. Data retrieval: Sequences are often used to retrieve data from computer memory

3. Data manipulation: Sequences are often used to manipulate data in computer memory

4. Data processing: Sequences are often used to process data in computer memory
[2022-11-18 00:00:19,724] CRITICAL - Failed to generate audio
[2022-11-18 00:00:19,725] INFO - Getting video script.
[2022-11-18 00:00:19,725] INFO - message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
[2022-11-18 00:00:19,725] DEBUG - api_version=None data='{"model": "text-davinci-002", "prompt": "Write a list of unique and interesting keywords relating to basic computer science:\\n\\n-", "temperature": 1, "max_tokens": 128, "top_p": 1, "frequency_penalty": 0, "presence_penalty": 0, "n": 1, "stop": "", "echo": false}' message='Post details'
[2022-11-18 00:00:19,726] DEBUG - Resetting dropped connection: api.openai.com
[2022-11-18 00:00:22,790] DEBUG - https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 572
[2022-11-18 00:00:22,790] INFO - message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=2672 request_id=e58a5e3768bacdf7661fb75ba5bdc19a response_code=200
[2022-11-18 00:00:22,791] INFO - message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
[2022-11-18 00:00:22,791] DEBUG - api_version=None data='{"model": "text-curie-001", "prompt": "Write a list of 5 interesting beginner topics on where Computer hardware is used in the context of computer science:\\n-", "temperature": 0.7, "max_tokens": 256, "top_p": 1, "frequency_penalty": 0, "presence_penalty": 0, "n": 1, "stop": "", "echo": false}' message='Post details'
[2022-11-18 00:00:23,360] DEBUG - https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 415
[2022-11-18 00:00:23,360] INFO - message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=319 request_id=4e644af8c472fc049eebc05bd90dbf55 response_code=200
[2022-11-18 00:00:23,361] INFO - message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
[2022-11-18 00:00:23,361] DEBUG - api_version=None data='{"model": "text-davinci-002", "prompt": "Write a short, unique and interesting title relating to the theory of Computer Hardware and Java in the form of a video essay title without involving numbers:", "temperature": 1, "max_tokens": 20, "top_p": 1, "frequency_penalty": 0, "presence_penalty": 0, "n": 1, "stop": "", "echo": false}' message='Post details'
[2022-11-18 00:00:50,339] DEBUG - https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 308
[2022-11-18 00:00:50,340] INFO - message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1236 request_id=840e604ddb626822b82f40b158ea56b3 response_code=200
[2022-11-18 00:00:50,366] DEBUG - Keyword Computer hardware, Topics ['Computer Hardware and Assembly Language', 'Computer Hardware and C++', 'Computer Hardware and Python', 'Computer Hardware and Java', 'Computer Hardware and SQL'], Topic The Evolution of Computer Hardware and Java
[2022-11-18 00:00:50,366] INFO - message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
[2022-11-18 00:00:50,366] DEBUG - api_version=None data='{"model": "text-davinci-002", "prompt": "Write a list of beginner topics relating to what is The Evolution of Computer Hardware and Java in the context of computer science:\\n\\n", "temperature": 0, "max_tokens": 256, "top_p": 1, "frequency_penalty": 0, "presence_penalty": 0, "n": 1, "stop": "", "echo": false}' message='Post details'
[2022-11-18 00:00:54,238] DEBUG - https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 517
[2022-11-18 00:00:54,238] INFO - message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=3037 request_id=8df58e36f50c18542517b4ba16251417 response_code=200
[2022-11-18 00:00:54,238] DEBUG - topic: The Evolution of Computer Hardware and Java, sub topics 
-What is the history of computer hardware?
-What are the different types of computer hardware?
-How has computer hardware evolved over time?
-What is the difference between hardware and software?
-What is Java and how is it used in computer science?
[2022-11-18 00:00:54,238] DEBUG - getting summary for topic
[2022-11-18 00:00:54,238] INFO - message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
[2022-11-18 00:00:54,239] DEBUG - api_version=None data='{"model": "text-curie-001", "prompt": "Write a summary for the following topic in the form of a youtube description in the context of computer science:\\n\\ntopic: The Evolution of Computer Hardware and Java\\n\\nsummary:", "temperature": 0, "max_tokens": 256, "top_p": 1, "frequency_penalty": 0, "presence_penalty": 0, "n": 1, "stop": "", "echo": false}' message='Post details'
[2022-11-18 00:00:54,928] DEBUG - https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 530
[2022-11-18 00:00:54,929] INFO - message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=546 request_id=1b244f525762b5210fecad02cea6f869 response_code=200
[2022-11-18 00:00:54,929] INFO - message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
[2022-11-18 00:00:54,929] DEBUG - api_version=None data='{"model": "text-davinci-002", "prompt": "Expand greatly upon the topic of The Evolution of Computer Hardware and Java in the context of computer science summarised for a 9th grader:\\n\\n1. What is the history of computer hardware?\\n\\n", "temperature": 1, "max_tokens": 128, "top_p": 1, "frequency_penalty": 0, "presence_penalty": 0, "n": 1, "stop": ["2.", "1."], "echo": false}' message='Post details'
[2022-11-18 00:00:59,475] DEBUG - https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 922
[2022-11-18 00:00:59,475] INFO - message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=4405 request_id=ee8a220800324e3e7b29c36a7f79400a response_code=200
[2022-11-18 00:00:59,475] INFO - message='Request to OpenAI API' method=post path=https://api.openai.com/v1/edits
[2022-11-18 00:00:59,476] DEBUG - api_version=None data='{"model": "text-davinci-edit-001", "input": "Computer hardware is the collection of physical parts of a computer system. This includes the central processing unit (CPU), memory, storage, input/output devices, and networking components. The first computers were created in the early 1800s. They were called mechanical calculators, and they could only be used by mathematicians and scientists. In 1876, Charles Babbage designed a machine called the Analytical Engine, which could be programmed to perform any calculation that could be done by hand. However, the machine was never completed. In 1937, John Atanasoff and Clifford Berry developed the first electronic computer, called the Atanasoff-Berry", "instruction": "Replace all non-characters with their spoken counterpart. And fix grammar.", "temperature": 0, "top_p": 1}' message='Post details'
[2022-11-18 00:01:05,161] DEBUG - https://api.openai.com:443 "POST /v1/edits HTTP/1.1" 200 803
[2022-11-18 00:01:05,161] INFO - message='OpenAI API response' path=https://api.openai.com/v1/edits processing_ms=5540 request_id=1a9fb73f4265603fb21b5e5c0eb3e945 response_code=200
[2022-11-18 00:01:05,161] INFO - message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
[2022-11-18 00:01:05,161] DEBUG - api_version=None data='{"model": "text-davinci-002", "prompt": "Expand greatly upon the topic of The Evolution of Computer Hardware and Java in the context of computer science summarised for a 9th grader:\\n\\n1. What is the history of computer hardware?\\n\\nComputer hardware is the collection of physical parts of a computer system. This includes the central processing unit (CPU), memory, storage, input/output devices, and networking components. The first computers were created in the early 1800s. They were called mechanical calculators, and they could only be used by mathematicians and scientists. In 1876, Charles Babbage designed a machine called the Analytical Engine, which could be programmed to perform any calculation that could be done by hand. However, the machine was never completed. In 1937, John Atanasoff and Clifford Berry developed the first electronic computer, called the AtanasoffBerry.\\n\\n2. What are the different types of computer hardware?\\n\\n", "temperature": 1, "max_tokens": 128, "top_p": 1, "frequency_penalty": 0, "presence_penalty": 0, "n": 1, "stop": ["3.", "2."], "echo": false}' message='Post details'
[2022-11-18 00:01:06,945] DEBUG - https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 421
[2022-11-18 00:01:06,945] INFO - message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1643 request_id=367c2f4d63bd8edea3767c384b6e923a response_code=200
[2022-11-18 00:01:06,945] INFO - message='Request to OpenAI API' method=post path=https://api.openai.com/v1/edits
[2022-11-18 00:01:06,945] DEBUG - api_version=None data='{"model": "text-davinci-edit-001", "input": "The different types of computer hardware include the central processing unit (CPU), memory, storage, input/output devices, and networking components.", "instruction": "Replace all non-characters with their spoken counterpart. And fix grammar.", "temperature": 0, "top_p": 1}' message='Post details'
[2022-11-18 00:01:08,468] DEBUG - https://api.openai.com:443 "POST /v1/edits HTTP/1.1" 200 294
[2022-11-18 00:01:08,469] INFO - message='OpenAI API response' path=https://api.openai.com/v1/edits processing_ms=1386 request_id=75d506498b41080f665be038c157aa4b response_code=200
[2022-11-18 00:01:08,470] INFO - message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
[2022-11-18 00:01:08,470] DEBUG - api_version=None data='{"model": "text-davinci-002", "prompt": "Expand greatly upon the topic of The Evolution of Computer Hardware and Java in the context of computer science summarised for a 9th grader:\\n\\n1. What is the history of computer hardware?\\n\\nComputer hardware is the collection of physical parts of a computer system. This includes the central processing unit (CPU), memory, storage, input/output devices, and networking components. The first computers were created in the early 1800s. They were called mechanical calculators, and they could only be used by mathematicians and scientists. In 1876, Charles Babbage designed a machine called the Analytical Engine, which could be programmed to perform any calculation that could be done by hand. However, the machine was never completed. In 1937, John Atanasoff and Clifford Berry developed the first electronic computer, called the AtanasoffBerry.\\n\\n2. What are the different types of computer hardware?\\n\\nThe different types of computer hardware include the central processing unit (CPU), memory, storage, input/output devices, and networking components\\n\\n3. How has computer hardware evolved over time?\\n\\n", "temperature": 1, "max_tokens": 128, "top_p": 1, "frequency_penalty": 0, "presence_penalty": 0, "n": 1, "stop": ["4.", "3."], "echo": false}' message='Post details'
[2022-11-18 00:01:13,657] DEBUG - https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 731
[2022-11-18 00:01:13,658] INFO - message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=5048 request_id=87d7a32dd2035d5f51a531e3ac14bcff response_code=200
[2022-11-18 00:01:13,658] INFO - message='Request to OpenAI API' method=post path=https://api.openai.com/v1/edits
[2022-11-18 00:01:13,658] DEBUG - api_version=None data='{"model": "text-davinci-edit-001", "input": "The first computers were created in the early 1800s. They were called mechanical calculators, and they could only be used by mathematicians and scientists. In 1876, Charles Babbage designed a machine called the Analytical Engine, which could be programmed to perform any calculation that could be done by hand. However, the machine was never completed. In 1937, John Atanasoff and Clifford Berry developed the first electronic computer, called the AtanasoffBerry.", "instruction": "Replace all non-characters with their spoken counterpart. And fix grammar.", "temperature": 0, "top_p": 1}' message='Post details'
[2022-11-18 00:01:18,013] DEBUG - https://api.openai.com:443 "POST /v1/edits HTTP/1.1" 200 612
[2022-11-18 00:01:18,013] INFO - message='OpenAI API response' path=https://api.openai.com/v1/edits processing_ms=4210 request_id=7536d94d68512e537acf0b286dacf711 response_code=200
[2022-11-18 00:01:18,014] INFO - message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
[2022-11-18 00:01:18,014] DEBUG - api_version=None data='{"model": "text-davinci-002", "prompt": "Expand greatly upon the topic of The Evolution of Computer Hardware and Java in the context of computer science summarised for a 9th grader:\\n\\n1. What is the history of computer hardware?\\n\\nComputer hardware is the collection of physical parts of a computer system. This includes the central processing unit (CPU), memory, storage, input/output devices, and networking components. The first computers were created in the early 1800s. They were called mechanical calculators, and they could only be used by mathematicians and scientists. In 1876, Charles Babbage designed a machine called the Analytical Engine, which could be programmed to perform any calculation that could be done by hand. However, the machine was never completed. In 1937, John Atanasoff and Clifford Berry developed the first electronic computer, called the AtanasoffBerry.\\n\\n2. What are the different types of computer hardware?\\n\\nThe different types of computer hardware include the central processing unit (CPU), memory, storage, input/output devices, and networking components\\n\\n3. How has computer hardware evolved over time?\\n\\nThe first computers were created in the early 1800s. They were called mechanical calculators, and they could only be used by mathematicians and scientists. In 1876, Charles Babbage designed a machine called the Analytical Engine, which could be programmed to perform any calculation that could be done by hand. However, the machine was never completed. In 1937, John Atanasoff and Clifford Berry developed the first electronic computer, called the AtanasoffBerry.\\n\\n4. What is the difference between hardware and software?\\n\\n", "temperature": 1, "max_tokens": 128, "top_p": 1, "frequency_penalty": 0, "presence_penalty": 0, "n": 1, "stop": ["5.", "4."], "echo": false}' message='Post details'
[2022-11-18 00:01:20,644] DEBUG - https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 477
[2022-11-18 00:01:20,644] INFO - message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=2490 request_id=7aee559885c8352c5eab559fffa072c7 response_code=200
[2022-11-18 00:01:20,644] INFO - message='Request to OpenAI API' method=post path=https://api.openai.com/v1/edits
[2022-11-18 00:01:20,644] DEBUG - api_version=None data='{"model": "text-davinci-edit-001", "input": "Hardware is the physical parts of the computer, such as the Central Processing Unit (CPU), memory, storage, and input/output devices. Software is the programs or instructions that tell the hardware what to do.", "instruction": "Replace all non-characters with their spoken counterpart. And fix grammar.", "temperature": 0, "top_p": 1}' message='Post details'
[2022-11-18 00:01:22,929] DEBUG - https://api.openai.com:443 "POST /v1/edits HTTP/1.1" 200 356
[2022-11-18 00:01:22,929] INFO - message='OpenAI API response' path=https://api.openai.com/v1/edits processing_ms=2142 request_id=eb0aa5ef8b3ec19134b1ec4c71bf4fc8 response_code=200
[2022-11-18 00:01:22,929] INFO - message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
[2022-11-18 00:01:22,929] DEBUG - api_version=None data='{"model": "text-davinci-002", "prompt": "Expand greatly upon the topic of The Evolution of Computer Hardware and Java in the context of computer science summarised for a 9th grader:\\n\\n1. What is the history of computer hardware?\\n\\nComputer hardware is the collection of physical parts of a computer system. This includes the central processing unit (CPU), memory, storage, input/output devices, and networking components. The first computers were created in the early 1800s. They were called mechanical calculators, and they could only be used by mathematicians and scientists. In 1876, Charles Babbage designed a machine called the Analytical Engine, which could be programmed to perform any calculation that could be done by hand. However, the machine was never completed. In 1937, John Atanasoff and Clifford Berry developed the first electronic computer, called the AtanasoffBerry.\\n\\n2. What are the different types of computer hardware?\\n\\nThe different types of computer hardware include the central processing unit (CPU), memory, storage, input/output devices, and networking components\\n\\n3. How has computer hardware evolved over time?\\n\\nThe first computers were created in the early 1800s. They were called mechanical calculators, and they could only be used by mathematicians and scientists. In 1876, Charles Babbage designed a machine called the Analytical Engine, which could be programmed to perform any calculation that could be done by hand. However, the machine was never completed. In 1937, John Atanasoff and Clifford Berry developed the first electronic computer, called the AtanasoffBerry.\\n\\n4. What is the difference between hardware and software?\\n\\nHardware is the physical parts of the computer, such as the central processing unit (CPU), memory, storage, and input/output devices.\\nSoftware is the programs or instructions that tell the hardware what to do.\\n\\n5. What is Java and how is it used in computer science?\\n\\n", "temperature": 1, "max_tokens": 128, "top_p": 1, "frequency_penalty": 0, "presence_penalty": 0, "n": 1, "stop": ["6.", "5."], "echo": false}' message='Post details'
[2022-11-18 00:01:23,951] DEBUG - https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 322
[2022-11-18 00:01:23,952] INFO - message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=881 request_id=9196a6f150001b479624319d2c76e055 response_code=200
[2022-11-18 00:01:23,952] INFO - message='Request to OpenAI API' method=post path=https://api.openai.com/v1/edits
[2022-11-18 00:01:23,952] DEBUG - api_version=None data='{"model": "text-davinci-edit-001", "input": "Java is a programming language that was created in 199", "instruction": "Replace all non-characters with their spoken counterpart. And fix grammar.", "temperature": 0, "top_p": 1}' message='Post details'
[2022-11-18 00:01:24,960] DEBUG - https://api.openai.com:443 "POST /v1/edits HTTP/1.1" 200 201
[2022-11-18 00:01:24,960] INFO - message='OpenAI API response' path=https://api.openai.com/v1/edits processing_ms=869 request_id=b1ec7c46abcdc312d9837f42e9d0e321 response_code=200
[2022-11-18 00:01:24,961] DEBUG - Starting new HTTPS connection (1): www.googleapis.com:443
[2022-11-18 00:01:25,109] DEBUG - https://www.googleapis.com:443 "GET /youtube/v3/playlists?part=id&id=UC_x5XG1OV2P6uZZ5FSM9Ttw&key=AIzaSyDfv2ISoNjVh2oX2JRJUQ1loS-voHH3GlI&maxResults=2 HTTP/1.1" 200 None
[2022-11-18 00:01:25,111] DEBUG - Starting new HTTPS connection (1): www.googleapis.com:443
[2022-11-18 00:01:25,646] DEBUG - https://www.googleapis.com:443 "GET /youtube/v3/search?part=snippet&type=video&maxResults=50&order=relevance&key=AIzaSyDfv2ISoNjVh2oX2JRJUQ1loS-voHH3GlI&q=The%20Evolution%20of%20Computer%20Hardware%20and%20Java&publishedAfter=2000-01-01T00:00:00Z&publishedBefore=3000-01-01T00:00:00Z HTTP/1.1" 200 None
[2022-11-18 00:01:25,649] DEBUG - Starting new HTTPS connection (1): www.googleapis.com:443
[2022-11-18 00:01:25,701] DEBUG - https://www.googleapis.com:443 "GET /youtube/v3/videos?key=AIzaSyDfv2ISoNjVh2oX2JRJUQ1loS-voHH3GlI&fields=items(snippet(description,tags))&part=snippet&id=M4d3FXu9-3I HTTP/1.1" 200 None
[2022-11-18 00:01:25,704] DEBUG - Starting new HTTPS connection (1): www.googleapis.com:443
[2022-11-18 00:01:25,773] DEBUG - https://www.googleapis.com:443 "GET /youtube/v3/videos?key=AIzaSyDfv2ISoNjVh2oX2JRJUQ1loS-voHH3GlI&fields=items(snippet(description,tags))&part=snippet&id=Wchru8alhaE HTTP/1.1" 200 None
[2022-11-18 00:01:25,775] DEBUG - Starting new HTTPS connection (1): www.googleapis.com:443
[2022-11-18 00:01:25,845] DEBUG - https://www.googleapis.com:443 "GET /youtube/v3/videos?key=AIzaSyDfv2ISoNjVh2oX2JRJUQ1loS-voHH3GlI&fields=items(snippet(description,tags))&part=snippet&id=oj95ocSAv14 HTTP/1.1" 200 None
[2022-11-18 00:01:25,848] DEBUG - Starting new HTTPS connection (1): www.googleapis.com:443
[2022-11-18 00:01:25,904] DEBUG - https://www.googleapis.com:443 "GET /youtube/v3/videos?key=AIzaSyDfv2ISoNjVh2oX2JRJUQ1loS-voHH3GlI&fields=items(snippet(description,tags))&part=snippet&id=HEdPX8pt_DQ HTTP/1.1" 200 None
[2022-11-18 00:01:25,909] DEBUG - Starting new HTTPS connection (1): www.googleapis.com:443
[2022-11-18 00:01:25,981] DEBUG - https://www.googleapis.com:443 "GET /youtube/v3/videos?key=AIzaSyDfv2ISoNjVh2oX2JRJUQ1loS-voHH3GlI&fields=items(snippet(description,tags))&part=snippet&id=IT__Nrr3PNI HTTP/1.1" 200 None
[2022-11-18 00:01:25,983] DEBUG - Starting new HTTPS connection (1): www.googleapis.com:443
[2022-11-18 00:01:26,059] DEBUG - https://www.googleapis.com:443 "GET /youtube/v3/videos?key=AIzaSyDfv2ISoNjVh2oX2JRJUQ1loS-voHH3GlI&fields=items(snippet(description,tags))&part=snippet&id=wQjTgvUEOrY HTTP/1.1" 200 None
[2022-11-18 00:01:26,061] DEBUG - Starting new HTTPS connection (1): www.googleapis.com:443
[2022-11-18 00:01:26,125] DEBUG - https://www.googleapis.com:443 "GET /youtube/v3/videos?key=AIzaSyDfv2ISoNjVh2oX2JRJUQ1loS-voHH3GlI&fields=items(snippet(description,tags))&part=snippet&id=LSVmB59xYwI HTTP/1.1" 200 None
[2022-11-18 00:01:26,128] DEBUG - Starting new HTTPS connection (1): www.googleapis.com:443
[2022-11-18 00:01:26,186] DEBUG - https://www.googleapis.com:443 "GET /youtube/v3/videos?key=AIzaSyDfv2ISoNjVh2oX2JRJUQ1loS-voHH3GlI&fields=items(snippet(description,tags))&part=snippet&id=m4-HM_sCvtQ HTTP/1.1" 200 None
[2022-11-18 00:01:26,190] DEBUG - Starting new HTTPS connection (1): www.googleapis.com:443
[2022-11-18 00:01:26,255] DEBUG - https://www.googleapis.com:443 "GET /youtube/v3/videos?key=AIzaSyDfv2ISoNjVh2oX2JRJUQ1loS-voHH3GlI&fields=items(snippet(description,tags))&part=snippet&id=CV39QzFpJx4 HTTP/1.1" 200 None
[2022-11-18 00:01:26,260] DEBUG - Starting new HTTPS connection (1): www.googleapis.com:443
[2022-11-18 00:01:26,316] DEBUG - https://www.googleapis.com:443 "GET /youtube/v3/videos?key=AIzaSyDfv2ISoNjVh2oX2JRJUQ1loS-voHH3GlI&fields=items(snippet(description,tags))&part=snippet&id=L9mxCfkEYJ0 HTTP/1.1" 200 None
[2022-11-18 00:01:26,320] DEBUG - Starting new HTTPS connection (1): www.googleapis.com:443
[2022-11-18 00:01:26,365] DEBUG - https://www.googleapis.com:443 "GET /youtube/v3/videos?key=AIzaSyDfv2ISoNjVh2oX2JRJUQ1loS-voHH3GlI&fields=items(snippet(description,tags))&part=snippet&id=-fY3g-DUtks HTTP/1.1" 200 None
[2022-11-18 00:01:26,368] DEBUG - Starting new HTTPS connection (1): www.googleapis.com:443
[2022-11-18 00:01:26,420] DEBUG - https://www.googleapis.com:443 "GET /youtube/v3/videos?key=AIzaSyDfv2ISoNjVh2oX2JRJUQ1loS-voHH3GlI&fields=items(snippet(description,tags))&part=snippet&id=RRubcjpTkks HTTP/1.1" 200 None
[2022-11-18 00:01:26,422] DEBUG - Starting new HTTPS connection (1): www.googleapis.com:443
[2022-11-18 00:01:26,467] DEBUG - https://www.googleapis.com:443 "GET /youtube/v3/videos?key=AIzaSyDfv2ISoNjVh2oX2JRJUQ1loS-voHH3GlI&fields=items(snippet(description,tags))&part=snippet&id=yxV_pR1ZsXM HTTP/1.1" 200 None
[2022-11-18 00:01:26,469] DEBUG - Starting new HTTPS connection (1): www.googleapis.com:443
[2022-11-18 00:01:26,521] DEBUG - https://www.googleapis.com:443 "GET /youtube/v3/videos?key=AIzaSyDfv2ISoNjVh2oX2JRJUQ1loS-voHH3GlI&fields=items(snippet(description,tags))&part=snippet&id=QZwneRb-zqA HTTP/1.1" 200 None
[2022-11-18 00:01:26,523] DEBUG - Starting new HTTPS connection (1): www.googleapis.com:443
[2022-11-18 00:01:26,586] DEBUG - https://www.googleapis.com:443 "GET /youtube/v3/videos?key=AIzaSyDfv2ISoNjVh2oX2JRJUQ1loS-voHH3GlI&fields=items(snippet(description,tags))&part=snippet&id=Qgl81fPcLc8 HTTP/1.1" 200 None
[2022-11-18 00:01:26,589] DEBUG - Starting new HTTPS connection (1): www.googleapis.com:443
[2022-11-18 00:01:26,650] DEBUG - https://www.googleapis.com:443 "GET /youtube/v3/videos?key=AIzaSyDfv2ISoNjVh2oX2JRJUQ1loS-voHH3GlI&fields=items(snippet(description,tags))&part=snippet&id=dAcooL31HwA HTTP/1.1" 200 None
[2022-11-18 00:01:26,654] DEBUG - Starting new HTTPS connection (1): www.googleapis.com:443
[2022-11-18 00:01:26,712] DEBUG - https://www.googleapis.com:443 "GET /youtube/v3/videos?key=AIzaSyDfv2ISoNjVh2oX2JRJUQ1loS-voHH3GlI&fields=items(snippet(description,tags))&part=snippet&id=HRfmLqqvzUs HTTP/1.1" 200 None
[2022-11-18 00:01:26,718] DEBUG - Starting new HTTPS connection (1): www.googleapis.com:443
[2022-11-18 00:01:26,794] DEBUG - https://www.googleapis.com:443 "GET /youtube/v3/videos?key=AIzaSyDfv2ISoNjVh2oX2JRJUQ1loS-voHH3GlI&fields=items(snippet(description,tags))&part=snippet&id=yImHk578-dY HTTP/1.1" 200 None
[2022-11-18 00:01:26,796] DEBUG - Starting new HTTPS connection (1): www.googleapis.com:443
[2022-11-18 00:01:26,851] DEBUG - https://www.googleapis.com:443 "GET /youtube/v3/videos?key=AIzaSyDfv2ISoNjVh2oX2JRJUQ1loS-voHH3GlI&fields=items(snippet(description,tags))&part=snippet&id=4r2Wg-TY7gU HTTP/1.1" 200 None
[2022-11-18 00:01:26,853] DEBUG - Starting new HTTPS connection (1): www.googleapis.com:443
[2022-11-18 00:01:26,906] DEBUG - https://www.googleapis.com:443 "GET /youtube/v3/videos?key=AIzaSyDfv2ISoNjVh2oX2JRJUQ1loS-voHH3GlI&fields=items(snippet(description,tags))&part=snippet&id=V80MztOCCjo HTTP/1.1" 200 None
[2022-11-18 00:01:26,908] DEBUG - Starting new HTTPS connection (1): www.googleapis.com:443
[2022-11-18 00:01:26,958] DEBUG - https://www.googleapis.com:443 "GET /youtube/v3/videos?key=AIzaSyDfv2ISoNjVh2oX2JRJUQ1loS-voHH3GlI&fields=items(snippet(description,tags))&part=snippet&id=Bj9Mx_Lx3q4 HTTP/1.1" 200 None
[2022-11-18 00:01:26,962] DEBUG - Starting new HTTPS connection (1): www.googleapis.com:443
[2022-11-18 00:01:27,006] DEBUG - https://www.googleapis.com:443 "GET /youtube/v3/videos?key=AIzaSyDfv2ISoNjVh2oX2JRJUQ1loS-voHH3GlI&fields=items(snippet(description,tags))&part=snippet&id=3nrwAW_0FjU HTTP/1.1" 200 None
[2022-11-18 00:01:27,008] DEBUG - Starting new HTTPS connection (1): www.googleapis.com:443
[2022-11-18 00:01:27,060] DEBUG - https://www.googleapis.com:443 "GET /youtube/v3/videos?key=AIzaSyDfv2ISoNjVh2oX2JRJUQ1loS-voHH3GlI&fields=items(snippet(description,tags))&part=snippet&id=LFDrDnKPOTg HTTP/1.1" 200 None
[2022-11-18 00:01:27,062] DEBUG - Starting new HTTPS connection (1): www.googleapis.com:443
[2022-11-18 00:01:27,129] DEBUG - https://www.googleapis.com:443 "GET /youtube/v3/videos?key=AIzaSyDfv2ISoNjVh2oX2JRJUQ1loS-voHH3GlI&fields=items(snippet(description,tags))&part=snippet&id=rmDXEh7hi4w HTTP/1.1" 200 None
[2022-11-18 00:01:27,132] DEBUG - Starting new HTTPS connection (1): www.googleapis.com:443
[2022-11-18 00:01:27,194] DEBUG - https://www.googleapis.com:443 "GET /youtube/v3/videos?key=AIzaSyDfv2ISoNjVh2oX2JRJUQ1loS-voHH3GlI&fields=items(snippet(description,tags))&part=snippet&id=F5pnfRxGEm0 HTTP/1.1" 200 None
[2022-11-18 00:01:27,196] DEBUG - Hashtags ['#computers', '#coding', '#programming', '#java', '#programming', '#comedy', '#100secondsofcode', '#keeponcoding', '#tech', '#programming', '#java', '#tutorial', '#beginners', '#devops', '#devopstutorial', '#devopstraining', '#devopstools', '#chef', '#jenkins', '#puppet', '#simplilearn', '#top10certificationsfor2022', '#trendingcertifications2022', '#highestpayingcertifications2022', '#bestitcertifications', '#topcertificationsforitprofessionals', '#certifications2022', '#simplilearn']
[2022-11-18 00:01:27,196] DEBUG - Top Hashtags ['#programming', '#java', '#simplilearn', '#computers', '#coding']
[2022-11-18 00:01:27,196] DEBUG - Tags ['history of computers', 'coding', 'code', 'computer', 'charles babbage', 'konrad zuse', 'ada lovelace', 'alan turing', 'howard aiken', 'grace hopper', 'bill gates', 'steve jobs', 'apple', 'ibm', 'microsoft', 'herman hollerith', 'eniac', 'univac', 'python', 'c++', 'coding language', 'java', 'fortran', 'cobol', 'history of computers timeline & evolution', 'history of computers for kids', 'history of computers crash course', 'computer history', 'history of computer', 'generations of computers', 'evolution of computers', 'history of computer generation', 'invention of computer programming language', 'computer programming language', 'programming language', 'the dr. binocs show', 'best learning video for kids', 'fun preschool learning', 'teach toddlers', 'fun preschool learning videos for kids', 'best learning video', 'best kids videos', 'kid learning videos', 'toddler learning video', 'teach kids', 'videos for kids', 'toddlers', 'learning', 'kids videos for kids', 'learning videos for toddlers', 'kids learning videos', 'video for kids', 'peekaboo kidz', 'java', 'internet', 'javascript', 'programming', 'world wide web', 'netscape', 'jvm', 'compiler', 'sun microsystems', 'programming language', 'rise and fall', 'history', 'computer', 'technology', 'james gosling', 'artificial intelligence', 'agi', 'ai', 'ai podcast', 'artificial intelligence podcast', 'lex fridman', 'lex podcast', 'lex mit', 'lex ai', 'lex jre', 'mit ai', 'computers', 'technology', 'voder', 'vocoder', 'voice', 'ibm', '2001', 'hal 9000', 'daisy bell', 'mac', 'macintosh', 'mac in talk', 'plaintalk', 'speak and spell', 'microsoft sam', 'adobe', 'voco', 'cpu', 'microprocessor', 'logisim', 'floating point', 'logic circuit simulation', 'central processing unit', 'tutorial', '32-bit', 'assembly language', 'cpu design', 'stack', 'call stack', 'subroutine', 'call', 'return', 'compiler', 'c compiler', 'lcc', 'yacc', 'bison', 'lex', 'lifo', 'll(1)', 'lalr(1)', 'parser', 'raytracer', 'ray tracer', 'simulator', 'computer', 'video display', 'graphical user interface', 'logisim ita', 'logisim evolution', 'launch4j', 'subcircuit', 'program counter', 'oscilloscope', 'hardware stack', 'nested subroutines', 'look and feel', 'retargetable', 'push', 'pop', 'webdev', 'app development', 'lesson', 'tutorial', 'digital original', 'cnbc', 'business news', 'finance', 'stock', 'stock market', 'news channel', 'news station', 'breaking news', 'us news', 'world news', 'cable', 'cable news', 'finance news', 'money', 'money tips', 'russian hacker break', 'russian hacker', 'hacker break', 'computer and take complete control', 'mikhail sosonkin', 'works for cybersecurity', 'cybersecurity', 'showed cnbc firsthand', 'break into a computer', 'watch russian hacker break into computer', 'synack', 'hacking', 'hydra', 'enterprise', 'hacker', 'scanner', 'ethical hackers', 'computer science for everyone', 'learn computer science', 'java programming for beginners', 'computer science with java', 'computer science for beginners', 'computer science for university students', 'computer science', 'learn java programming', 'algorithms for beginners', 'java learning', 'java programming', 'java vs python', 'java vs kotlin', 'learn java', 'java', 'java tutorial for beginners', 'learning java', 'how to learn java', 'java programming', 'learn to code java', 'learn java code', 'learning java programming', 'learn to code java in 13 minutes', 'learn java easy', 'learn java programming', 'learn java quick', 'learn java easy way', 'learn java coding', 'how to code in java', 'code java', 'how to code java', 'quickest way to learn java', 'learn to code java for beginners', 'how to learn java quickly and easily', 'learn java for beginners', 'sun', 'java', 'javastation', 'oracle', 'applet', 'workstation', 'computer', 'thin client', 'network computer', 'nc', 'diskless', 'network boot', 'server', 'rarp', 'tftp', 'nfs', 'javaos', 'network', 'teardown', 'demonstration', 'hardware', 'sparc', 'microsparc', 'learn java', 'java', 'java tutorial for beginners', 'java course', 'how to learn java', 'java programming', 'learn to code java', 'learn java code', 'learn to code java in 14 minutes', 'learn java programming', 'learn java quick', 'learn java easy way', 'learn java coding', 'how to code in java', 'how to code java', 'learn to code java for beginners', 'java 11 features', 'learn java for beginners', 'java certification training', 'minecraft java', 'java basics', 'java tutorial', 'amigoscode', 'java 13', 'w3schools java', 'operating system(software genre)', 'what is an operating system', 'definition of operating system', 'software', 'hardware', 'computer hardware', 'computer hardware basics', 'computer hardware tutorial', 'computer hardware tricks', 'operating system in telugu', 'introduction to os', 'introduction to os in telugu', 'introduction to operating systam', 'computer hardware fundamentals', 'os in telugu', 'what is os', 'what is operating system in telugu', 'java application', 'how to develop java gui application', 'java gui application', 'java windows application', 'banking application system using java', 'devoxx', 'devoxx2018', 'devoxxuk', 'devoxxuk2019', 'java', 'codingwithjohn', 'coding with john', 'java beginner lesson', 'java strings immutable', 'java immutable strings', 'java tutorial', 'java immutable', 'java immutable class', 'java immutable variable', 'java immutable string', 'java strings', 'string', 'java string', 'java programming', 'immutable string', 'string class in java', 'programming', 'why string is immutable in java', 'why java strings are immutable', 'why string is immutable in java interview questions', 'why strings are immutable in java', 'computer virus', 'virus', 'computer worm', 'malware', 'computer', 'history', 'computer history', 'technology', 'windows', 'wannacry', 'apple', 'what is jenkins', 'what is jenkins and how it works', 'what is jenkins in devops', 'jenkins tutorial for beginners', 'jenkins tutorial', 'jenkins pipeline tutorial', 'jenkins continuous integration tutorial', 'introduction to jenkins', 'introduction to jenkins pipeline', 'continuous integration jenkins', 'continuous integration jenkins tutorial', 'how jenkins build works', 'how jenkins pipeline works', 'jenkins training', 'jenkins', 'devops tutorial for beginners', 'devops', 'simplilearn devops', 'simplilearn', 'top 10 certifications for 2022', 'highest paying certifications', 'best it certifications', 'top 10 certificate for 2022', 'best certification courses', 'best it certification 2022', 'top 10 certificate', 'top 10 certifications for software developers', 'top 10 certifications in the world', 'certifications for 2022', 'certifications with highest salary', 'best online certifications', 'web development', 'pmp', 'big data', 'agile scrum', 'data science', 'certifications', 'simplilearn best certifications', 'simplilearn', 'jdk was not found on this computer', 'java development kit', 'how to install java development kit', 'java development kit 8', 'jdk 8.0', 'install jdk']
[2022-11-18 00:01:27,199] DEBUG - Top Tags ['java', 'computer', 'java programming', 'technology', 'learn java programming', 'apple', 'ibm', 'computer history', 'programming language', 'programming', 'compiler', 'history', 'tutorial', 'learn java', 'java tutorial for beginners', 'how to learn java']
[2022-11-18 00:01:37,899] DEBUG - processing 21 tts sections
[2022-11-18 00:01:37,900] DEBUG - Text-to-speech: What is the history of computer hardware?
[2022-11-18 00:01:37,900] DEBUG - [#1] Subsection: What is the history of computer hardware?
[2022-11-18 00:01:54,996] DEBUG - Text-to-speech: Computer hardware is the collection of physical parts of a computer system. This includes the central processing unit (CPU), memory, storage, input/output devices, and networking components. The first computers were created in the early 1800s. They were called mechanical calculators, and they could only be used by mathematicians and scientists. In 1876, Charles Babbage designed a machine called the Analytical Engine, which could be programmed to perform any calculation that could be done by hand. However, the machine was never completed. In 1937, John Atanasoff and Clifford Berry developed the first electronic computer, called the AtanasoffBerry.
[2022-11-18 00:01:54,996] DEBUG - [#1] Subsection: Computer hardware is the collection of physical parts of a computer system. This includes the central processing unit (CPU), memory, storage, input/output devices, and networking components. The first computers were created in the early 1800s. They were called mechanical calculators, and they could only be used by mathematicians and scientists. In 1876, Charles Babbage designed a machine called the Analytical Engine, which could be programmed to perform any calculation that could be done by hand. However, the machine was never completed. In 1937, John Atanasoff and Clifford Berry developed the first electronic computer, called the AtanasoffBerry.
[2022-11-18 00:02:17,834] DEBUG - [#2] Subsection: Computer hardware is the collection of physical parts of a computer system. This includes the central processing unit (CPU), memory, storage, input/output devices, and networking components. The first computers were created in the early 1800s. They were called mechanical calculators, and they could only be used by mathematicians and scientists. In 1876, Charles Babbage designed a machine called the Analytical Engine, which could be programmed to perform any calculation that could be done by hand. However, the machine was never completed. In 1937, John Atanasoff and Clifford Berry developed the first electronic computer, called the AtanasoffBerry.
[2022-11-18 00:02:56,096] DEBUG - [#3] Subsection: Computer hardware is the collection of physical parts of a computer system. This includes the central processing unit (CPU), memory, storage, input/output devices, and networking components. The first computers were created in the early 1800s. They were called mechanical calculators, and they could only be used by mathematicians and scientists. In 1876, Charles Babbage designed a machine called the Analytical Engine, which could be programmed to perform any calculation that could be done by hand. However, the machine was never completed. In 1937, John Atanasoff and Clifford Berry developed the first electronic computer, called the AtanasoffBerry.
[2022-11-18 00:03:15,735] DEBUG - [#4] Subsection: Computer hardware is the collection of physical parts of a computer system. This includes the central processing unit (CPU), memory, storage, input/output devices, and networking components. The first computers were created in the early 1800s. They were called mechanical calculators, and they could only be used by mathematicians and scientists. In 1876, Charles Babbage designed a machine called the Analytical Engine, which could be programmed to perform any calculation that could be done by hand. However, the machine was never completed. In 1937, John Atanasoff and Clifford Berry developed the first electronic computer, called the AtanasoffBerry.
[2022-11-18 00:03:43,846] DEBUG - [#5] Subsection: Computer hardware is the collection of physical parts of a computer system. This includes the central processing unit (CPU), memory, storage, input/output devices, and networking components. The first computers were created in the early 1800s. They were called mechanical calculators, and they could only be used by mathematicians and scientists. In 1876, Charles Babbage designed a machine called the Analytical Engine, which could be programmed to perform any calculation that could be done by hand. However, the machine was never completed. In 1937, John Atanasoff and Clifford Berry developed the first electronic computer, called the AtanasoffBerry.
[2022-11-18 00:04:26,180] DEBUG - [#6] Subsection: Computer hardware is the collection of physical parts of a computer system. This includes the central processing unit (CPU), memory, storage, input/output devices, and networking components. The first computers were created in the early 1800s. They were called mechanical calculators, and they could only be used by mathematicians and scientists. In 1876, Charles Babbage designed a machine called the Analytical Engine, which could be programmed to perform any calculation that could be done by hand. However, the machine was never completed. In 1937, John Atanasoff and Clifford Berry developed the first electronic computer, called the AtanasoffBerry.
[2022-11-18 00:04:43,463] DEBUG - [#7] Subsection: Computer hardware is the collection of physical parts of a computer system. This includes the central processing unit (CPU), memory, storage, input/output devices, and networking components. The first computers were created in the early 1800s. They were called mechanical calculators, and they could only be used by mathematicians and scientists. In 1876, Charles Babbage designed a machine called the Analytical Engine, which could be programmed to perform any calculation that could be done by hand. However, the machine was never completed. In 1937, John Atanasoff and Clifford Berry developed the first electronic computer, called the AtanasoffBerry.
[2022-11-18 00:05:20,723] DEBUG - Text-to-speech: What are the different types of computer hardware?
[2022-11-18 00:05:20,723] DEBUG - [#1] Subsection: What are the different types of computer hardware?
[2022-11-18 00:05:38,444] DEBUG - Text-to-speech: The different types of computer hardware include the central processing unit (CPU), memory, storage, input/output devices, and networking components
[2022-11-18 00:05:38,444] DEBUG - [#1] Subsection: The different types of computer hardware include the central processing unit (CPU), memory, storage, input/output devices, and networking components
[2022-11-18 00:06:26,338] DEBUG - Text-to-speech: How has computer hardware evolved over time?
[2022-11-18 00:06:26,338] DEBUG - [#1] Subsection: How has computer hardware evolved over time?
[2022-11-18 00:06:44,176] DEBUG - Text-to-speech: The first computers were created in the early 1800s. They were called mechanical calculators, and they could only be used by mathematicians and scientists. In 1876, Charles Babbage designed a machine called the Analytical Engine, which could be programmed to perform any calculation that could be done by hand. However, the machine was never completed. In 1937, John Atanasoff and Clifford Berry developed the first electronic computer, called the AtanasoffBerry.
[2022-11-18 00:06:44,176] DEBUG - [#1] Subsection: The first computers were created in the early 1800s. They were called mechanical calculators, and they could only be used by mathematicians and scientists. In 1876, Charles Babbage designed a machine called the Analytical Engine, which could be programmed to perform any calculation that could be done by hand. However, the machine was never completed. In 1937, John Atanasoff and Clifford Berry developed the first electronic computer, called the AtanasoffBerry.
[2022-11-18 00:07:02,859] DEBUG - [#2] Subsection: The first computers were created in the early 1800s. They were called mechanical calculators, and they could only be used by mathematicians and scientists. In 1876, Charles Babbage designed a machine called the Analytical Engine, which could be programmed to perform any calculation that could be done by hand. However, the machine was never completed. In 1937, John Atanasoff and Clifford Berry developed the first electronic computer, called the AtanasoffBerry.
[2022-11-18 00:07:29,586] DEBUG - [#3] Subsection: The first computers were created in the early 1800s. They were called mechanical calculators, and they could only be used by mathematicians and scientists. In 1876, Charles Babbage designed a machine called the Analytical Engine, which could be programmed to perform any calculation that could be done by hand. However, the machine was never completed. In 1937, John Atanasoff and Clifford Berry developed the first electronic computer, called the AtanasoffBerry.
[2022-11-18 00:08:12,092] DEBUG - [#4] Subsection: The first computers were created in the early 1800s. They were called mechanical calculators, and they could only be used by mathematicians and scientists. In 1876, Charles Babbage designed a machine called the Analytical Engine, which could be programmed to perform any calculation that could be done by hand. However, the machine was never completed. In 1937, John Atanasoff and Clifford Berry developed the first electronic computer, called the AtanasoffBerry.
[2022-11-18 00:08:28,745] DEBUG - [#5] Subsection: The first computers were created in the early 1800s. They were called mechanical calculators, and they could only be used by mathematicians and scientists. In 1876, Charles Babbage designed a machine called the Analytical Engine, which could be programmed to perform any calculation that could be done by hand. However, the machine was never completed. In 1937, John Atanasoff and Clifford Berry developed the first electronic computer, called the AtanasoffBerry.
[2022-11-18 00:09:02,586] DEBUG - Text-to-speech: What is the difference between hardware and software?
[2022-11-18 00:09:02,586] DEBUG - [#1] Subsection: What is the difference between hardware and software?
[2022-11-18 00:09:22,970] DEBUG - Text-to-speech: Hardware is the physical parts of the computer, such as the central processing unit (CPU), memory, storage, and input/output devices.
Software is the programs or instructions that tell the hardware what to do.
[2022-11-18 00:09:22,970] DEBUG - [#1] Subsection: Hardware is the physical parts of the computer, such as the central processing unit (CPU), memory, storage, and input/output devices.
Software is the programs or instructions that tell the hardware what to do.
[2022-11-18 00:10:07,361] DEBUG - [#2] Subsection: Hardware is the physical parts of the computer, such as the central processing unit (CPU), memory, storage, and input/output devices.
Software is the programs or instructions that tell the hardware what to do.
[2022-11-18 00:10:30,750] DEBUG - Text-to-speech: What is Java and how is it used in computer science?
[2022-11-18 00:10:30,750] DEBUG - [#1] Subsection: What is Java and how is it used in computer science?
[2022-11-18 00:10:52,284] DEBUG - Text-to-speech: Java is a programming language that was created in 1995.
[2022-11-18 00:10:52,285] DEBUG - [#1] Subsection: Java is a programming language that was created in 1995.
[2022-11-18 00:11:15,444] CRITICAL - Failed to generate audio
[2022-11-18 00:11:15,444] INFO - Getting video script.
[2022-11-18 00:11:15,445] INFO - message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
[2022-11-18 00:11:15,445] DEBUG - api_version=None data='{"model": "text-davinci-002", "prompt": "Write a list of unique and interesting keywords relating to basic computer science:\\n\\n-", "temperature": 1, "max_tokens": 128, "top_p": 1, "frequency_penalty": 0, "presence_penalty": 0, "n": 1, "stop": "", "echo": false}' message='Post details'
[2022-11-18 00:11:15,446] DEBUG - Resetting dropped connection: api.openai.com
[2022-11-18 00:11:18,879] DEBUG - https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 494
[2022-11-18 00:11:18,879] INFO - message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=3029 request_id=4476262755ee8e9ff3f062fc0d195fbb response_code=200
[2022-11-18 00:11:18,879] INFO - message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
[2022-11-18 00:11:18,879] DEBUG - api_version=None data='{"model": "text-curie-001", "prompt": "Write a list of 5 interesting beginner topics on where software is used in the context of computer science:\\n-", "temperature": 0.7, "max_tokens": 256, "top_p": 1, "frequency_penalty": 0, "presence_penalty": 0, "n": 1, "stop": "", "echo": false}' message='Post details'
[2022-11-18 00:11:19,291] DEBUG - https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 376
[2022-11-18 00:11:19,291] INFO - message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=221 request_id=b26acd35057ef9e6e3cf8ad4fc33cce3 response_code=200
[2022-11-18 00:11:19,291] INFO - message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
[2022-11-18 00:11:19,291] DEBUG - api_version=None data='{"model": "text-davinci-002", "prompt": "Write a short, unique and interesting title relating to the theory of Programming languages in the form of a video essay title without involving numbers:", "temperature": 1, "max_tokens": 20, "top_p": 1, "frequency_penalty": 0, "presence_penalty": 0, "n": 1, "stop": "", "echo": false}' message='Post details'
[2022-11-18 00:11:20,112] DEBUG - https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 304
[2022-11-18 00:11:20,112] INFO - message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=671 request_id=924d0de56eb7d46e59286f6b4409da81 response_code=200
[2022-11-18 00:11:20,116] DEBUG - Keyword software, Topics ['Programming languages', 'Computer science theory', 'Computer security', 'Data structures', 'Software development process'], Topic The Many Faces of Programming Languages
[2022-11-18 00:11:20,116] INFO - message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
[2022-11-18 00:11:20,116] DEBUG - api_version=None data='{"model": "text-davinci-002", "prompt": "Write a list of beginner topics relating to what is The Many Faces of Programming Languages in the context of computer science:\\n\\n", "temperature": 0, "max_tokens": 256, "top_p": 1, "frequency_penalty": 0, "presence_penalty": 0, "n": 1, "stop": "", "echo": false}' message='Post details'
[2022-11-18 00:11:22,670] DEBUG - https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 627
[2022-11-18 00:11:22,670] INFO - message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=2410 request_id=b154c0f118f118181b3215a7f4ad6385 response_code=200
[2022-11-18 00:11:22,670] DEBUG - topic: The Many Faces of Programming Languages, sub topics 
-What is a programming language?
-What are the different types of programming languages?
-What are the characteristics of a programming language?
-What are the benefits of learning a programming language?
-What are the different features of a programming language?
-What is the history of programming languages?
-What is the future of programming languages?
[2022-11-18 00:11:22,670] DEBUG - getting summary for topic
[2022-11-18 00:11:22,670] INFO - message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
[2022-11-18 00:11:22,670] DEBUG - api_version=None data='{"model": "text-curie-001", "prompt": "Write a summary for the following topic in the form of a youtube description in the context of computer science:\\n\\ntopic: The Many Faces of Programming Languages\\n\\nsummary:", "temperature": 0, "max_tokens": 256, "top_p": 1, "frequency_penalty": 0, "presence_penalty": 0, "n": 1, "stop": "", "echo": false}' message='Post details'
[2022-11-18 00:11:23,372] DEBUG - https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 473
[2022-11-18 00:11:23,372] INFO - message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=471 request_id=7feee4223c3b71897e9fe011cd53d070 response_code=200
[2022-11-18 00:11:23,373] INFO - message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
[2022-11-18 00:11:23,373] DEBUG - api_version=None data='{"model": "text-davinci-002", "prompt": "Expand greatly upon the topic of The Many Faces of Programming Languages in the context of computer science summarised for a 9th grader:\\n\\n1. What is a programming language?\\n\\n", "temperature": 1, "max_tokens": 128, "top_p": 1, "frequency_penalty": 0, "presence_penalty": 0, "n": 1, "stop": ["2.", "1."], "echo": false}' message='Post details'
[2022-11-18 00:11:25,709] DEBUG - https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 534
[2022-11-18 00:11:25,709] INFO - message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=2190 request_id=9baba34e54b2d4d048555da8d2629810 response_code=200
[2022-11-18 00:11:25,710] INFO - message='Request to OpenAI API' method=post path=https://api.openai.com/v1/edits
[2022-11-18 00:11:25,710] DEBUG - api_version=None data='{"model": "text-davinci-edit-001", "input": "Programming languages are used to create software programs that can be run on computers. There are many different types of programming languages, each with its own unique set of features and syntax. Some popular programming languages include Java, Python, and C++.", "instruction": "Replace all non-characters with their spoken counterpart. And fix grammar.", "temperature": 0, "top_p": 1}' message='Post details'
[2022-11-18 00:11:28,318] DEBUG - https://api.openai.com:443 "POST /v1/edits HTTP/1.1" 200 419
[2022-11-18 00:11:28,318] INFO - message='OpenAI API response' path=https://api.openai.com/v1/edits processing_ms=2465 request_id=62f893729a23a643190ea4a6adfcccb7 response_code=200
[2022-11-18 00:11:28,318] INFO - message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
[2022-11-18 00:11:28,319] DEBUG - api_version=None data='{"model": "text-davinci-002", "prompt": "Expand greatly upon the topic of The Many Faces of Programming Languages in the context of computer science summarised for a 9th grader:\\n\\n1. What is a programming language?\\n\\nProgramming languages are used to create software programs that can be run on computers. There are many different types of programming languages, each with its own unique set of features and syntax. Some popular programming languages include Java, Python, and C plus plus.\\n\\n2. What are the different types of programming languages?\\n\\n", "temperature": 1, "max_tokens": 128, "top_p": 1, "frequency_penalty": 0, "presence_penalty": 0, "n": 1, "stop": ["3.", "2."], "echo": false}' message='Post details'
[2022-11-18 00:11:30,463] DEBUG - https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 451
[2022-11-18 00:11:30,464] INFO - message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=2001 request_id=5000e9750c293e5cf15c6cbd4426a75d response_code=200
[2022-11-18 00:11:30,464] INFO - message='Request to OpenAI API' method=post path=https://api.openai.com/v1/edits
[2022-11-18 00:11:30,464] DEBUG - api_version=None data='{"model": "text-davinci-edit-001", "input": "There are many different types of programming languages, each with its own unique set of features and syntax. Some popular programming languages include Java, Python, and C plus plus.", "instruction": "Replace all non-characters with their spoken counterpart. And fix grammar.", "temperature": 0, "top_p": 1}' message='Post details'
[2022-11-18 00:11:32,476] DEBUG - https://api.openai.com:443 "POST /v1/edits HTTP/1.1" 200 330
[2022-11-18 00:11:32,476] INFO - message='OpenAI API response' path=https://api.openai.com/v1/edits processing_ms=1868 request_id=5e74367a9b790a056da2f928ab48f7ce response_code=200
[2022-11-18 00:11:32,476] INFO - message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
[2022-11-18 00:11:32,476] DEBUG - api_version=None data='{"model": "text-davinci-002", "prompt": "Expand greatly upon the topic of The Many Faces of Programming Languages in the context of computer science summarised for a 9th grader:\\n\\n1. What is a programming language?\\n\\nProgramming languages are used to create software programs that can be run on computers. There are many different types of programming languages, each with its own unique set of features and syntax. Some popular programming languages include Java, Python, and C plus plus.\\n\\n2. What are the different types of programming languages?\\n\\nThere are many different types of programming languages, each with its own unique set of features and syntax. Some popular programming languages include Java, Python, and C plus plus.\\n\\n3. What are the characteristics of a programming language?\\n\\n", "temperature": 1, "max_tokens": 128, "top_p": 1, "frequency_penalty": 0, "presence_penalty": 0, "n": 1, "stop": ["4.", "3."], "echo": false}' message='Post details'
[2022-11-18 00:11:35,250] DEBUG - https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 509
[2022-11-18 00:11:35,251] INFO - message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=2628 request_id=c134064cf7b1b7377329b3ea68be449f response_code=200
[2022-11-18 00:11:35,251] INFO - message='Request to OpenAI API' method=post path=https://api.openai.com/v1/edits
[2022-11-18 00:11:35,251] DEBUG - api_version=None data='{"model": "text-davinci-edit-001", "input": "The characteristics of a programming language depend on the language itself. However, all programming languages share some common features, such as the ability to control the flow of a program, to manipulate data, and to create modular code.", "instruction": "Replace all non-characters with their spoken counterpart. And fix grammar.", "temperature": 0, "top_p": 1}' message='Post details'
[2022-11-18 00:11:38,011] DEBUG - https://api.openai.com:443 "POST /v1/edits HTTP/1.1" 200 389
[2022-11-18 00:11:38,011] INFO - message='OpenAI API response' path=https://api.openai.com/v1/edits processing_ms=2617 request_id=9a5b30a0c16d3b55bf7840434d4d3c5d response_code=200
[2022-11-18 00:11:38,011] INFO - message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
[2022-11-18 00:11:38,011] DEBUG - api_version=None data='{"model": "text-davinci-002", "prompt": "Expand greatly upon the topic of The Many Faces of Programming Languages in the context of computer science summarised for a 9th grader:\\n\\n1. What is a programming language?\\n\\nProgramming languages are used to create software programs that can be run on computers. There are many different types of programming languages, each with its own unique set of features and syntax. Some popular programming languages include Java, Python, and C plus plus.\\n\\n2. What are the different types of programming languages?\\n\\nThere are many different types of programming languages, each with its own unique set of features and syntax. Some popular programming languages include Java, Python, and C plus plus.\\n\\n3. What are the characteristics of a programming language?\\n\\nThe characteristics of a programming language depend on the language itself. However, all programming languages share some common features, such as the ability to control the flow of a program, to manipulate data, and to create modular code.\\n\\n4. What are the benefits of learning a programming language?\\n\\n", "temperature": 1, "max_tokens": 128, "top_p": 1, "frequency_penalty": 0, "presence_penalty": 0, "n": 1, "stop": ["5.", "4."], "echo": false}' message='Post details'
[2022-11-18 00:11:40,794] DEBUG - https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 550
[2022-11-18 00:11:40,794] INFO - message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=2639 request_id=103eb4efe6e308b775756e905ef704ac response_code=200
[2022-11-18 00:11:40,794] INFO - message='Request to OpenAI API' method=post path=https://api.openai.com/v1/edits
[2022-11-18 00:11:40,794] DEBUG - api_version=None data='{"model": "text-davinci-edit-001", "input": "Learning a programming language can have many benefits. It can help you understand how computers work, and how to create software programs that can be run on them. Additionally, learning a programming language can also help improve your problem-solving and critical thinking skills.", "instruction": "Replace all non-characters with their spoken counterpart. And fix grammar.", "temperature": 0, "top_p": 1}' message='Post details'
[2022-11-18 00:11:43,281] DEBUG - https://api.openai.com:443 "POST /v1/edits HTTP/1.1" 200 429
[2022-11-18 00:11:43,281] INFO - message='OpenAI API response' path=https://api.openai.com/v1/edits processing_ms=2331 request_id=aef42a8ed7d5c3309c26be08def90df0 response_code=200
[2022-11-18 00:11:43,282] INFO - message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
[2022-11-18 00:11:43,282] DEBUG - api_version=None data='{"model": "text-davinci-002", "prompt": "Expand greatly upon the topic of The Many Faces of Programming Languages in the context of computer science summarised for a 9th grader:\\n\\n1. What is a programming language?\\n\\nProgramming languages are used to create software programs that can be run on computers. There are many different types of programming languages, each with its own unique set of features and syntax. Some popular programming languages include Java, Python, and C plus plus.\\n\\n2. What are the different types of programming languages?\\n\\nThere are many different types of programming languages, each with its own unique set of features and syntax. Some popular programming languages include Java, Python, and C plus plus.\\n\\n3. What are the characteristics of a programming language?\\n\\nThe characteristics of a programming language depend on the language itself. However, all programming languages share some common features, such as the ability to control the flow of a program, to manipulate data, and to create modular code.\\n\\n4. What are the benefits of learning a programming language?\\n\\nLearning a programming language can have many benefits. It can help you understand how computers work, and how to create software programs that can be run on them. Additionally, learning a programming language can also help improve your problem solving and critical thinking skills.\\n\\n5. What are the different features of a programming language?\\n\\n", "temperature": 1, "max_tokens": 128, "top_p": 1, "frequency_penalty": 0, "presence_penalty": 0, "n": 1, "stop": ["6.", "5."], "echo": false}' message='Post details'
[2022-11-18 00:11:45,386] DEBUG - https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 500
[2022-11-18 00:11:45,386] INFO - message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1958 request_id=f34ee246951672e37365c2c49f8a6e4c response_code=200
[2022-11-18 00:11:45,387] INFO - message='Request to OpenAI API' method=post path=https://api.openai.com/v1/edits
[2022-11-18 00:11:45,387] DEBUG - api_version=None data='{"model": "text-davinci-edit-001", "input": "The features of a programming language depend on the language itself. However, all programming languages share some common features, such as the ability to control the flow of a program, to manipulate data, and to create modular code.", "instruction": "Replace all non-characters with their spoken counterpart. And fix grammar.", "temperature": 0, "top_p": 1}' message='Post details'
[2022-11-18 00:11:48,627] DEBUG - https://api.openai.com:443 "POST /v1/edits HTTP/1.1" 200 382
[2022-11-18 00:11:48,628] INFO - message='OpenAI API response' path=https://api.openai.com/v1/edits processing_ms=3092 request_id=6fb85c6efb761046d35cd7b3f94aae8e response_code=200
[2022-11-18 00:11:48,628] INFO - message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
[2022-11-18 00:11:48,628] DEBUG - api_version=None data='{"model": "text-davinci-002", "prompt": "Expand greatly upon the topic of The Many Faces of Programming Languages in the context of computer science summarised for a 9th grader:\\n\\n1. What is a programming language?\\n\\nProgramming languages are used to create software programs that can be run on computers. There are many different types of programming languages, each with its own unique set of features and syntax. Some popular programming languages include Java, Python, and C plus plus.\\n\\n2. What are the different types of programming languages?\\n\\nThere are many different types of programming languages, each with its own unique set of features and syntax. Some popular programming languages include Java, Python, and C plus plus.\\n\\n3. What are the characteristics of a programming language?\\n\\nThe characteristics of a programming language depend on the language itself. However, all programming languages share some common features, such as the ability to control the flow of a program, to manipulate data, and to create modular code.\\n\\n4. What are the benefits of learning a programming language?\\n\\nLearning a programming language can have many benefits. It can help you understand how computers work, and how to create software programs that can be run on them. Additionally, learning a programming language can also help improve your problem solving and critical thinking skills.\\n\\n5. What are the different features of a programming language?\\n\\nThe features of a programming language depend on the language itself. However, all programming languages share some common features, such as the ability to control the flow of a program, to manipulate data, and to create modular code.\\n\\n6. What is the history of programming languages?\\n\\n", "temperature": 1, "max_tokens": 128, "top_p": 1, "frequency_penalty": 0, "presence_penalty": 0, "n": 1, "stop": ["7.", "6."], "echo": false}' message='Post details'
[2022-11-18 00:11:52,580] DEBUG - https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 560
[2022-11-18 00:11:52,581] INFO - message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=3808 request_id=9f96f50c23ef6aab9db3faaa8ebc9254 response_code=200
[2022-11-18 00:11:52,581] INFO - message='Request to OpenAI API' method=post path=https://api.openai.com/v1/edits
[2022-11-18 00:11:52,581] DEBUG - api_version=None data='{"model": "text-davinci-edit-001", "input": "The history of programming languages dates back to the early days of computing. One of the earliest programming languages was known as FORTRAN, which was created in the 1950s. Since then, many other programming languages have been created, each with its own unique set of features and syntax.", "instruction": "Replace all non-characters with their spoken counterpart. And fix grammar.", "temperature": 0, "top_p": 1}' message='Post details'
[2022-11-18 00:11:56,655] DEBUG - https://api.openai.com:443 "POST /v1/edits HTTP/1.1" 200 439
[2022-11-18 00:11:56,655] INFO - message='OpenAI API response' path=https://api.openai.com/v1/edits processing_ms=3931 request_id=513b381dbe89a320ce7b90e989f485fd response_code=200
[2022-11-18 00:11:56,655] INFO - message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
[2022-11-18 00:11:56,655] DEBUG - api_version=None data='{"model": "text-davinci-002", "prompt": "Expand greatly upon the topic of The Many Faces of Programming Languages in the context of computer science summarised for a 9th grader:\\n\\n1. What is a programming language?\\n\\nProgramming languages are used to create software programs that can be run on computers. There are many different types of programming languages, each with its own unique set of features and syntax. Some popular programming languages include Java, Python, and C plus plus.\\n\\n2. What are the different types of programming languages?\\n\\nThere are many different types of programming languages, each with its own unique set of features and syntax. Some popular programming languages include Java, Python, and C plus plus.\\n\\n3. What are the characteristics of a programming language?\\n\\nThe characteristics of a programming language depend on the language itself. However, all programming languages share some common features, such as the ability to control the flow of a program, to manipulate data, and to create modular code.\\n\\n4. What are the benefits of learning a programming language?\\n\\nLearning a programming language can have many benefits. It can help you understand how computers work, and how to create software programs that can be run on them. Additionally, learning a programming language can also help improve your problem solving and critical thinking skills.\\n\\n5. What are the different features of a programming language?\\n\\nThe features of a programming language depend on the language itself. However, all programming languages share some common features, such as the ability to control the flow of a program, to manipulate data, and to create modular code.\\n\\n6. What is the history of programming languages?\\n\\nThe history of programming languages dates back to the early days of computing. One of the earliest programming languages was known as Fortran, which was created in the 1950s. Since then, many other programming languages have been created, each with its own unique set of features and syntax.\\n\\n7. What is the future of programming languages?\\n\\n", "temperature": 1, "max_tokens": 128, "top_p": 1, "frequency_penalty": 0, "presence_penalty": 0, "n": 1, "stop": ["8.", "7."], "echo": false}' message='Post details'
[2022-11-18 00:11:58,741] DEBUG - https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 553
[2022-11-18 00:11:58,741] INFO - message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1943 request_id=f07e7eb5a411b4ecd0e6703579816e0f response_code=200
[2022-11-18 00:11:58,742] INFO - message='Request to OpenAI API' method=post path=https://api.openai.com/v1/edits
[2022-11-18 00:11:58,742] DEBUG - api_version=None data='{"model": "text-davinci-edit-001", "input": "The future of programming languages is always evolving. New languages are being created all the time, and existing languages are continuously being updated and improved. Additionally, new technologies are constantly being developed that can impact the way programming languages are used.", "instruction": "Replace all non-characters with their spoken counterpart. And fix grammar.", "temperature": 0, "top_p": 1}' message='Post details'
[2022-11-18 00:12:01,879] DEBUG - https://api.openai.com:443 "POST /v1/edits HTTP/1.1" 200 435
[2022-11-18 00:12:01,879] INFO - message='OpenAI API response' path=https://api.openai.com/v1/edits processing_ms=2973 request_id=53f9b92447256571b3e218a806f7f406 response_code=200
[2022-11-18 00:12:01,881] DEBUG - Starting new HTTPS connection (1): www.googleapis.com:443
[2022-11-18 00:12:02,030] DEBUG - https://www.googleapis.com:443 "GET /youtube/v3/playlists?part=id&id=UC_x5XG1OV2P6uZZ5FSM9Ttw&key=AIzaSyDfv2ISoNjVh2oX2JRJUQ1loS-voHH3GlI&maxResults=2 HTTP/1.1" 200 None
[2022-11-18 00:12:02,032] DEBUG - Starting new HTTPS connection (1): www.googleapis.com:443
[2022-11-18 00:12:02,667] DEBUG - https://www.googleapis.com:443 "GET /youtube/v3/search?part=snippet&type=video&maxResults=50&order=relevance&key=AIzaSyDfv2ISoNjVh2oX2JRJUQ1loS-voHH3GlI&q=The%20Many%20Faces%20of%20Programming%20Languages&publishedAfter=2000-01-01T00:00:00Z&publishedBefore=3000-01-01T00:00:00Z HTTP/1.1" 200 None
[2022-11-18 00:12:02,670] DEBUG - Starting new HTTPS connection (1): www.googleapis.com:443
[2022-11-18 00:12:02,731] DEBUG - https://www.googleapis.com:443 "GET /youtube/v3/videos?key=AIzaSyDfv2ISoNjVh2oX2JRJUQ1loS-voHH3GlI&fields=items(snippet(description,tags))&part=snippet&id=xcm_H36v_18 HTTP/1.1" 200 None
[2022-11-18 00:12:02,733] DEBUG - Starting new HTTPS connection (1): www.googleapis.com:443
[2022-11-18 00:12:02,799] DEBUG - https://www.googleapis.com:443 "GET /youtube/v3/videos?key=AIzaSyDfv2ISoNjVh2oX2JRJUQ1loS-voHH3GlI&fields=items(snippet(description,tags))&part=snippet&id=TbZnMd5RHL0 HTTP/1.1" 200 None
[2022-11-18 00:12:02,801] DEBUG - Starting new HTTPS connection (1): www.googleapis.com:443
[2022-11-18 00:12:02,853] DEBUG - https://www.googleapis.com:443 "GET /youtube/v3/videos?key=AIzaSyDfv2ISoNjVh2oX2JRJUQ1loS-voHH3GlI&fields=items(snippet(description,tags))&part=snippet&id=-XHz9Sy3lKI HTTP/1.1" 200 None
[2022-11-18 00:12:02,855] DEBUG - Starting new HTTPS connection (1): www.googleapis.com:443
[2022-11-18 00:12:02,945] DEBUG - https://www.googleapis.com:443 "GET /youtube/v3/videos?key=AIzaSyDfv2ISoNjVh2oX2JRJUQ1loS-voHH3GlI&fields=items(snippet(description,tags))&part=snippet&id=1kemjqJwF_M HTTP/1.1" 200 None
[2022-11-18 00:12:02,948] DEBUG - Starting new HTTPS connection (1): www.googleapis.com:443
[2022-11-18 00:12:03,017] DEBUG - https://www.googleapis.com:443 "GET /youtube/v3/videos?key=AIzaSyDfv2ISoNjVh2oX2JRJUQ1loS-voHH3GlI&fields=items(snippet(description,tags))&part=snippet&id=-fXWDWJmsV0 HTTP/1.1" 200 None
[2022-11-18 00:12:03,019] DEBUG - Starting new HTTPS connection (1): www.googleapis.com:443
[2022-11-18 00:12:03,072] DEBUG - https://www.googleapis.com:443 "GET /youtube/v3/videos?key=AIzaSyDfv2ISoNjVh2oX2JRJUQ1loS-voHH3GlI&fields=items(snippet(description,tags))&part=snippet&id=6qCH7Y2rc_w HTTP/1.1" 200 None
[2022-11-18 00:12:03,074] DEBUG - Starting new HTTPS connection (1): www.googleapis.com:443
[2022-11-18 00:12:03,127] DEBUG - https://www.googleapis.com:443 "GET /youtube/v3/videos?key=AIzaSyDfv2ISoNjVh2oX2JRJUQ1loS-voHH3GlI&fields=items(snippet(description,tags))&part=snippet&id=1a7F5gsEMks HTTP/1.1" 200 None
[2022-11-18 00:12:03,130] DEBUG - Starting new HTTPS connection (1): www.googleapis.com:443
[2022-11-18 00:12:03,180] DEBUG - https://www.googleapis.com:443 "GET /youtube/v3/videos?key=AIzaSyDfv2ISoNjVh2oX2JRJUQ1loS-voHH3GlI&fields=items(snippet(description,tags))&part=snippet&id=YmW7PCrq1sQ HTTP/1.1" 200 None
[2022-11-18 00:12:03,183] DEBUG - Starting new HTTPS connection (1): www.googleapis.com:443
[2022-11-18 00:12:03,251] DEBUG - https://www.googleapis.com:443 "GET /youtube/v3/videos?key=AIzaSyDfv2ISoNjVh2oX2JRJUQ1loS-voHH3GlI&fields=items(snippet(description,tags))&part=snippet&id=lvclTCDeIsY HTTP/1.1" 200 None
[2022-11-18 00:12:03,254] DEBUG - Starting new HTTPS connection (1): www.googleapis.com:443
[2022-11-18 00:12:03,296] DEBUG - https://www.googleapis.com:443 "GET /youtube/v3/videos?key=AIzaSyDfv2ISoNjVh2oX2JRJUQ1loS-voHH3GlI&fields=items(snippet(description,tags))&part=snippet&id=qhF7nB4vjFs HTTP/1.1" 200 None
[2022-11-18 00:12:03,298] DEBUG - Starting new HTTPS connection (1): www.googleapis.com:443
[2022-11-18 00:12:03,345] DEBUG - https://www.googleapis.com:443 "GET /youtube/v3/videos?key=AIzaSyDfv2ISoNjVh2oX2JRJUQ1loS-voHH3GlI&fields=items(snippet(description,tags))&part=snippet&id=IeBbiQZYmuY HTTP/1.1" 200 None
[2022-11-18 00:12:03,348] DEBUG - Starting new HTTPS connection (1): www.googleapis.com:443
[2022-11-18 00:12:03,427] DEBUG - https://www.googleapis.com:443 "GET /youtube/v3/videos?key=AIzaSyDfv2ISoNjVh2oX2JRJUQ1loS-voHH3GlI&fields=items(snippet(description,tags))&part=snippet&id=qzkCS2Sc0mg HTTP/1.1" 200 None
[2022-11-18 00:12:03,429] DEBUG - Starting new HTTPS connection (1): www.googleapis.com:443
[2022-11-18 00:12:03,499] DEBUG - https://www.googleapis.com:443 "GET /youtube/v3/videos?key=AIzaSyDfv2ISoNjVh2oX2JRJUQ1loS-voHH3GlI&fields=items(snippet(description,tags))&part=snippet&id=raHM3k-uR0E HTTP/1.1" 200 None
[2022-11-18 00:12:03,502] DEBUG - Starting new HTTPS connection (1): www.googleapis.com:443
[2022-11-18 00:12:03,577] DEBUG - https://www.googleapis.com:443 "GET /youtube/v3/videos?key=AIzaSyDfv2ISoNjVh2oX2JRJUQ1loS-voHH3GlI&fields=items(snippet(description,tags))&part=snippet&id=0pv6EuXeZGk HTTP/1.1" 200 None
[2022-11-18 00:12:03,579] DEBUG - Starting new HTTPS connection (1): www.googleapis.com:443
[2022-11-18 00:12:03,634] DEBUG - https://www.googleapis.com:443 "GET /youtube/v3/videos?key=AIzaSyDfv2ISoNjVh2oX2JRJUQ1loS-voHH3GlI&fields=items(snippet(description,tags))&part=snippet&id=fxlr-OKzCos HTTP/1.1" 200 None
[2022-11-18 00:12:03,636] DEBUG - Starting new HTTPS connection (1): www.googleapis.com:443
[2022-11-18 00:12:03,693] DEBUG - https://www.googleapis.com:443 "GET /youtube/v3/videos?key=AIzaSyDfv2ISoNjVh2oX2JRJUQ1loS-voHH3GlI&fields=items(snippet(description,tags))&part=snippet&id=Pg3KhoN2AQg HTTP/1.1" 200 None
[2022-11-18 00:12:03,697] DEBUG - Starting new HTTPS connection (1): www.googleapis.com:443
[2022-11-18 00:12:03,767] DEBUG - https://www.googleapis.com:443 "GET /youtube/v3/videos?key=AIzaSyDfv2ISoNjVh2oX2JRJUQ1loS-voHH3GlI&fields=items(snippet(description,tags))&part=snippet&id=jDAWZi027rM HTTP/1.1" 200 None
[2022-11-18 00:12:03,769] DEBUG - Starting new HTTPS connection (1): www.googleapis.com:443
[2022-11-18 00:12:03,828] DEBUG - https://www.googleapis.com:443 "GET /youtube/v3/videos?key=AIzaSyDfv2ISoNjVh2oX2JRJUQ1loS-voHH3GlI&fields=items(snippet(description,tags))&part=snippet&id=FldQ3dkYVa4 HTTP/1.1" 200 None
[2022-11-18 00:12:03,830] DEBUG - Starting new HTTPS connection (1): www.googleapis.com:443
[2022-11-18 00:12:03,891] DEBUG - https://www.googleapis.com:443 "GET /youtube/v3/videos?key=AIzaSyDfv2ISoNjVh2oX2JRJUQ1loS-voHH3GlI&fields=items(snippet(description,tags))&part=snippet&id=f2Zg997nw8g HTTP/1.1" 200 None
[2022-11-18 00:12:03,893] DEBUG - Starting new HTTPS connection (1): www.googleapis.com:443
[2022-11-18 00:12:03,936] DEBUG - https://www.googleapis.com:443 "GET /youtube/v3/videos?key=AIzaSyDfv2ISoNjVh2oX2JRJUQ1loS-voHH3GlI&fields=items(snippet(description,tags))&part=snippet&id=i3zDPv0h_1c HTTP/1.1" 200 None
[2022-11-18 00:12:03,939] DEBUG - Starting new HTTPS connection (1): www.googleapis.com:443
[2022-11-18 00:12:04,001] DEBUG - https://www.googleapis.com:443 "GET /youtube/v3/videos?key=AIzaSyDfv2ISoNjVh2oX2JRJUQ1loS-voHH3GlI&fields=items(snippet(description,tags))&part=snippet&id=GHhLSoYMhMI HTTP/1.1" 200 None
[2022-11-18 00:12:04,004] DEBUG - Starting new HTTPS connection (1): www.googleapis.com:443
[2022-11-18 00:12:04,073] DEBUG - https://www.googleapis.com:443 "GET /youtube/v3/videos?key=AIzaSyDfv2ISoNjVh2oX2JRJUQ1loS-voHH3GlI&fields=items(snippet(description,tags))&part=snippet&id=jF5pIyQ0O-M HTTP/1.1" 200 None
[2022-11-18 00:12:04,075] DEBUG - Starting new HTTPS connection (1): www.googleapis.com:443
[2022-11-18 00:12:04,132] DEBUG - https://www.googleapis.com:443 "GET /youtube/v3/videos?key=AIzaSyDfv2ISoNjVh2oX2JRJUQ1loS-voHH3GlI&fields=items(snippet(description,tags))&part=snippet&id=6EdFiISk22k HTTP/1.1" 200 None
[2022-11-18 00:12:04,134] DEBUG - Starting new HTTPS connection (1): www.googleapis.com:443
[2022-11-18 00:12:05,195] DEBUG - https://www.googleapis.com:443 "GET /youtube/v3/videos?key=AIzaSyDfv2ISoNjVh2oX2JRJUQ1loS-voHH3GlI&fields=items(snippet(description,tags))&part=snippet&id=Sit1svqO6OQ HTTP/1.1" 200 None
[2022-11-18 00:12:05,197] DEBUG - Starting new HTTPS connection (1): www.googleapis.com:443
[2022-11-18 00:12:05,264] DEBUG - https://www.googleapis.com:443 "GET /youtube/v3/videos?key=AIzaSyDfv2ISoNjVh2oX2JRJUQ1loS-voHH3GlI&fields=items(snippet(description,tags))&part=snippet&id=ns3VzJNhzWw HTTP/1.1" 200 None
[2022-11-18 00:12:05,267] DEBUG - Hashtags ['#c', '#python', '#speed', '#shorts', '#chrissullivan', '#celebritygameface', '#eentertainment', '#isaaclamb', '#shorts', '#facelanguage', '#bodylanguage', '#eyes', '#kenya', '#ktnnews', '#ktnprime', '#android', '#gotocon', '#gotochgo', '#programming', '#programminglanguages', '#meteorjs', '#virtual', '#conference']
[2022-11-18 00:12:05,267] DEBUG - Top Hashtags ['#shorts', '#c', '#python', '#speed', '#chrissullivan']
[2022-11-18 00:12:05,267] DEBUG - Tags ['haskell', 'tngtech', 'functional', 'munich', 'munihac', 'well-typed', 'refactoring', 'live coding', 'dfinity', 'dfinity foundation', 'mr. incredible', 'old faces', 'meme', 'most popular programming languages', 'python', 'java', 'programming languages', 'c++ vs python', 'python vs c++', 'python speed test', 'python performance test', 'c++ vs python speed', 'c++ vs python performace', 'how fast is python', 'how slow is python', 'how fast is c++', 'how slow is c++', 'how fast is c++ compared to python', 'python c++ speed comparison', 'mr. incredible', 'programming', 'joyful faces', 'hello world', 'programming language', 'c++', 'python', 'go', 'rust', 'julia', 'google', 'mozilla', 'mit', 'ai', 'big data', 'systems programming', 'application development', 'esoteric programming', 'esoteric programming language', 'malbolge', 'brainfuck', 'mr. incredible', 'skary faces', 'meme', 'tulip', 'programming language', 'vscode', 'visual studio code', 'vs code', 'distributed systems', 'programming languages', 'crdts', 'ufc', 'shevchenko', 'nunes', 'ufc 215', 'body language', "5 levels moravec's paradox", 'chelsea finn', "explanation moravec's paradox", 'humans', 'humans and robots', 'innovation', "moravec's paradox", "moravec's paradox 5 levels", "moravec's paradox computer scientist", "moravec's paradox explained", 'ott 5 levels', 'robots', 'science & tech', 'science & technology', 'things easy for humans hard for robots', 'things easy for robots hard for humans', 'wired', "wired moravec's paradox", 'nlp', 'language modelling', 'mlm', 'masked language modelling', 'machine learning', 'ai', 'hugging face', 'coding tutorial', 'python', 'celebrity game face', 'tv', 'this is us', 'this_is_us', 'e! shows', 'e_shows', 'kevin hart', 'kevin_hart', 'entertainment', 'isaac lamb', 'chris sullivan', 'e! entertainment', 'celebrity', 'celeb gossip', 'celeb news', 'e! news', 'e! news now', 'celebrity news', 'celebrity pictures', 'gossip', 'game show', 'prize', 'game', 'jb man cave', 'real life videos', 'shorts', 'face', 'facial', 'facial expression', 'body language', 'face language', 'read face', 'faces', 'psychology', 'face reading', 'woman face', 'reading people', 'emotions', 'an imperiled language', 'yankute language', 'yaku community', 'laikipia', 'python', 'python programming', 'python programming tutorial', 'best programming languages to learn', 'best programming language for beginners', 'why is python so popular', 'why python is better than other languages', 'is python the future of programming', 'is python the easiest language to learn', 'is python useful', 'reasons to learn python', 'why should i learn python', 'top 5 best programming languages 2019', 'is python easy to learn', 'free python course', 'python tutorial for beginners', 'python tutorial', 'goto', 'gotocon', 'goto conference', 'goto (software conference)', 'videos for developers', 'computer science', 'programming', 'gotochgo', 'goto chicago', 'anjana vakil', 'mapbox', 'programming', 'programming languages', 'meteor', 'javascript', 'web apps', 'atmosphere', 'packages', 'npm', 'meteor tutorial', 'cordova', 'react', 'native app', 'coding', 'programming', 'galaxy', 'meteor cloud', 'desktop apps mobile apps', 'meteor.js', 'nodejs', 'node', 'methods', 'core', 'fundamentals', 'app store', 'google play', 'play store', 'aws', 'apollo', 'visual code', 'webstorm', 'atom', 'autoscaling', 'push to deploy', 'deploy', 'install', 'installation', 'hackathon', 'virtual event', 'virtual conference', 'meteor impact', 'meteor hackathon', 'pathable', 'developer']
[2022-11-18 00:12:05,267] DEBUG - Top Tags ['python', 'programming', 'mr. incredible', 'programming languages', 'meme', 'programming language', 'ai', 'body language', 'haskell', 'tngtech', 'functional', 'munich', 'munihac', 'well-typed', 'refactoring', 'live coding', 'dfinity', 'dfinity foundation', 'old faces']
[2022-11-18 00:12:15,796] DEBUG - processing 25 tts sections
[2022-11-18 00:12:15,797] DEBUG - Text-to-speech: What is a programming language?
[2022-11-18 00:12:15,797] DEBUG - [#1] Subsection: What is a programming language?
[2022-11-18 00:12:31,592] DEBUG - Text-to-speech: Programming languages are used to create software programs that can be run on computers. There are many different types of programming languages, each with its own unique set of features and syntax. Some popular programming languages include Java, Python, and C plus plus.
[2022-11-18 00:12:31,592] DEBUG - [#1] Subsection: Programming languages are used to create software programs that can be run on computers. There are many different types of programming languages, each with its own unique set of features and syntax. Some popular programming languages include Java, Python, and C plus plus.
[2022-11-18 00:12:58,953] DEBUG - [#2] Subsection: Programming languages are used to create software programs that can be run on computers. There are many different types of programming languages, each with its own unique set of features and syntax. Some popular programming languages include Java, Python, and C plus plus.
[2022-11-18 00:13:30,644] DEBUG - [#3] Subsection: Programming languages are used to create software programs that can be run on computers. There are many different types of programming languages, each with its own unique set of features and syntax. Some popular programming languages include Java, Python, and C plus plus.
[2022-11-18 00:14:00,009] DEBUG - Text-to-speech: What are the different types of programming languages?
[2022-11-18 00:14:00,009] DEBUG - [#1] Subsection: What are the different types of programming languages?
[2022-11-18 00:14:17,798] DEBUG - Text-to-speech: There are many different types of programming languages, each with its own unique set of features and syntax. Some popular programming languages include Java, Python, and C plus plus.
[2022-11-18 00:14:17,798] DEBUG - [#1] Subsection: There are many different types of programming languages, each with its own unique set of features and syntax. Some popular programming languages include Java, Python, and C plus plus.
[2022-11-18 00:14:49,017] DEBUG - [#2] Subsection: There are many different types of programming languages, each with its own unique set of features and syntax. Some popular programming languages include Java, Python, and C plus plus.
[2022-11-18 00:15:17,291] DEBUG - Text-to-speech: What are the characteristics of a programming language?
[2022-11-18 00:15:17,291] DEBUG - [#1] Subsection: What are the characteristics of a programming language?
[2022-11-18 00:15:35,819] DEBUG - Text-to-speech: The characteristics of a programming language depend on the language itself. However, all programming languages share some common features, such as the ability to control the flow of a program, to manipulate data, and to create modular code.
[2022-11-18 00:15:35,819] DEBUG - [#1] Subsection: The characteristics of a programming language depend on the language itself. However, all programming languages share some common features, such as the ability to control the flow of a program, to manipulate data, and to create modular code.
[2022-11-18 00:15:59,421] DEBUG - [#2] Subsection: The characteristics of a programming language depend on the language itself. However, all programming languages share some common features, such as the ability to control the flow of a program, to manipulate data, and to create modular code.
[2022-11-18 00:16:49,167] DEBUG - Text-to-speech: What are the benefits of learning a programming language?
[2022-11-18 00:16:49,168] DEBUG - [#1] Subsection: What are the benefits of learning a programming language?
[2022-11-18 00:17:07,147] DEBUG - Text-to-speech: Learning a programming language can have many benefits. It can help you understand how computers work, and how to create software programs that can be run on them. Additionally, learning a programming language can also help improve your problem solving and critical thinking skills.
[2022-11-18 00:17:07,147] DEBUG - [#1] Subsection: Learning a programming language can have many benefits. It can help you understand how computers work, and how to create software programs that can be run on them. Additionally, learning a programming language can also help improve your problem solving and critical thinking skills.
[2022-11-18 00:17:26,868] DEBUG - [#2] Subsection: Learning a programming language can have many benefits. It can help you understand how computers work, and how to create software programs that can be run on them. Additionally, learning a programming language can also help improve your problem solving and critical thinking skills.
[2022-11-18 00:17:56,201] DEBUG - [#3] Subsection: Learning a programming language can have many benefits. It can help you understand how computers work, and how to create software programs that can be run on them. Additionally, learning a programming language can also help improve your problem solving and critical thinking skills.
[2022-11-18 00:18:29,207] DEBUG - Text-to-speech: What are the different features of a programming language?
[2022-11-18 00:18:29,207] DEBUG - [#1] Subsection: What are the different features of a programming language?
[2022-11-18 00:18:46,537] DEBUG - Text-to-speech: The features of a programming language depend on the language itself. However, all programming languages share some common features, such as the ability to control the flow of a program, to manipulate data, and to create modular code.
[2022-11-18 00:18:46,537] DEBUG - [#1] Subsection: The features of a programming language depend on the language itself. However, all programming languages share some common features, such as the ability to control the flow of a program, to manipulate data, and to create modular code.
[2022-11-18 00:19:07,012] DEBUG - [#2] Subsection: The features of a programming language depend on the language itself. However, all programming languages share some common features, such as the ability to control the flow of a program, to manipulate data, and to create modular code.
[2022-11-18 00:19:54,380] DEBUG - Text-to-speech: What is the history of programming languages?
[2022-11-18 00:19:54,380] DEBUG - [#1] Subsection: What is the history of programming languages?
[2022-11-18 00:20:13,025] DEBUG - Text-to-speech: The history of programming languages dates back to the early days of computing. One of the earliest programming languages was known as Fortran, which was created in the 1950s. Since then, many other programming languages have been created, each with its own unique set of features and syntax.
[2022-11-18 00:20:13,025] DEBUG - [#1] Subsection: The history of programming languages dates back to the early days of computing. One of the earliest programming languages was known as Fortran, which was created in the 1950s. Since then, many other programming languages have been created, each with its own unique set of features and syntax.
[2022-11-18 00:20:35,806] DEBUG - [#2] Subsection: The history of programming languages dates back to the early days of computing. One of the earliest programming languages was known as Fortran, which was created in the 1950s. Since then, many other programming languages have been created, each with its own unique set of features and syntax.
[2022-11-18 00:21:06,869] DEBUG - [#3] Subsection: The history of programming languages dates back to the early days of computing. One of the earliest programming languages was known as Fortran, which was created in the 1950s. Since then, many other programming languages have been created, each with its own unique set of features and syntax.
[2022-11-18 00:21:40,775] DEBUG - Text-to-speech: What is the future of programming languages?
[2022-11-18 00:21:40,775] DEBUG - [#1] Subsection: What is the future of programming languages?
[2022-11-18 00:21:57,906] DEBUG - Text-to-speech: The future of programming languages is always evolving. New languages are being created all the time, and existing languages are continuously being updated and improved. Additionally, new technologies are constantly being developed that can impact the way programming languages are used.
[2022-11-18 00:21:57,906] DEBUG - [#1] Subsection: The future of programming languages is always evolving. New languages are being created all the time, and existing languages are continuously being updated and improved. Additionally, new technologies are constantly being developed that can impact the way programming languages are used.
[2022-11-18 00:22:18,205] DEBUG - [#2] Subsection: The future of programming languages is always evolving. New languages are being created all the time, and existing languages are continuously being updated and improved. Additionally, new technologies are constantly being developed that can impact the way programming languages are used.
[2022-11-18 00:22:51,166] DEBUG - [#3] Subsection: The future of programming languages is always evolving. New languages are being created all the time, and existing languages are continuously being updated and improved. Additionally, new technologies are constantly being developed that can impact the way programming languages are used.
[2022-11-18 00:23:24,877] CRITICAL - Failed to generate audio
[2022-11-18 00:23:24,877] INFO - Getting video script.
[2022-11-18 00:23:24,878] INFO - message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
[2022-11-18 00:23:24,878] DEBUG - api_version=None data='{"model": "text-davinci-002", "prompt": "Write a list of unique and interesting keywords relating to basic computer science:\\n\\n-", "temperature": 1, "max_tokens": 128, "top_p": 1, "frequency_penalty": 0, "presence_penalty": 0, "n": 1, "stop": "", "echo": false}' message='Post details'
[2022-11-18 00:23:24,879] DEBUG - Resetting dropped connection: api.openai.com
[2022-11-18 00:23:28,176] DEBUG - https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 420
[2022-11-18 00:23:28,176] INFO - message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=2909 request_id=1fd9d0a9670fc392feed2b4159436652 response_code=200
[2022-11-18 00:23:28,176] INFO - message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
[2022-11-18 00:23:28,177] DEBUG - api_version=None data='{"model": "text-curie-001", "prompt": "Write a list of 5 interesting beginner topics on where Operating Systems is used in the context of computer science:\\n-", "temperature": 0.7, "max_tokens": 256, "top_p": 1, "frequency_penalty": 0, "presence_penalty": 0, "n": 1, "stop": "", "echo": false}' message='Post details'
[2022-11-18 00:23:28,793] DEBUG - https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 510
[2022-11-18 00:23:28,793] INFO - message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=467 request_id=370787c24f8eeb8003c3585a9476accf response_code=200
[2022-11-18 00:23:28,793] INFO - message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
[2022-11-18 00:23:28,793] DEBUG - api_version=None data='{"model": "text-davinci-002", "prompt": "Write a short, unique and interesting title relating to the theory of How Operating Systems work in the form of a video essay title without involving numbers:", "temperature": 1, "max_tokens": 20, "top_p": 1, "frequency_penalty": 0, "presence_penalty": 0, "n": 1, "stop": "", "echo": false}' message='Post details'
[2022-11-18 00:23:29,673] DEBUG - https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 307
[2022-11-18 00:23:29,673] INFO - message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=730 request_id=5a2299aedd734ec796d03fa56d664743 response_code=200
[2022-11-18 00:23:29,700] DEBUG - Keyword Operating Systems, Topics ['How Operating Systems work', 'What different types of Operating Systems are there', 'How Operating Systems are composed', 'What are the different features of different Operating Systems', 'How do different Operating Systems handle different types of data'], Topic How Operating Systems Work: A Video Essay
[2022-11-18 00:23:29,700] INFO - message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
[2022-11-18 00:23:29,700] DEBUG - api_version=None data='{"model": "text-davinci-002", "prompt": "Write a list of beginner topics relating to what is How Operating Systems Work: A Video Essay in the context of computer science:\\n\\n", "temperature": 0, "max_tokens": 256, "top_p": 1, "frequency_penalty": 0, "presence_penalty": 0, "n": 1, "stop": "", "echo": false}' message='Post details'
[2022-11-18 00:23:37,778] DEBUG - https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 1052
[2022-11-18 00:23:37,778] INFO - message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=7924 request_id=ae6973fccabe760227196b9ab178a368 response_code=200
[2022-11-18 00:23:37,778] DEBUG - topic: How Operating Systems Work: A Video Essay, sub topics 
-What is an operating system?
-What are the different types of operating systems?
-How do operating systems work?
-What are the components of an operating system?
-How do operating systems manage resources?
-What is process management?
-What is memory management?
-What is file management?
-What are the different types of file systems?
-What is security in an operating system?
-What are the different types of attacks on operating systems?
-What are the different types of security mechanisms?
-What is virtualization?
-What are the different types of virtualization?
-How do operating systems support virtualization?
-What is a distributed operating system?
-What are the characteristics of a distributed operating system?
-How do distributed operating systems work?
[2022-11-18 00:23:37,778] DEBUG - getting summary for topic
[2022-11-18 00:23:37,778] INFO - message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
[2022-11-18 00:23:37,778] DEBUG - api_version=None data='{"model": "text-curie-001", "prompt": "Write a summary for the following topic in the form of a youtube description in the context of computer science:\\n\\ntopic: How Operating Systems Work: A Video Essay\\n\\nsummary:", "temperature": 0, "max_tokens": 256, "top_p": 1, "frequency_penalty": 0, "presence_penalty": 0, "n": 1, "stop": "", "echo": false}' message='Post details'
[2022-11-18 00:23:38,586] DEBUG - https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 588
[2022-11-18 00:23:38,586] INFO - message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=662 request_id=409bb6b2afc2a8d85d1832a30dcefdb3 response_code=200
[2022-11-18 00:23:38,586] INFO - message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
[2022-11-18 00:23:38,587] DEBUG - api_version=None data='{"model": "text-davinci-002", "prompt": "Expand greatly upon the topic of How Operating Systems Work: A Video Essay in the context of computer science summarised for a 9th grader:\\n\\n1. What is an operating system?\\n\\n", "temperature": 1, "max_tokens": 128, "top_p": 1, "frequency_penalty": 0, "presence_penalty": 0, "n": 1, "stop": ["2.", "1."], "echo": false}' message='Post details'
[2022-11-18 00:23:40,060] DEBUG - https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 398
[2022-11-18 00:23:40,060] INFO - message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1332 request_id=58b79becb2b47c1004a0a40665add5a6 response_code=200
[2022-11-18 00:23:40,061] INFO - message='Request to OpenAI API' method=post path=https://api.openai.com/v1/edits
[2022-11-18 00:23:40,061] DEBUG - api_version=None data='{"model": "text-davinci-edit-001", "input": "An operating system (OS) is a collection of software that manages the hardware and provides common services for computer programs.", "instruction": "Replace all non-characters with their spoken counterpart. And fix grammar.", "temperature": 0, "top_p": 1}' message='Post details'
[2022-11-18 00:23:42,086] DEBUG - https://api.openai.com:443 "POST /v1/edits HTTP/1.1" 200 277
[2022-11-18 00:23:42,086] INFO - message='OpenAI API response' path=https://api.openai.com/v1/edits processing_ms=1889 request_id=4cc3d78508361b6cc570e48b792cc646 response_code=200
[2022-11-18 00:23:42,086] INFO - message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
[2022-11-18 00:23:42,087] DEBUG - api_version=None data='{"model": "text-davinci-002", "prompt": "Expand greatly upon the topic of How Operating Systems Work: A Video Essay in the context of computer science summarised for a 9th grader:\\n\\n1. What is an operating system?\\n\\nAn operating system (OS) is a collection of software that manages the hardware and provides common services for computer programs.\\n\\n2. What are the different types of operating systems?\\n\\n", "temperature": 1, "max_tokens": 128, "top_p": 1, "frequency_penalty": 0, "presence_penalty": 0, "n": 1, "stop": ["3.", "2."], "echo": false}' message='Post details'
[2022-11-18 00:23:44,019] DEBUG - https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 369
[2022-11-18 00:23:44,019] INFO - message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1793 request_id=4b09eef91cf99028d11bc6fa8507fff7 response_code=200
[2022-11-18 00:23:44,019] INFO - message='Request to OpenAI API' method=post path=https://api.openai.com/v1/edits
[2022-11-18 00:23:44,019] DEBUG - api_version=None data='{"model": "text-davinci-edit-001", "input": "There are many different types of operating systems, including Windows, macOS, Linux, and Android.", "instruction": "Replace all non-characters with their spoken counterpart. And fix grammar.", "temperature": 0, "top_p": 1}' message='Post details'
[2022-11-18 00:23:45,523] DEBUG - https://api.openai.com:443 "POST /v1/edits HTTP/1.1" 200 244
[2022-11-18 00:23:45,523] INFO - message='OpenAI API response' path=https://api.openai.com/v1/edits processing_ms=1365 request_id=b99b225892a6c25cb7636bd5f8ad3e45 response_code=200
[2022-11-18 00:23:45,523] INFO - message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
[2022-11-18 00:23:45,524] DEBUG - api_version=None data='{"model": "text-davinci-002", "prompt": "Expand greatly upon the topic of How Operating Systems Work: A Video Essay in the context of computer science summarised for a 9th grader:\\n\\n1. What is an operating system?\\n\\nAn operating system (OS) is a collection of software that manages the hardware and provides common services for computer programs.\\n\\n2. What are the different types of operating systems?\\n\\nThere are many different types of operating systems, including Windows, Mac OS, Linux, and Android.\\n\\n3. How do operating systems work?\\n\\n", "temperature": 1, "max_tokens": 128, "top_p": 1, "frequency_penalty": 0, "presence_penalty": 0, "n": 1, "stop": ["4.", "3."], "echo": false}' message='Post details'
[2022-11-18 00:23:48,215] DEBUG - https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 424
[2022-11-18 00:23:48,216] INFO - message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=2551 request_id=ba64d2bd6a89dfb12ef7f6e4e48328ca response_code=200
[2022-11-18 00:23:48,216] INFO - message='Request to OpenAI API' method=post path=https://api.openai.com/v1/edits
[2022-11-18 00:23:48,216] DEBUG - api_version=None data='{"model": "text-davinci-edit-001", "input": "Operating systems manage the hardware and software resources of a computer. They allow applications to access these resources in a safe and efficient way.", "instruction": "Replace all non-characters with their spoken counterpart. And fix grammar.", "temperature": 0, "top_p": 1}' message='Post details'
[2022-11-18 00:23:50,408] DEBUG - https://api.openai.com:443 "POST /v1/edits HTTP/1.1" 200 303
[2022-11-18 00:23:50,409] INFO - message='OpenAI API response' path=https://api.openai.com/v1/edits processing_ms=2048 request_id=127d49eedd608382a3474483f2b6b89f response_code=200
[2022-11-18 00:23:50,409] INFO - message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
[2022-11-18 00:23:50,409] DEBUG - api_version=None data='{"model": "text-davinci-002", "prompt": "Expand greatly upon the topic of How Operating Systems Work: A Video Essay in the context of computer science summarised for a 9th grader:\\n\\n1. What is an operating system?\\n\\nAn operating system (OS) is a collection of software that manages the hardware and provides common services for computer programs.\\n\\n2. What are the different types of operating systems?\\n\\nThere are many different types of operating systems, including Windows, Mac OS, Linux, and Android.\\n\\n3. How do operating systems work?\\n\\nOperating systems manage the hardware and software resources of a computer. They allow applications to access these resources in a safe and efficient manner.\\n\\n4. What are the components of an operating system?\\n\\n", "temperature": 1, "max_tokens": 128, "top_p": 1, "frequency_penalty": 0, "presence_penalty": 0, "n": 1, "stop": ["5.", "4."], "echo": false}' message='Post details'
[2022-11-18 00:23:52,002] DEBUG - https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 381
[2022-11-18 00:23:52,002] INFO - message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1449 request_id=11494eb848332348a08f2b4f4512c2a3 response_code=200
[2022-11-18 00:23:52,002] INFO - message='Request to OpenAI API' method=post path=https://api.openai.com/v1/edits
[2022-11-18 00:23:52,003] DEBUG - api_version=None data='{"model": "text-davinci-edit-001", "input": "The components of an operating system include the kernel, the shell, the file system, and the user interface.", "instruction": "Replace all non-characters with their spoken counterpart. And fix grammar.", "temperature": 0, "top_p": 1}' message='Post details'
[2022-11-18 00:23:53,830] DEBUG - https://api.openai.com:443 "POST /v1/edits HTTP/1.1" 200 260
[2022-11-18 00:23:53,830] INFO - message='OpenAI API response' path=https://api.openai.com/v1/edits processing_ms=1689 request_id=a18fd42f1d12401fcec02b48a743746f response_code=200
[2022-11-18 00:23:53,830] INFO - message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
[2022-11-18 00:23:53,830] DEBUG - api_version=None data='{"model": "text-davinci-002", "prompt": "Expand greatly upon the topic of How Operating Systems Work: A Video Essay in the context of computer science summarised for a 9th grader:\\n\\n1. What is an operating system?\\n\\nAn operating system (OS) is a collection of software that manages the hardware and provides common services for computer programs.\\n\\n2. What are the different types of operating systems?\\n\\nThere are many different types of operating systems, including Windows, Mac OS, Linux, and Android.\\n\\n3. How do operating systems work?\\n\\nOperating systems manage the hardware and software resources of a computer. They allow applications to access these resources in a safe and efficient manner.\\n\\n4. What are the components of an operating system?\\n\\nThe components of an operating system include the kernel, the shell, the file system, and the user interface (UI).\\n\\n5. How do operating systems manage resources?\\n\\n", "temperature": 1, "max_tokens": 128, "top_p": 1, "frequency_penalty": 0, "presence_penalty": 0, "n": 1, "stop": ["6.", "5."], "echo": false}' message='Post details'
[2022-11-18 00:23:57,210] DEBUG - https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 434
[2022-11-18 00:23:57,210] INFO - message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=3219 request_id=8ed34021cbfc0e0b45a807c5a453715a response_code=200
[2022-11-18 00:23:57,210] INFO - message='Request to OpenAI API' method=post path=https://api.openai.com/v1/edits
[2022-11-18 00:23:57,210] DEBUG - api_version=None data='{"model": "text-davinci-edit-001", "input": "Operating systems use a variety of methods to manage the resources of a computer. They can allocate and deallocate resources, schedule processes, and manage memory.", "instruction": "Replace all non-characters with their spoken counterpart. And fix grammar.", "temperature": 0, "top_p": 1}' message='Post details'
[2022-11-18 00:23:59,129] DEBUG - https://api.openai.com:443 "POST /v1/edits HTTP/1.1" 200 311
[2022-11-18 00:23:59,130] INFO - message='OpenAI API response' path=https://api.openai.com/v1/edits processing_ms=1779 request_id=1f8086433d5ead0ced6a21e7d587370b response_code=200
[2022-11-18 00:23:59,130] INFO - message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
[2022-11-18 00:23:59,130] DEBUG - api_version=None data='{"model": "text-davinci-002", "prompt": "Expand greatly upon the topic of How Operating Systems Work: A Video Essay in the context of computer science summarised for a 9th grader:\\n\\n1. What is an operating system?\\n\\nAn operating system (OS) is a collection of software that manages the hardware and provides common services for computer programs.\\n\\n2. What are the different types of operating systems?\\n\\nThere are many different types of operating systems, including Windows, Mac OS, Linux, and Android.\\n\\n3. How do operating systems work?\\n\\nOperating systems manage the hardware and software resources of a computer. They allow applications to access these resources in a safe and efficient manner.\\n\\n4. What are the components of an operating system?\\n\\nThe components of an operating system include the kernel, the shell, the file system, and the user interface (UI).\\n\\n5. How do operating systems manage resources?\\n\\nOperating systems use a variety of methods to manage the resources of a computer. They can allocate and deallocate resources, schedule processes, and manage memory.\\n\\n6. What is process management?\\n\\n", "temperature": 1, "max_tokens": 128, "top_p": 1, "frequency_penalty": 0, "presence_penalty": 0, "n": 1, "stop": ["7.", "6."], "echo": false}' message='Post details'
[2022-11-18 00:24:01,352] DEBUG - https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 426
[2022-11-18 00:24:01,352] INFO - message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=2079 request_id=8b9b25cb92769938bf46844330291c36 response_code=200
[2022-11-18 00:24:01,352] INFO - message='Request to OpenAI API' method=post path=https://api.openai.com/v1/edits
[2022-11-18 00:24:01,352] DEBUG - api_version=None data='{"model": "text-davinci-edit-001", "input": "Process management is a process by which an operating system manages the running of programs. It includes creating, scheduling, and terminating processes.", "instruction": "Replace all non-characters with their spoken counterpart. And fix grammar.", "temperature": 0, "top_p": 1}' message='Post details'
[2022-11-18 00:24:03,122] DEBUG - https://api.openai.com:443 "POST /v1/edits HTTP/1.1" 200 303
[2022-11-18 00:24:03,123] INFO - message='OpenAI API response' path=https://api.openai.com/v1/edits processing_ms=1631 request_id=203e473748ee3ede534422ebfa67762b response_code=200
[2022-11-18 00:24:03,123] INFO - message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
[2022-11-18 00:24:03,123] DEBUG - api_version=None data='{"model": "text-davinci-002", "prompt": "Expand greatly upon the topic of How Operating Systems Work: A Video Essay in the context of computer science summarised for a 9th grader:\\n\\n1. What is an operating system?\\n\\nAn operating system (OS) is a collection of software that manages the hardware and provides common services for computer programs.\\n\\n2. What are the different types of operating systems?\\n\\nThere are many different types of operating systems, including Windows, Mac OS, Linux, and Android.\\n\\n3. How do operating systems work?\\n\\nOperating systems manage the hardware and software resources of a computer. They allow applications to access these resources in a safe and efficient manner.\\n\\n4. What are the components of an operating system?\\n\\nThe components of an operating system include the kernel, the shell, the file system, and the user interface (UI).\\n\\n5. How do operating systems manage resources?\\n\\nOperating systems use a variety of methods to manage the resources of a computer. They can allocate and deallocate resources, schedule processes, and manage memory.\\n\\n6. What is process management?\\n\\nProcess management is the process by which an operating system manages the running of programs.\\nIt includes creating, scheduling, and terminating processes.\\n\\n7. What is memory management?\\n\\n", "temperature": 1, "max_tokens": 128, "top_p": 1, "frequency_penalty": 0, "presence_penalty": 0, "n": 1, "stop": ["8.", "7."], "echo": false}' message='Post details'
[2022-11-18 00:24:04,888] DEBUG - https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 444
[2022-11-18 00:24:04,889] INFO - message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1623 request_id=09ade1c3235e0e50abdcd762638ba981 response_code=200
[2022-11-18 00:24:04,889] INFO - message='Request to OpenAI API' method=post path=https://api.openai.com/v1/edits
[2022-11-18 00:24:04,889] DEBUG - api_version=None data='{"model": "text-davinci-edit-001", "input": "Memory management is the process by which an operating system manages the memory of a computer.\\nIt includes allocating and deallocating memory, as well as managing memory leaks.", "instruction": "Replace all non-characters with their spoken counterpart. And fix grammar.", "temperature": 0, "top_p": 1}' message='Post details'
[2022-11-18 00:24:06,692] DEBUG - https://api.openai.com:443 "POST /v1/edits HTTP/1.1" 200 321
[2022-11-18 00:24:06,692] INFO - message='OpenAI API response' path=https://api.openai.com/v1/edits processing_ms=1661 request_id=d3d497720660e57da7432f7b5bbe6848 response_code=200
[2022-11-18 00:24:06,693] INFO - message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
[2022-11-18 00:24:06,693] DEBUG - api_version=None data='{"model": "text-davinci-002", "prompt": "Expand greatly upon the topic of How Operating Systems Work: A Video Essay in the context of computer science summarised for a 9th grader:\\n\\n1. What is an operating system?\\n\\nAn operating system (OS) is a collection of software that manages the hardware and provides common services for computer programs.\\n\\n2. What are the different types of operating systems?\\n\\nThere are many different types of operating systems, including Windows, Mac OS, Linux, and Android.\\n\\n3. How do operating systems work?\\n\\nOperating systems manage the hardware and software resources of a computer. They allow applications to access these resources in a safe and efficient manner.\\n\\n4. What are the components of an operating system?\\n\\nThe components of an operating system include the kernel, the shell, the file system, and the user interface (UI).\\n\\n5. How do operating systems manage resources?\\n\\nOperating systems use a variety of methods to manage the resources of a computer. They can allocate and deallocate resources, schedule processes, and manage memory.\\n\\n6. What is process management?\\n\\nProcess management is the process by which an operating system manages the running of programs.\\nIt includes creating, scheduling, and terminating processes.\\n\\n7. What is memory management?\\n\\nMemory management is the process by which an operating system manages the memory of a computer, including allocating and deallocating memory, as well as managing memory leaks.\\n\\n8. What is file management?\\n\\n", "temperature": 1, "max_tokens": 128, "top_p": 1, "frequency_penalty": 0, "presence_penalty": 0, "n": 1, "stop": ["9.", "8."], "echo": false}' message='Post details'
[2022-11-18 00:24:08,460] DEBUG - https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 407
[2022-11-18 00:24:08,460] INFO - message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1627 request_id=4840d921835ad416ed56a97377230c5b response_code=200
[2022-11-18 00:24:08,462] INFO - message='Request to OpenAI API' method=post path=https://api.openai.com/v1/edits
[2022-11-18 00:24:08,462] DEBUG - api_version=None data='{"model": "text-davinci-edit-001", "input": "File management is the process by which an operating system manages the files of a computer, including creating, deleting, and modifying files.", "instruction": "Replace all non-characters with their spoken counterpart. And fix grammar.", "temperature": 0, "top_p": 1}' message='Post details'
[2022-11-18 00:24:10,635] DEBUG - https://api.openai.com:443 "POST /v1/edits HTTP/1.1" 200 337
[2022-11-18 00:24:10,636] INFO - message='OpenAI API response' path=https://api.openai.com/v1/edits processing_ms=2040 request_id=bdf3b9ed20705c6fe184b56f09b3573c response_code=200
[2022-11-18 00:24:10,636] INFO - message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
[2022-11-18 00:24:10,636] DEBUG - api_version=None data='{"model": "text-davinci-002", "prompt": "Expand greatly upon the topic of How Operating Systems Work: A Video Essay in the context of computer science summarised for a 9th grader:\\n\\n1. What is an operating system?\\n\\nAn operating system (OS) is a collection of software that manages the hardware and provides common services for computer programs.\\n\\n2. What are the different types of operating systems?\\n\\nThere are many different types of operating systems, including Windows, Mac OS, Linux, and Android.\\n\\n3. How do operating systems work?\\n\\nOperating systems manage the hardware and software resources of a computer. They allow applications to access these resources in a safe and efficient manner.\\n\\n4. What are the components of an operating system?\\n\\nThe components of an operating system include the kernel, the shell, the file system, and the user interface (UI).\\n\\n5. How do operating systems manage resources?\\n\\nOperating systems use a variety of methods to manage the resources of a computer. They can allocate and deallocate resources, schedule processes, and manage memory.\\n\\n6. What is process management?\\n\\nProcess management is the process by which an operating system manages the running of programs.\\nIt includes creating, scheduling, and terminating processes.\\n\\n7. What is memory management?\\n\\nMemory management is the process by which an operating system manages the memory of a computer, including allocating and deallocating memory, as well as managing memory leaks.\\n\\n8. What is file management?\\n\\nFile management is the process by which an operating system manages the files of a computer, including creating, deleting, and modifying files, and moving files from one directory to another.\\n\\n9. What are the different types of file systems?\\n\\n", "temperature": 1, "max_tokens": 128, "top_p": 1, "frequency_penalty": 0, "presence_penalty": 0, "n": 1, "stop": ["10.", "9."], "echo": false}' message='Post details'
[2022-11-18 00:24:11,625] DEBUG - https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 346
[2022-11-18 00:24:11,625] INFO - message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=846 request_id=4a97f50cc06c1095ca87cfa39c069738 response_code=200
[2022-11-18 00:24:11,625] INFO - message='Request to OpenAI API' method=post path=https://api.openai.com/v1/edits
[2022-11-18 00:24:11,625] DEBUG - api_version=None data='{"model": "text-davinci-edit-001", "input": "There are many different types of file systems, including FAT, NTFS, and ext4.", "instruction": "Replace all non-characters with their spoken counterpart. And fix grammar.", "temperature": 0, "top_p": 1}' message='Post details'
[2022-11-18 00:24:13,089] DEBUG - https://api.openai.com:443 "POST /v1/edits HTTP/1.1" 200 227
[2022-11-18 00:24:13,090] INFO - message='OpenAI API response' path=https://api.openai.com/v1/edits processing_ms=1325 request_id=0546528cad7e01048cc85895f33360be response_code=200
[2022-11-18 00:24:13,090] INFO - message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
[2022-11-18 00:24:13,090] DEBUG - api_version=None data='{"model": "text-davinci-002", "prompt": "Expand greatly upon the topic of How Operating Systems Work: A Video Essay in the context of computer science summarised for a 9th grader:\\n\\n1. What is an operating system?\\n\\nAn operating system (OS) is a collection of software that manages the hardware and provides common services for computer programs.\\n\\n2. What are the different types of operating systems?\\n\\nThere are many different types of operating systems, including Windows, Mac OS, Linux, and Android.\\n\\n3. How do operating systems work?\\n\\nOperating systems manage the hardware and software resources of a computer. They allow applications to access these resources in a safe and efficient manner.\\n\\n4. What are the components of an operating system?\\n\\nThe components of an operating system include the kernel, the shell, the file system, and the user interface (UI).\\n\\n5. How do operating systems manage resources?\\n\\nOperating systems use a variety of methods to manage the resources of a computer. They can allocate and deallocate resources, schedule processes, and manage memory.\\n\\n6. What is process management?\\n\\nProcess management is the process by which an operating system manages the running of programs.\\nIt includes creating, scheduling, and terminating processes.\\n\\n7. What is memory management?\\n\\nMemory management is the process by which an operating system manages the memory of a computer, including allocating and deallocating memory, as well as managing memory leaks.\\n\\n8. What is file management?\\n\\nFile management is the process by which an operating system manages the files of a computer, including creating, deleting, and modifying files, and moving files from one directory to another.\\n\\n9. What are the different types of file systems?\\n\\nThere are many different types of file systems, including FAT, NTFS, and ext four.\\n\\n10. What is security in an operating system?\\n\\n", "temperature": 1, "max_tokens": 128, "top_p": 1, "frequency_penalty": 0, "presence_penalty": 0, "n": 1, "stop": ["11.", "10."], "echo": false}' message='Post details'
[2022-11-18 00:24:15,449] DEBUG - https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 451
[2022-11-18 00:24:15,449] INFO - message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=2215 request_id=52c6e2c134e4827bb7466e36f5f0619a response_code=200
[2022-11-18 00:24:15,449] INFO - message='Request to OpenAI API' method=post path=https://api.openai.com/v1/edits
[2022-11-18 00:24:15,450] DEBUG - api_version=None data='{"model": "text-davinci-edit-001", "input": "Operating system security is the process by which an operating system protects a computer from unauthorized access. It includes setting permissions, encrypting data, and creating backups.", "instruction": "Replace all non-characters with their spoken counterpart. And fix grammar.", "temperature": 0, "top_p": 1}' message='Post details'
[2022-11-18 00:24:18,092] DEBUG - https://api.openai.com:443 "POST /v1/edits HTTP/1.1" 200 446
[2022-11-18 00:24:18,092] INFO - message='OpenAI API response' path=https://api.openai.com/v1/edits processing_ms=2503 request_id=f4c4eb47431612472b6006bc929b8198 response_code=200
[2022-11-18 00:24:18,093] INFO - message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
[2022-11-18 00:24:18,093] DEBUG - api_version=None data='{"model": "text-davinci-002", "prompt": "Expand greatly upon the topic of How Operating Systems Work: A Video Essay in the context of computer science summarised for a 9th grader:\\n\\n1. What is an operating system?\\n\\nAn operating system (OS) is a collection of software that manages the hardware and provides common services for computer programs.\\n\\n2. What are the different types of operating systems?\\n\\nThere are many different types of operating systems, including Windows, Mac OS, Linux, and Android.\\n\\n3. How do operating systems work?\\n\\nOperating systems manage the hardware and software resources of a computer. They allow applications to access these resources in a safe and efficient manner.\\n\\n4. What are the components of an operating system?\\n\\nThe components of an operating system include the kernel, the shell, the file system, and the user interface (UI).\\n\\n5. How do operating systems manage resources?\\n\\nOperating systems use a variety of methods to manage the resources of a computer. They can allocate and deallocate resources, schedule processes, and manage memory.\\n\\n6. What is process management?\\n\\nProcess management is the process by which an operating system manages the running of programs.\\nIt includes creating, scheduling, and terminating processes.\\n\\n7. What is memory management?\\n\\nMemory management is the process by which an operating system manages the memory of a computer, including allocating and deallocating memory, as well as managing memory leaks.\\n\\n8. What is file management?\\n\\nFile management is the process by which an operating system manages the files of a computer, including creating, deleting, and modifying files, and moving files from one directory to another.\\n\\n9. What are the different types of file systems?\\n\\nThere are many different types of file systems, including FAT, NTFS, and ext four.\\n\\n10. What is security in an operating system?\\n\\nOperating system security is the process by which an operating system protects a computer from unauthorized access.\\nIt includes setting permissions, encrypting data, and creating backups.\\nIt is also the process by which an operating system protects itself from being modified by unauthorized users.\\n\\n11. What are the different types of attacks on operating systems?\\n\\n", "temperature": 1, "max_tokens": 128, "top_p": 1, "frequency_penalty": 0, "presence_penalty": 0, "n": 1, "stop": ["12.", "11."], "echo": false}' message='Post details'
[2022-11-18 00:24:19,510] DEBUG - https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 397
[2022-11-18 00:24:19,510] INFO - message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1274 request_id=c3600930aced17550807c7aa2a13252f response_code=200
[2022-11-18 00:24:19,510] INFO - message='Request to OpenAI API' method=post path=https://api.openai.com/v1/edits
[2022-11-18 00:24:19,512] DEBUG - api_version=None data='{"model": "text-davinci-edit-001", "input": "There are many different types of attacks on operating systems, including viruses, worms, Trojans, and denial of service attacks.", "instruction": "Replace all non-characters with their spoken counterpart. And fix grammar.", "temperature": 0, "top_p": 1}' message='Post details'
[2022-11-18 00:24:21,121] DEBUG - https://api.openai.com:443 "POST /v1/edits HTTP/1.1" 200 275
[2022-11-18 00:24:21,121] INFO - message='OpenAI API response' path=https://api.openai.com/v1/edits processing_ms=1470 request_id=f3bc3fa7e7fe02d8686d97951f49fd00 response_code=200
[2022-11-18 00:24:21,122] INFO - message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
[2022-11-18 00:24:21,122] DEBUG - api_version=None data='{"model": "text-davinci-002", "prompt": "Expand greatly upon the topic of How Operating Systems Work: A Video Essay in the context of computer science summarised for a 9th grader:\\n\\n1. What is an operating system?\\n\\nAn operating system (OS) is a collection of software that manages the hardware and provides common services for computer programs.\\n\\n2. What are the different types of operating systems?\\n\\nThere are many different types of operating systems, including Windows, Mac OS, Linux, and Android.\\n\\n3. How do operating systems work?\\n\\nOperating systems manage the hardware and software resources of a computer. They allow applications to access these resources in a safe and efficient manner.\\n\\n4. What are the components of an operating system?\\n\\nThe components of an operating system include the kernel, the shell, the file system, and the user interface (UI).\\n\\n5. How do operating systems manage resources?\\n\\nOperating systems use a variety of methods to manage the resources of a computer. They can allocate and deallocate resources, schedule processes, and manage memory.\\n\\n6. What is process management?\\n\\nProcess management is the process by which an operating system manages the running of programs.\\nIt includes creating, scheduling, and terminating processes.\\n\\n7. What is memory management?\\n\\nMemory management is the process by which an operating system manages the memory of a computer, including allocating and deallocating memory, as well as managing memory leaks.\\n\\n8. What is file management?\\n\\nFile management is the process by which an operating system manages the files of a computer, including creating, deleting, and modifying files, and moving files from one directory to another.\\n\\n9. What are the different types of file systems?\\n\\nThere are many different types of file systems, including FAT, NTFS, and ext four.\\n\\n10. What is security in an operating system?\\n\\nOperating system security is the process by which an operating system protects a computer from unauthorized access.\\nIt includes setting permissions, encrypting data, and creating backups.\\nIt is also the process by which an operating system protects itself from being modified by unauthorized users.\\n\\n11. What are the different types of attacks on operating systems?\\n\\nThere are many different types of attacks on operating systems, including viruses, worms, Trojans, and denialofservice attacks.\\n\\n12. What are the different types of security mechanisms?\\n\\n", "temperature": 1, "max_tokens": 128, "top_p": 1, "frequency_penalty": 0, "presence_penalty": 0, "n": 1, "stop": ["13.", "12."], "echo": false}' message='Post details'
[2022-11-18 00:24:22,138] DEBUG - https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 385
[2022-11-18 00:24:22,138] INFO - message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=877 request_id=2e27072e95bc1f3f9bb36dd23ac01416 response_code=200
[2022-11-18 00:24:22,138] INFO - message='Request to OpenAI API' method=post path=https://api.openai.com/v1/edits
[2022-11-18 00:24:22,138] DEBUG - api_version=None data='{"model": "text-davinci-edit-001", "input": "There are many different types of security mechanisms, including firewalls, intrusion detection systems, and encryption.", "instruction": "Replace all non-characters with their spoken counterpart. And fix grammar.", "temperature": 0, "top_p": 1}' message='Post details'
[2022-11-18 00:24:22,249] DEBUG - https://api.openai.com:443 "POST /v1/edits HTTP/1.1" 429 347
[2022-11-18 00:24:22,249] INFO - message='OpenAI API response' path=https://api.openai.com/v1/edits processing_ms=None request_id=fa25972ce889dbd65b8fd735972fde26 response_code=429
[2022-11-18 00:24:22,249] INFO - error_code=None error_message='Rate limit reached for default-text-davinci-edit-001 in organization org-xTzTe98H3pdIt4U4fWax4sr2 on requests per min. Limit: 20.000000 / min. Current: 24.000000 / min. Contact support@openai.com if you continue to have issues.' error_param=None error_type=requests message='OpenAI API error received' stream_error=False
[2022-11-18 00:24:25,261] INFO - message='Request to OpenAI API' method=post path=https://api.openai.com/v1/edits
[2022-11-18 00:24:25,261] DEBUG - api_version=None data='{"model": "text-davinci-edit-001", "input": "There are many different types of security mechanisms, including firewalls, intrusion detection systems, and encryption.", "instruction": "Replace all non-characters with their spoken counterpart. And fix grammar.", "temperature": 0, "top_p": 1}' message='Post details'
[2022-11-18 00:24:25,371] DEBUG - https://api.openai.com:443 "POST /v1/edits HTTP/1.1" 429 347
[2022-11-18 00:24:25,371] INFO - message='OpenAI API response' path=https://api.openai.com/v1/edits processing_ms=None request_id=4c8fbeba705a9e1de1a54bc0262dd60b response_code=429
[2022-11-18 00:24:25,371] INFO - error_code=None error_message='Rate limit reached for default-text-davinci-edit-001 in organization org-xTzTe98H3pdIt4U4fWax4sr2 on requests per min. Limit: 20.000000 / min. Current: 30.000000 / min. Contact support@openai.com if you continue to have issues.' error_param=None error_type=requests message='OpenAI API error received' stream_error=False
[2022-11-18 00:24:28,387] INFO - message='Request to OpenAI API' method=post path=https://api.openai.com/v1/edits
[2022-11-18 00:24:28,387] DEBUG - api_version=None data='{"model": "text-davinci-edit-001", "input": "There are many different types of security mechanisms, including firewalls, intrusion detection systems, and encryption.", "instruction": "Replace all non-characters with their spoken counterpart. And fix grammar.", "temperature": 0, "top_p": 1}' message='Post details'
[2022-11-18 00:24:28,497] DEBUG - https://api.openai.com:443 "POST /v1/edits HTTP/1.1" 429 347
[2022-11-18 00:24:28,498] INFO - message='OpenAI API response' path=https://api.openai.com/v1/edits processing_ms=None request_id=ea7f80421c7ae5468ce86cb92d55851a response_code=429
[2022-11-18 00:24:28,498] INFO - error_code=None error_message='Rate limit reached for default-text-davinci-edit-001 in organization org-xTzTe98H3pdIt4U4fWax4sr2 on requests per min. Limit: 20.000000 / min. Current: 36.000000 / min. Contact support@openai.com if you continue to have issues.' error_param=None error_type=requests message='OpenAI API error received' stream_error=False
[2022-11-18 00:24:31,511] INFO - message='Request to OpenAI API' method=post path=https://api.openai.com/v1/edits
[2022-11-18 00:24:31,511] DEBUG - api_version=None data='{"model": "text-davinci-edit-001", "input": "There are many different types of security mechanisms, including firewalls, intrusion detection systems, and encryption.", "instruction": "Replace all non-characters with their spoken counterpart. And fix grammar.", "temperature": 0, "top_p": 1}' message='Post details'
[2022-11-18 00:24:31,621] DEBUG - https://api.openai.com:443 "POST /v1/edits HTTP/1.1" 429 347
[2022-11-18 00:24:31,622] INFO - message='OpenAI API response' path=https://api.openai.com/v1/edits processing_ms=None request_id=ba28fedc42759c56483b02f720ddf743 response_code=429
[2022-11-18 00:24:31,622] INFO - error_code=None error_message='Rate limit reached for default-text-davinci-edit-001 in organization org-xTzTe98H3pdIt4U4fWax4sr2 on requests per min. Limit: 20.000000 / min. Current: 42.000000 / min. Contact support@openai.com if you continue to have issues.' error_param=None error_type=requests message='OpenAI API error received' stream_error=False
[2022-11-18 00:24:34,642] INFO - message='Request to OpenAI API' method=post path=https://api.openai.com/v1/edits
[2022-11-18 00:24:34,642] DEBUG - api_version=None data='{"model": "text-davinci-edit-001", "input": "There are many different types of security mechanisms, including firewalls, intrusion detection systems, and encryption.", "instruction": "Replace all non-characters with their spoken counterpart. And fix grammar.", "temperature": 0, "top_p": 1}' message='Post details'
[2022-11-18 00:24:42,699] DEBUG - https://api.openai.com:443 "POST /v1/edits HTTP/1.1" 200 1469
[2022-11-18 00:24:42,700] INFO - message='OpenAI API response' path=https://api.openai.com/v1/edits processing_ms=7919 request_id=98210df72209ffd4aa1feb6d59c156e2 response_code=200
[2022-11-18 00:24:42,700] INFO - message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
[2022-11-18 00:24:42,701] DEBUG - api_version=None data='{"model": "text-davinci-002", "prompt": "Expand greatly upon the topic of How Operating Systems Work: A Video Essay in the context of computer science summarised for a 9th grader:\\n\\n1. What is an operating system?\\n\\nAn operating system (OS) is a collection of software that manages the hardware and provides common services for computer programs.\\n\\n2. What are the different types of operating systems?\\n\\nThere are many different types of operating systems, including Windows, Mac OS, Linux, and Android.\\n\\n3. How do operating systems work?\\n\\nOperating systems manage the hardware and software resources of a computer. They allow applications to access these resources in a safe and efficient manner.\\n\\n4. What are the components of an operating system?\\n\\nThe components of an operating system include the kernel, the shell, the file system, and the user interface (UI).\\n\\n5. How do operating systems manage resources?\\n\\nOperating systems use a variety of methods to manage the resources of a computer. They can allocate and deallocate resources, schedule processes, and manage memory.\\n\\n6. What is process management?\\n\\nProcess management is the process by which an operating system manages the running of programs.\\nIt includes creating, scheduling, and terminating processes.\\n\\n7. What is memory management?\\n\\nMemory management is the process by which an operating system manages the memory of a computer, including allocating and deallocating memory, as well as managing memory leaks.\\n\\n8. What is file management?\\n\\nFile management is the process by which an operating system manages the files of a computer, including creating, deleting, and modifying files, and moving files from one directory to another.\\n\\n9. What are the different types of file systems?\\n\\nThere are many different types of file systems, including FAT, NTFS, and ext four.\\n\\n10. What is security in an operating system?\\n\\nOperating system security is the process by which an operating system protects a computer from unauthorized access.\\nIt includes setting permissions, encrypting data, and creating backups.\\nIt is also the process by which an operating system protects itself from being modified by unauthorized users.\\n\\n11. What are the different types of attacks on operating systems?\\n\\nThere are many different types of attacks on operating systems, including viruses, worms, Trojans, and denialofservice attacks.\\n\\n12. What are the different types of security mechanisms?\\n\\nThere are many different types of security mechanisms, including firewalls, intrusion detection systems, and encryption. \\n\\nThe most common security mechanism is a firewall. \\n\\nA firewall is a system that prevents unauthorized access to or from a private network. \\n\\nFirewalls can be implemented in both hardware and software, or a combination of both. \\n\\nFirewalls are frequently used to prevent unauthorized Internet users from accessing private networks connected to the Internet, especially intranets. \\n\\nAll messages entering or leaving the intranet pass through the firewall, which examines each message and blocks those that do not meet the specified security criteria. \\n\\nThere are several types of firewall techniques: \\n\\n* Packet filter: Looks at each packet entering or leaving the network and accepts or rejects it based on userdefined rules. \\n\\n* Application gateway: Applies security mechanisms to specific applications, such as FTP and Telnet servers. \\n\\n* Circuitlevel gateway: Applies security mechanisms when a TCP or UDP connection is established. \\n\\nOnce the connection has been made, packets can flow between the hosts without further checking. \\n\\n* Proxy server: Intercepts all messages entering and leaving the network. \\n\\nThe proxy server effectively hides the true network addresses.\\n\\n13. What is virtualization?\\n\\n", "temperature": 1, "max_tokens": 128, "top_p": 1, "frequency_penalty": 0, "presence_penalty": 0, "n": 1, "stop": ["14.", "13."], "echo": false}' message='Post details'
[2022-11-18 00:24:45,260] DEBUG - https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 418
[2022-11-18 00:24:45,260] INFO - message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=2418 request_id=0f8c90102c7efa94441c4c93342ae019 response_code=200
[2022-11-18 00:24:45,260] INFO - message='Request to OpenAI API' method=post path=https://api.openai.com/v1/edits
[2022-11-18 00:24:45,261] DEBUG - api_version=None data='{"model": "text-davinci-edit-001", "input": "Virtualization is the process by which an operating system creates a virtual version of a computer, including the hardware, software, and file system.", "instruction": "Replace all non-characters with their spoken counterpart. And fix grammar.", "temperature": 0, "top_p": 1}' message='Post details'
[2022-11-18 00:24:45,370] DEBUG - https://api.openai.com:443 "POST /v1/edits HTTP/1.1" 429 347
[2022-11-18 00:24:45,370] INFO - message='OpenAI API response' path=https://api.openai.com/v1/edits processing_ms=None request_id=bc24a38b99220dcba695533706acca4f response_code=429
[2022-11-18 00:24:45,370] INFO - error_code=None error_message='Rate limit reached for default-text-davinci-edit-001 in organization org-xTzTe98H3pdIt4U4fWax4sr2 on requests per min. Limit: 20.000000 / min. Current: 54.000000 / min. Contact support@openai.com if you continue to have issues.' error_param=None error_type=requests message='OpenAI API error received' stream_error=False
[2022-11-18 00:24:48,386] INFO - message='Request to OpenAI API' method=post path=https://api.openai.com/v1/edits
[2022-11-18 00:24:48,386] DEBUG - api_version=None data='{"model": "text-davinci-edit-001", "input": "Virtualization is the process by which an operating system creates a virtual version of a computer, including the hardware, software, and file system.", "instruction": "Replace all non-characters with their spoken counterpart. And fix grammar.", "temperature": 0, "top_p": 1}' message='Post details'
[2022-11-18 00:24:50,595] DEBUG - https://api.openai.com:443 "POST /v1/edits HTTP/1.1" 200 363
[2022-11-18 00:24:50,595] INFO - message='OpenAI API response' path=https://api.openai.com/v1/edits processing_ms=2072 request_id=684be99705ea8c1c57fe7757c16fddc2 response_code=200
[2022-11-18 00:24:50,595] INFO - message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
[2022-11-18 00:24:50,595] DEBUG - api_version=None data='{"model": "text-davinci-002", "prompt": "Expand greatly upon the topic of How Operating Systems Work: A Video Essay in the context of computer science summarised for a 9th grader:\\n\\n1. What is an operating system?\\n\\nAn operating system (OS) is a collection of software that manages the hardware and provides common services for computer programs.\\n\\n2. What are the different types of operating systems?\\n\\nThere are many different types of operating systems, including Windows, Mac OS, Linux, and Android.\\n\\n3. How do operating systems work?\\n\\nOperating systems manage the hardware and software resources of a computer. They allow applications to access these resources in a safe and efficient manner.\\n\\n4. What are the components of an operating system?\\n\\nThe components of an operating system include the kernel, the shell, the file system, and the user interface (UI).\\n\\n5. How do operating systems manage resources?\\n\\nOperating systems use a variety of methods to manage the resources of a computer. They can allocate and deallocate resources, schedule processes, and manage memory.\\n\\n6. What is process management?\\n\\nProcess management is the process by which an operating system manages the running of programs.\\nIt includes creating, scheduling, and terminating processes.\\n\\n7. What is memory management?\\n\\nMemory management is the process by which an operating system manages the memory of a computer, including allocating and deallocating memory, as well as managing memory leaks.\\n\\n8. What is file management?\\n\\nFile management is the process by which an operating system manages the files of a computer, including creating, deleting, and modifying files, and moving files from one directory to another.\\n\\n9. What are the different types of file systems?\\n\\nThere are many different types of file systems, including FAT, NTFS, and ext four.\\n\\n10. What is security in an operating system?\\n\\nOperating system security is the process by which an operating system protects a computer from unauthorized access.\\nIt includes setting permissions, encrypting data, and creating backups.\\nIt is also the process by which an operating system protects itself from being modified by unauthorized users.\\n\\n11. What are the different types of attacks on operating systems?\\n\\nThere are many different types of attacks on operating systems, including viruses, worms, Trojans, and denialofservice attacks.\\n\\n12. What are the different types of security mechanisms?\\n\\nThere are many different types of security mechanisms, including firewalls, intrusion detection systems, and encryption. \\n\\nThe most common security mechanism is a firewall. \\n\\nA firewall is a system that prevents unauthorized access to or from a private network. \\n\\nFirewalls can be implemented in both hardware and software, or a combination of both. \\n\\nFirewalls are frequently used to prevent unauthorized Internet users from accessing private networks connected to the Internet, especially intranets. \\n\\nAll messages entering or leaving the intranet pass through the firewall, which examines each message and blocks those that do not meet the specified security criteria. \\n\\nThere are several types of firewall techniques: \\n\\n* Packet filter: Looks at each packet entering or leaving the network and accepts or rejects it based on userdefined rules. \\n\\n* Application gateway: Applies security mechanisms to specific applications, such as FTP and Telnet servers. \\n\\n* Circuitlevel gateway: Applies security mechanisms when a TCP or UDP connection is established. \\n\\nOnce the connection has been made, packets can flow between the hosts without further checking. \\n\\n* Proxy server: Intercepts all messages entering and leaving the network. \\n\\nThe proxy server effectively hides the true network addresses.\\n\\n13. What is virtualization?\\n\\nVirtualization is the process by which an operating system creates a virtual version of a computer, including the hardware, software, and file system, and allows multiple operating systems to run on the same computer.\\n\\n14. What are the different types of virtualization?\\n\\n", "temperature": 1, "max_tokens": 128, "top_p": 1, "frequency_penalty": 0, "presence_penalty": 0, "n": 1, "stop": ["15.", "14."], "echo": false}' message='Post details'
[2022-11-18 00:24:52,365] DEBUG - https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 404
[2022-11-18 00:24:52,366] INFO - message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1627 request_id=d85dd87ba50fef65fce6fae978c8ee8c response_code=200
[2022-11-18 00:24:52,366] INFO - message='Request to OpenAI API' method=post path=https://api.openai.com/v1/edits
[2022-11-18 00:24:52,366] DEBUG - api_version=None data='{"model": "text-davinci-edit-001", "input": "There are many different types of virtualization, including full virtualization, paravirtualization, and container-based virtualization.", "instruction": "Replace all non-characters with their spoken counterpart. And fix grammar.", "temperature": 0, "top_p": 1}' message='Post details'
[2022-11-18 00:24:53,973] DEBUG - https://api.openai.com:443 "POST /v1/edits HTTP/1.1" 200 283
[2022-11-18 00:24:53,974] INFO - message='OpenAI API response' path=https://api.openai.com/v1/edits processing_ms=1467 request_id=ddd676812540c18ca850652f2f99c78b response_code=200
[2022-11-18 00:24:53,974] INFO - message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
[2022-11-18 00:24:53,974] DEBUG - api_version=None data='{"model": "text-davinci-002", "prompt": "Expand greatly upon the topic of How Operating Systems Work: A Video Essay in the context of computer science summarised for a 9th grader:\\n\\n1. What is an operating system?\\n\\nAn operating system (OS) is a collection of software that manages the hardware and provides common services for computer programs.\\n\\n2. What are the different types of operating systems?\\n\\nThere are many different types of operating systems, including Windows, Mac OS, Linux, and Android.\\n\\n3. How do operating systems work?\\n\\nOperating systems manage the hardware and software resources of a computer. They allow applications to access these resources in a safe and efficient manner.\\n\\n4. What are the components of an operating system?\\n\\nThe components of an operating system include the kernel, the shell, the file system, and the user interface (UI).\\n\\n5. How do operating systems manage resources?\\n\\nOperating systems use a variety of methods to manage the resources of a computer. They can allocate and deallocate resources, schedule processes, and manage memory.\\n\\n6. What is process management?\\n\\nProcess management is the process by which an operating system manages the running of programs.\\nIt includes creating, scheduling, and terminating processes.\\n\\n7. What is memory management?\\n\\nMemory management is the process by which an operating system manages the memory of a computer, including allocating and deallocating memory, as well as managing memory leaks.\\n\\n8. What is file management?\\n\\nFile management is the process by which an operating system manages the files of a computer, including creating, deleting, and modifying files, and moving files from one directory to another.\\n\\n9. What are the different types of file systems?\\n\\nThere are many different types of file systems, including FAT, NTFS, and ext four.\\n\\n10. What is security in an operating system?\\n\\nOperating system security is the process by which an operating system protects a computer from unauthorized access.\\nIt includes setting permissions, encrypting data, and creating backups.\\nIt is also the process by which an operating system protects itself from being modified by unauthorized users.\\n\\n11. What are the different types of attacks on operating systems?\\n\\nThere are many different types of attacks on operating systems, including viruses, worms, Trojans, and denialofservice attacks.\\n\\n12. What are the different types of security mechanisms?\\n\\nThere are many different types of security mechanisms, including firewalls, intrusion detection systems, and encryption. \\n\\nThe most common security mechanism is a firewall. \\n\\nA firewall is a system that prevents unauthorized access to or from a private network. \\n\\nFirewalls can be implemented in both hardware and software, or a combination of both. \\n\\nFirewalls are frequently used to prevent unauthorized Internet users from accessing private networks connected to the Internet, especially intranets. \\n\\nAll messages entering or leaving the intranet pass through the firewall, which examines each message and blocks those that do not meet the specified security criteria. \\n\\nThere are several types of firewall techniques: \\n\\n* Packet filter: Looks at each packet entering or leaving the network and accepts or rejects it based on userdefined rules. \\n\\n* Application gateway: Applies security mechanisms to specific applications, such as FTP and Telnet servers. \\n\\n* Circuitlevel gateway: Applies security mechanisms when a TCP or UDP connection is established. \\n\\nOnce the connection has been made, packets can flow between the hosts without further checking. \\n\\n* Proxy server: Intercepts all messages entering and leaving the network. \\n\\nThe proxy server effectively hides the true network addresses.\\n\\n13. What is virtualization?\\n\\nVirtualization is the process by which an operating system creates a virtual version of a computer, including the hardware, software, and file system, and allows multiple operating systems to run on the same computer.\\n\\n14. What are the different types of virtualization?\\n\\nThere are many different types of virtualization, including full virtualization, para virtualization, and containerbased virtualization.\\n\\n15. How do operating systems support virtualization?\\n\\n", "temperature": 1, "max_tokens": 128, "top_p": 1, "frequency_penalty": 0, "presence_penalty": 0, "n": 1, "stop": ["16.", "15."], "echo": false}' message='Post details'
[2022-11-18 00:24:56,892] DEBUG - https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 635
[2022-11-18 00:24:56,892] INFO - message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=2676 request_id=1ce9a7778651d2f4623d61e4365fc606 response_code=200
[2022-11-18 00:24:56,892] INFO - message='Request to OpenAI API' method=post path=https://api.openai.com/v1/edits
[2022-11-18 00:24:56,892] DEBUG - api_version=None data='{"model": "text-davinci-edit-001", "input": "Operating systems support virtualization by creating a virtual machine (VM) on which multiple operating systems can run. \\n\\nThe hypervisor is the software that manages the VMs, and each VM is isolated from the others, meaning that one VM cannot access the resources of another VM. \\n\\nOperating systems that support virtualization include Linux, Windows, and Mac OS.", "instruction": "Replace all non-characters with their spoken counterpart. And fix grammar.", "temperature": 0, "top_p": 1}' message='Post details'
[2022-11-18 00:24:57,002] DEBUG - https://api.openai.com:443 "POST /v1/edits HTTP/1.1" 429 347
[2022-11-18 00:24:57,002] INFO - message='OpenAI API response' path=https://api.openai.com/v1/edits processing_ms=None request_id=cb62cf26df3ddf53f6a831fc77354cc1 response_code=429
[2022-11-18 00:24:57,002] INFO - error_code=None error_message='Rate limit reached for default-text-davinci-edit-001 in organization org-xTzTe98H3pdIt4U4fWax4sr2 on requests per min. Limit: 20.000000 / min. Current: 30.000000 / min. Contact support@openai.com if you continue to have issues.' error_param=None error_type=requests message='OpenAI API error received' stream_error=False
[2022-11-18 00:25:00,012] INFO - message='Request to OpenAI API' method=post path=https://api.openai.com/v1/edits
[2022-11-18 00:25:00,012] DEBUG - api_version=None data='{"model": "text-davinci-edit-001", "input": "Operating systems support virtualization by creating a virtual machine (VM) on which multiple operating systems can run. \\n\\nThe hypervisor is the software that manages the VMs, and each VM is isolated from the others, meaning that one VM cannot access the resources of another VM. \\n\\nOperating systems that support virtualization include Linux, Windows, and Mac OS.", "instruction": "Replace all non-characters with their spoken counterpart. And fix grammar.", "temperature": 0, "top_p": 1}' message='Post details'
[2022-11-18 00:25:03,230] DEBUG - https://api.openai.com:443 "POST /v1/edits HTTP/1.1" 200 517
[2022-11-18 00:25:03,230] INFO - message='OpenAI API response' path=https://api.openai.com/v1/edits processing_ms=3079 request_id=d6e0ae422ef6cadbc7a5faf8614166e7 response_code=200
[2022-11-18 00:25:03,232] INFO - message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
[2022-11-18 00:25:03,232] DEBUG - api_version=None data='{"model": "text-davinci-002", "prompt": "Expand greatly upon the topic of How Operating Systems Work: A Video Essay in the context of computer science summarised for a 9th grader:\\n\\n1. What is an operating system?\\n\\nAn operating system (OS) is a collection of software that manages the hardware and provides common services for computer programs.\\n\\n2. What are the different types of operating systems?\\n\\nThere are many different types of operating systems, including Windows, Mac OS, Linux, and Android.\\n\\n3. How do operating systems work?\\n\\nOperating systems manage the hardware and software resources of a computer. They allow applications to access these resources in a safe and efficient manner.\\n\\n4. What are the components of an operating system?\\n\\nThe components of an operating system include the kernel, the shell, the file system, and the user interface (UI).\\n\\n5. How do operating systems manage resources?\\n\\nOperating systems use a variety of methods to manage the resources of a computer. They can allocate and deallocate resources, schedule processes, and manage memory.\\n\\n6. What is process management?\\n\\nProcess management is the process by which an operating system manages the running of programs.\\nIt includes creating, scheduling, and terminating processes.\\n\\n7. What is memory management?\\n\\nMemory management is the process by which an operating system manages the memory of a computer, including allocating and deallocating memory, as well as managing memory leaks.\\n\\n8. What is file management?\\n\\nFile management is the process by which an operating system manages the files of a computer, including creating, deleting, and modifying files, and moving files from one directory to another.\\n\\n9. What are the different types of file systems?\\n\\nThere are many different types of file systems, including FAT, NTFS, and ext four.\\n\\n10. What is security in an operating system?\\n\\nOperating system security is the process by which an operating system protects a computer from unauthorized access.\\nIt includes setting permissions, encrypting data, and creating backups.\\nIt is also the process by which an operating system protects itself from being modified by unauthorized users.\\n\\n11. What are the different types of attacks on operating systems?\\n\\nThere are many different types of attacks on operating systems, including viruses, worms, Trojans, and denialofservice attacks.\\n\\n12. What are the different types of security mechanisms?\\n\\nThere are many different types of security mechanisms, including firewalls, intrusion detection systems, and encryption. \\n\\nThe most common security mechanism is a firewall. \\n\\nA firewall is a system that prevents unauthorized access to or from a private network. \\n\\nFirewalls can be implemented in both hardware and software, or a combination of both. \\n\\nFirewalls are frequently used to prevent unauthorized Internet users from accessing private networks connected to the Internet, especially intranets. \\n\\nAll messages entering or leaving the intranet pass through the firewall, which examines each message and blocks those that do not meet the specified security criteria. \\n\\nThere are several types of firewall techniques: \\n\\n* Packet filter: Looks at each packet entering or leaving the network and accepts or rejects it based on userdefined rules. \\n\\n* Application gateway: Applies security mechanisms to specific applications, such as FTP and Telnet servers. \\n\\n* Circuitlevel gateway: Applies security mechanisms when a TCP or UDP connection is established. \\n\\nOnce the connection has been made, packets can flow between the hosts without further checking. \\n\\n* Proxy server: Intercepts all messages entering and leaving the network. \\n\\nThe proxy server effectively hides the true network addresses.\\n\\n13. What is virtualization?\\n\\nVirtualization is the process by which an operating system creates a virtual version of a computer, including the hardware, software, and file system, and allows multiple operating systems to run on the same computer.\\n\\n14. What are the different types of virtualization?\\n\\nThere are many different types of virtualization, including full virtualization, para virtualization, and containerbased virtualization.\\n\\n15. How do operating systems support virtualization?\\n\\nOperating systems support virtualization by creating a virtual machine, or VM, on which multiple operating systems can run. \\n\\nThe hypervisor is the software that manages the VMs, and each VM is isolated from the others, meaning that one VM cannot access the resources of another VM.\\n\\nOperating systems that support virtualization include Linux, Windows, and Mac OS.\\n\\n16. What is a distributed operating system?\\n\\n", "temperature": 1, "max_tokens": 128, "top_p": 1, "frequency_penalty": 0, "presence_penalty": 0, "n": 1, "stop": ["17.", "16."], "echo": false}' message='Post details'
[2022-11-18 00:25:08,203] DEBUG - https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 717
[2022-11-18 00:25:08,204] INFO - message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=4831 request_id=e72ac8cfe1866b1fb811cf7ee2a9322a response_code=200
[2022-11-18 00:25:08,204] INFO - message='Request to OpenAI API' method=post path=https://api.openai.com/v1/edits
[2022-11-18 00:25:08,204] DEBUG - api_version=None data='{"model": "text-davinci-edit-001", "input": "A distributed operating system is an operating system that runs on multiple computers. \\n\\nIt is designed to provide a shared file system, so that users can access files from any computer on the network. \\n\\nIt is also designed to provide a distributed computing environment, so that users can run applications on any computer on the network. \\n\\nOperating systems that support distributed computing include Windows HPC Server, Linux, and Mac OS X.", "instruction": "Replace all non-characters with their spoken counterpart. And fix grammar.", "temperature": 0, "top_p": 1}' message='Post details'
[2022-11-18 00:25:08,313] DEBUG - https://api.openai.com:443 "POST /v1/edits HTTP/1.1" 429 347
[2022-11-18 00:25:08,313] INFO - message='OpenAI API response' path=https://api.openai.com/v1/edits processing_ms=None request_id=88a69b847d5c6507acd2f16db48e1fb1 response_code=429
[2022-11-18 00:25:08,313] INFO - error_code=None error_message='Rate limit reached for default-text-davinci-edit-001 in organization org-xTzTe98H3pdIt4U4fWax4sr2 on requests per min. Limit: 20.000000 / min. Current: 24.000000 / min. Contact support@openai.com if you continue to have issues.' error_param=None error_type=requests message='OpenAI API error received' stream_error=False
[2022-11-18 00:25:11,330] INFO - message='Request to OpenAI API' method=post path=https://api.openai.com/v1/edits
[2022-11-18 00:25:11,330] DEBUG - api_version=None data='{"model": "text-davinci-edit-001", "input": "A distributed operating system is an operating system that runs on multiple computers. \\n\\nIt is designed to provide a shared file system, so that users can access files from any computer on the network. \\n\\nIt is also designed to provide a distributed computing environment, so that users can run applications on any computer on the network. \\n\\nOperating systems that support distributed computing include Windows HPC Server, Linux, and Mac OS X.", "instruction": "Replace all non-characters with their spoken counterpart. And fix grammar.", "temperature": 0, "top_p": 1}' message='Post details'
[2022-11-18 00:25:17,713] DEBUG - https://api.openai.com:443 "POST /v1/edits HTTP/1.1" 200 723
[2022-11-18 00:25:17,715] INFO - message='OpenAI API response' path=https://api.openai.com/v1/edits processing_ms=6235 request_id=9fcebcbefa53bbacbc6c150e68bed969 response_code=200
[2022-11-18 00:25:17,716] INFO - message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
[2022-11-18 00:25:17,716] DEBUG - api_version=None data='{"model": "text-davinci-002", "prompt": "Expand greatly upon the topic of How Operating Systems Work: A Video Essay in the context of computer science summarised for a 9th grader:\\n\\n1. What is an operating system?\\n\\nAn operating system (OS) is a collection of software that manages the hardware and provides common services for computer programs.\\n\\n2. What are the different types of operating systems?\\n\\nThere are many different types of operating systems, including Windows, Mac OS, Linux, and Android.\\n\\n3. How do operating systems work?\\n\\nOperating systems manage the hardware and software resources of a computer. They allow applications to access these resources in a safe and efficient manner.\\n\\n4. What are the components of an operating system?\\n\\nThe components of an operating system include the kernel, the shell, the file system, and the user interface (UI).\\n\\n5. How do operating systems manage resources?\\n\\nOperating systems use a variety of methods to manage the resources of a computer. They can allocate and deallocate resources, schedule processes, and manage memory.\\n\\n6. What is process management?\\n\\nProcess management is the process by which an operating system manages the running of programs.\\nIt includes creating, scheduling, and terminating processes.\\n\\n7. What is memory management?\\n\\nMemory management is the process by which an operating system manages the memory of a computer, including allocating and deallocating memory, as well as managing memory leaks.\\n\\n8. What is file management?\\n\\nFile management is the process by which an operating system manages the files of a computer, including creating, deleting, and modifying files, and moving files from one directory to another.\\n\\n9. What are the different types of file systems?\\n\\nThere are many different types of file systems, including FAT, NTFS, and ext four.\\n\\n10. What is security in an operating system?\\n\\nOperating system security is the process by which an operating system protects a computer from unauthorized access.\\nIt includes setting permissions, encrypting data, and creating backups.\\nIt is also the process by which an operating system protects itself from being modified by unauthorized users.\\n\\n11. What are the different types of attacks on operating systems?\\n\\nThere are many different types of attacks on operating systems, including viruses, worms, Trojans, and denialofservice attacks.\\n\\n12. What are the different types of security mechanisms?\\n\\nThere are many different types of security mechanisms, including firewalls, intrusion detection systems, and encryption. \\n\\nThe most common security mechanism is a firewall. \\n\\nA firewall is a system that prevents unauthorized access to or from a private network. \\n\\nFirewalls can be implemented in both hardware and software, or a combination of both. \\n\\nFirewalls are frequently used to prevent unauthorized Internet users from accessing private networks connected to the Internet, especially intranets. \\n\\nAll messages entering or leaving the intranet pass through the firewall, which examines each message and blocks those that do not meet the specified security criteria. \\n\\nThere are several types of firewall techniques: \\n\\n* Packet filter: Looks at each packet entering or leaving the network and accepts or rejects it based on userdefined rules. \\n\\n* Application gateway: Applies security mechanisms to specific applications, such as FTP and Telnet servers. \\n\\n* Circuitlevel gateway: Applies security mechanisms when a TCP or UDP connection is established. \\n\\nOnce the connection has been made, packets can flow between the hosts without further checking. \\n\\n* Proxy server: Intercepts all messages entering and leaving the network. \\n\\nThe proxy server effectively hides the true network addresses.\\n\\n13. What is virtualization?\\n\\nVirtualization is the process by which an operating system creates a virtual version of a computer, including the hardware, software, and file system, and allows multiple operating systems to run on the same computer.\\n\\n14. What are the different types of virtualization?\\n\\nThere are many different types of virtualization, including full virtualization, para virtualization, and containerbased virtualization.\\n\\n15. How do operating systems support virtualization?\\n\\nOperating systems support virtualization by creating a virtual machine, or VM, on which multiple operating systems can run. \\n\\nThe hypervisor is the software that manages the VMs, and each VM is isolated from the others, meaning that one VM cannot access the resources of another VM.\\n\\nOperating systems that support virtualization include Linux, Windows, and Mac OS.\\n\\n16. What is a distributed operating system?\\n\\nA distributed operating system is an operating system that runs on multiple computers.\\n\\nIt is designed to provide a shared file system, so that users can access files from any computer on the network.\\n\\nIt is also designed to provide a distributed computing environment, so that users can run applications on any computer on the network.\\n\\nOperating systems that support distributed computing include Windows HPC Server, Linux, and Mac OS X. \\n\\nThe term distributed operating system is sometimes used to refer to a cluster of computers running a single operating system.\\n\\n17. What are the characteristics of a distributed operating system?\\n\\n", "temperature": 1, "max_tokens": 128, "top_p": 1, "frequency_penalty": 0, "presence_penalty": 0, "n": 1, "stop": ["18.", "17."], "echo": false}' message='Post details'
[2022-11-18 00:25:19,976] DEBUG - https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 425
[2022-11-18 00:25:19,976] INFO - message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=2119 request_id=65515a793803acb0d15e9aed17501b9a response_code=200
[2022-11-18 00:25:19,976] INFO - message='Request to OpenAI API' method=post path=https://api.openai.com/v1/edits
[2022-11-18 00:25:19,977] DEBUG - api_version=None data='{"model": "text-davinci-edit-001", "input": "There are many characteristics of a distributed operating system, but some of the most important include scalability, transparency, openness, and security.", "instruction": "Replace all non-characters with their spoken counterpart. And fix grammar.", "temperature": 0, "top_p": 1}' message='Post details'
[2022-11-18 00:25:20,094] DEBUG - https://api.openai.com:443 "POST /v1/edits HTTP/1.1" 429 347
[2022-11-18 00:25:20,094] INFO - message='OpenAI API response' path=https://api.openai.com/v1/edits processing_ms=None request_id=f249f5efdaaefd94c76e7f090b04b38f response_code=429
[2022-11-18 00:25:20,094] INFO - error_code=None error_message='Rate limit reached for default-text-davinci-edit-001 in organization org-xTzTe98H3pdIt4U4fWax4sr2 on requests per min. Limit: 20.000000 / min. Current: 24.000000 / min. Contact support@openai.com if you continue to have issues.' error_param=None error_type=requests message='OpenAI API error received' stream_error=False
[2022-11-18 00:25:23,111] INFO - message='Request to OpenAI API' method=post path=https://api.openai.com/v1/edits
[2022-11-18 00:25:23,111] DEBUG - api_version=None data='{"model": "text-davinci-edit-001", "input": "There are many characteristics of a distributed operating system, but some of the most important include scalability, transparency, openness, and security.", "instruction": "Replace all non-characters with their spoken counterpart. And fix grammar.", "temperature": 0, "top_p": 1}' message='Post details'
[2022-11-18 00:25:23,222] DEBUG - https://api.openai.com:443 "POST /v1/edits HTTP/1.1" 429 347
[2022-11-18 00:25:23,222] INFO - message='OpenAI API response' path=https://api.openai.com/v1/edits processing_ms=None request_id=a154bd9d06266472bba847e6c6a37203 response_code=429
[2022-11-18 00:25:23,222] INFO - error_code=None error_message='Rate limit reached for default-text-davinci-edit-001 in organization org-xTzTe98H3pdIt4U4fWax4sr2 on requests per min. Limit: 20.000000 / min. Current: 24.000000 / min. Contact support@openai.com if you continue to have issues.' error_param=None error_type=requests message='OpenAI API error received' stream_error=False
[2022-11-18 00:25:26,227] INFO - message='Request to OpenAI API' method=post path=https://api.openai.com/v1/edits
[2022-11-18 00:25:26,227] DEBUG - api_version=None data='{"model": "text-davinci-edit-001", "input": "There are many characteristics of a distributed operating system, but some of the most important include scalability, transparency, openness, and security.", "instruction": "Replace all non-characters with their spoken counterpart. And fix grammar.", "temperature": 0, "top_p": 1}' message='Post details'
[2022-11-18 00:25:26,337] DEBUG - https://api.openai.com:443 "POST /v1/edits HTTP/1.1" 429 347
[2022-11-18 00:25:26,338] INFO - message='OpenAI API response' path=https://api.openai.com/v1/edits processing_ms=None request_id=cfdc28b9ad9b7bdeb5f0fa0984863fa0 response_code=429
[2022-11-18 00:25:26,338] INFO - error_code=None error_message='Rate limit reached for default-text-davinci-edit-001 in organization org-xTzTe98H3pdIt4U4fWax4sr2 on requests per min. Limit: 20.000000 / min. Current: 24.000000 / min. Contact support@openai.com if you continue to have issues.' error_param=None error_type=requests message='OpenAI API error received' stream_error=False
[2022-11-18 00:25:29,355] INFO - message='Request to OpenAI API' method=post path=https://api.openai.com/v1/edits
[2022-11-18 00:25:29,355] DEBUG - api_version=None data='{"model": "text-davinci-edit-001", "input": "There are many characteristics of a distributed operating system, but some of the most important include scalability, transparency, openness, and security.", "instruction": "Replace all non-characters with their spoken counterpart. And fix grammar.", "temperature": 0, "top_p": 1}' message='Post details'
[2022-11-18 00:25:29,466] DEBUG - https://api.openai.com:443 "POST /v1/edits HTTP/1.1" 429 347
[2022-11-18 00:25:29,467] INFO - message='OpenAI API response' path=https://api.openai.com/v1/edits processing_ms=None request_id=bcebb1f376115c84d9003fc8c2d8f34d response_code=429
[2022-11-18 00:25:29,467] INFO - error_code=None error_message='Rate limit reached for default-text-davinci-edit-001 in organization org-xTzTe98H3pdIt4U4fWax4sr2 on requests per min. Limit: 20.000000 / min. Current: 24.000000 / min. Contact support@openai.com if you continue to have issues.' error_param=None error_type=requests message='OpenAI API error received' stream_error=False
[2022-11-18 00:25:32,485] INFO - message='Request to OpenAI API' method=post path=https://api.openai.com/v1/edits
[2022-11-18 00:25:32,485] DEBUG - api_version=None data='{"model": "text-davinci-edit-001", "input": "There are many characteristics of a distributed operating system, but some of the most important include scalability, transparency, openness, and security.", "instruction": "Replace all non-characters with their spoken counterpart. And fix grammar.", "temperature": 0, "top_p": 1}' message='Post details'
[2022-11-18 00:25:32,596] DEBUG - https://api.openai.com:443 "POST /v1/edits HTTP/1.1" 429 347
[2022-11-18 00:25:32,596] INFO - message='OpenAI API response' path=https://api.openai.com/v1/edits processing_ms=None request_id=de7ab1d4f111b60262b278e7f42ffca1 response_code=429
[2022-11-18 00:25:32,597] INFO - error_code=None error_message='Rate limit reached for default-text-davinci-edit-001 in organization org-xTzTe98H3pdIt4U4fWax4sr2 on requests per min. Limit: 20.000000 / min. Current: 30.000000 / min. Contact support@openai.com if you continue to have issues.' error_param=None error_type=requests message='OpenAI API error received' stream_error=False
[2022-11-18 00:25:35,610] INFO - message='Request to OpenAI API' method=post path=https://api.openai.com/v1/edits
[2022-11-18 00:25:35,610] DEBUG - api_version=None data='{"model": "text-davinci-edit-001", "input": "There are many characteristics of a distributed operating system, but some of the most important include scalability, transparency, openness, and security.", "instruction": "Replace all non-characters with their spoken counterpart. And fix grammar.", "temperature": 0, "top_p": 1}' message='Post details'
[2022-11-18 00:25:35,852] DEBUG - https://api.openai.com:443 "POST /v1/edits HTTP/1.1" 429 347
[2022-11-18 00:25:35,852] INFO - message='OpenAI API response' path=https://api.openai.com/v1/edits processing_ms=None request_id=0cd71ee24ef3936ca6e5f45f3008552e response_code=429
[2022-11-18 00:25:35,852] INFO - error_code=None error_message='Rate limit reached for default-text-davinci-edit-001 in organization org-xTzTe98H3pdIt4U4fWax4sr2 on requests per min. Limit: 20.000000 / min. Current: 30.000000 / min. Contact support@openai.com if you continue to have issues.' error_param=None error_type=requests message='OpenAI API error received' stream_error=False
[2022-11-18 00:25:38,865] INFO - message='Request to OpenAI API' method=post path=https://api.openai.com/v1/edits
[2022-11-18 00:25:38,865] DEBUG - api_version=None data='{"model": "text-davinci-edit-001", "input": "There are many characteristics of a distributed operating system, but some of the most important include scalability, transparency, openness, and security.", "instruction": "Replace all non-characters with their spoken counterpart. And fix grammar.", "temperature": 0, "top_p": 1}' message='Post details'
[2022-11-18 00:25:38,975] DEBUG - https://api.openai.com:443 "POST /v1/edits HTTP/1.1" 429 347
[2022-11-18 00:25:38,975] INFO - message='OpenAI API response' path=https://api.openai.com/v1/edits processing_ms=None request_id=330044ea06b300f934fb24fa90759da8 response_code=429
[2022-11-18 00:25:38,975] INFO - error_code=None error_message='Rate limit reached for default-text-davinci-edit-001 in organization org-xTzTe98H3pdIt4U4fWax4sr2 on requests per min. Limit: 20.000000 / min. Current: 30.000000 / min. Contact support@openai.com if you continue to have issues.' error_param=None error_type=requests message='OpenAI API error received' stream_error=False
[2022-11-18 00:25:41,994] INFO - message='Request to OpenAI API' method=post path=https://api.openai.com/v1/edits
[2022-11-18 00:25:41,994] DEBUG - api_version=None data='{"model": "text-davinci-edit-001", "input": "There are many characteristics of a distributed operating system, but some of the most important include scalability, transparency, openness, and security.", "instruction": "Replace all non-characters with their spoken counterpart. And fix grammar.", "temperature": 0, "top_p": 1}' message='Post details'
[2022-11-18 00:25:43,909] DEBUG - https://api.openai.com:443 "POST /v1/edits HTTP/1.1" 200 302
[2022-11-18 00:25:43,909] INFO - message='OpenAI API response' path=https://api.openai.com/v1/edits processing_ms=1774 request_id=79d3817221f573653dcce77f5e3c1b89 response_code=200
[2022-11-18 00:25:43,910] INFO - message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
[2022-11-18 00:25:43,910] DEBUG - api_version=None data='{"model": "text-davinci-002", "prompt": "Expand greatly upon the topic of How Operating Systems Work: A Video Essay in the context of computer science summarised for a 9th grader:\\n\\n1. What is an operating system?\\n\\nAn operating system (OS) is a collection of software that manages the hardware and provides common services for computer programs.\\n\\n2. What are the different types of operating systems?\\n\\nThere are many different types of operating systems, including Windows, Mac OS, Linux, and Android.\\n\\n3. How do operating systems work?\\n\\nOperating systems manage the hardware and software resources of a computer. They allow applications to access these resources in a safe and efficient manner.\\n\\n4. What are the components of an operating system?\\n\\nThe components of an operating system include the kernel, the shell, the file system, and the user interface (UI).\\n\\n5. How do operating systems manage resources?\\n\\nOperating systems use a variety of methods to manage the resources of a computer. They can allocate and deallocate resources, schedule processes, and manage memory.\\n\\n6. What is process management?\\n\\nProcess management is the process by which an operating system manages the running of programs.\\nIt includes creating, scheduling, and terminating processes.\\n\\n7. What is memory management?\\n\\nMemory management is the process by which an operating system manages the memory of a computer, including allocating and deallocating memory, as well as managing memory leaks.\\n\\n8. What is file management?\\n\\nFile management is the process by which an operating system manages the files of a computer, including creating, deleting, and modifying files, and moving files from one directory to another.\\n\\n9. What are the different types of file systems?\\n\\nThere are many different types of file systems, including FAT, NTFS, and ext four.\\n\\n10. What is security in an operating system?\\n\\nOperating system security is the process by which an operating system protects a computer from unauthorized access.\\nIt includes setting permissions, encrypting data, and creating backups.\\nIt is also the process by which an operating system protects itself from being modified by unauthorized users.\\n\\n11. What are the different types of attacks on operating systems?\\n\\nThere are many different types of attacks on operating systems, including viruses, worms, Trojans, and denialofservice attacks.\\n\\n12. What are the different types of security mechanisms?\\n\\nThere are many different types of security mechanisms, including firewalls, intrusion detection systems, and encryption. \\n\\nThe most common security mechanism is a firewall. \\n\\nA firewall is a system that prevents unauthorized access to or from a private network. \\n\\nFirewalls can be implemented in both hardware and software, or a combination of both. \\n\\nFirewalls are frequently used to prevent unauthorized Internet users from accessing private networks connected to the Internet, especially intranets. \\n\\nAll messages entering or leaving the intranet pass through the firewall, which examines each message and blocks those that do not meet the specified security criteria. \\n\\nThere are several types of firewall techniques: \\n\\n* Packet filter: Looks at each packet entering or leaving the network and accepts or rejects it based on userdefined rules. \\n\\n* Application gateway: Applies security mechanisms to specific applications, such as FTP and Telnet servers. \\n\\n* Circuitlevel gateway: Applies security mechanisms when a TCP or UDP connection is established. \\n\\nOnce the connection has been made, packets can flow between the hosts without further checking. \\n\\n* Proxy server: Intercepts all messages entering and leaving the network. \\n\\nThe proxy server effectively hides the true network addresses.\\n\\n13. What is virtualization?\\n\\nVirtualization is the process by which an operating system creates a virtual version of a computer, including the hardware, software, and file system, and allows multiple operating systems to run on the same computer.\\n\\n14. What are the different types of virtualization?\\n\\nThere are many different types of virtualization, including full virtualization, para virtualization, and containerbased virtualization.\\n\\n15. How do operating systems support virtualization?\\n\\nOperating systems support virtualization by creating a virtual machine, or VM, on which multiple operating systems can run. \\n\\nThe hypervisor is the software that manages the VMs, and each VM is isolated from the others, meaning that one VM cannot access the resources of another VM.\\n\\nOperating systems that support virtualization include Linux, Windows, and Mac OS.\\n\\n16. What is a distributed operating system?\\n\\nA distributed operating system is an operating system that runs on multiple computers.\\n\\nIt is designed to provide a shared file system, so that users can access files from any computer on the network.\\n\\nIt is also designed to provide a distributed computing environment, so that users can run applications on any computer on the network.\\n\\nOperating systems that support distributed computing include Windows HPC Server, Linux, and Mac OS X. \\n\\nThe term distributed operating system is sometimes used to refer to a cluster of computers running a single operating system.\\n\\n17. What are the characteristics of a distributed operating system?\\n\\nThere are many characteristics of a distributed operating system, but some of the most important include scalability, transparency, openness, and security.\\n\\n18. How do distributed operating systems work?\\n\\n", "temperature": 1, "max_tokens": 128, "top_p": 1, "frequency_penalty": 0, "presence_penalty": 0, "n": 1, "stop": ["19.", "18."], "echo": false}' message='Post details'
[2022-11-18 00:25:46,940] DEBUG - https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 619
[2022-11-18 00:25:46,940] INFO - message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=2889 request_id=1d3572486a8a9e728861c5d0d8e7d584 response_code=200
[2022-11-18 00:25:46,940] INFO - message='Request to OpenAI API' method=post path=https://api.openai.com/v1/edits
[2022-11-18 00:25:46,940] DEBUG - api_version=None data='{"model": "text-davinci-edit-001", "input": "Distributed operating systems work by distributing the various components of the operating system, such as the file system, over a network of computers. \\n\\nEach computer has a copy of the file system, and the distributed operating system coordinates access to the files so that users can transparently access files from any computer on the network.", "instruction": "Replace all non-characters with their spoken counterpart. And fix grammar.", "temperature": 0, "top_p": 1}' message='Post details'
[2022-11-18 00:25:50,928] DEBUG - https://api.openai.com:443 "POST /v1/edits HTTP/1.1" 200 496
[2022-11-18 00:25:50,928] INFO - message='OpenAI API response' path=https://api.openai.com/v1/edits processing_ms=3847 request_id=8f0709bc8683fdcbfcb15bb50132883c response_code=200
[2022-11-18 00:25:50,929] DEBUG - Starting new HTTPS connection (1): www.googleapis.com:443
[2022-11-18 00:25:51,080] DEBUG - https://www.googleapis.com:443 "GET /youtube/v3/playlists?part=id&id=UC_x5XG1OV2P6uZZ5FSM9Ttw&key=AIzaSyDfv2ISoNjVh2oX2JRJUQ1loS-voHH3GlI&maxResults=2 HTTP/1.1" 200 None
[2022-11-18 00:25:51,083] DEBUG - Starting new HTTPS connection (1): www.googleapis.com:443
[2022-11-18 00:25:51,697] DEBUG - https://www.googleapis.com:443 "GET /youtube/v3/search?part=snippet&type=video&maxResults=50&order=relevance&key=AIzaSyDfv2ISoNjVh2oX2JRJUQ1loS-voHH3GlI&q=How%20Operating%20Systems%20Work:%20A%20Video%20Essay&publishedAfter=2000-01-01T00:00:00Z&publishedBefore=3000-01-01T00:00:00Z HTTP/1.1" 200 None
[2022-11-18 00:25:51,701] DEBUG - Starting new HTTPS connection (1): www.googleapis.com:443
[2022-11-18 00:25:51,766] DEBUG - https://www.googleapis.com:443 "GET /youtube/v3/videos?key=AIzaSyDfv2ISoNjVh2oX2JRJUQ1loS-voHH3GlI&fields=items(snippet(description,tags))&part=snippet&id=WSP4Y7M0bSo HTTP/1.1" 200 None
[2022-11-18 00:25:51,768] DEBUG - Starting new HTTPS connection (1): www.googleapis.com:443
[2022-11-18 00:25:51,816] DEBUG - https://www.googleapis.com:443 "GET /youtube/v3/videos?key=AIzaSyDfv2ISoNjVh2oX2JRJUQ1loS-voHH3GlI&fields=items(snippet(description,tags))&part=snippet&id=TLkMu4mzspc HTTP/1.1" 200 None
[2022-11-18 00:25:51,818] DEBUG - Starting new HTTPS connection (1): www.googleapis.com:443
[2022-11-18 00:25:51,871] DEBUG - https://www.googleapis.com:443 "GET /youtube/v3/videos?key=AIzaSyDfv2ISoNjVh2oX2JRJUQ1loS-voHH3GlI&fields=items(snippet(description,tags))&part=snippet&id=1a-unovCUOw HTTP/1.1" 200 None
[2022-11-18 00:25:51,873] DEBUG - Starting new HTTPS connection (1): www.googleapis.com:443
[2022-11-18 00:25:51,941] DEBUG - https://www.googleapis.com:443 "GET /youtube/v3/videos?key=AIzaSyDfv2ISoNjVh2oX2JRJUQ1loS-voHH3GlI&fields=items(snippet(description,tags))&part=snippet&id=FmhEr7ae3Us HTTP/1.1" 200 None
[2022-11-18 00:25:51,943] DEBUG - Starting new HTTPS connection (1): www.googleapis.com:443
[2022-11-18 00:25:52,008] DEBUG - https://www.googleapis.com:443 "GET /youtube/v3/videos?key=AIzaSyDfv2ISoNjVh2oX2JRJUQ1loS-voHH3GlI&fields=items(snippet(description,tags))&part=snippet&id=K1o1vTSJKrs HTTP/1.1" 200 None
[2022-11-18 00:25:52,011] DEBUG - Starting new HTTPS connection (1): www.googleapis.com:443
[2022-11-18 00:25:52,076] DEBUG - https://www.googleapis.com:443 "GET /youtube/v3/videos?key=AIzaSyDfv2ISoNjVh2oX2JRJUQ1loS-voHH3GlI&fields=items(snippet(description,tags))&part=snippet&id=gzBU1vI5BY8 HTTP/1.1" 200 None
[2022-11-18 00:25:52,079] DEBUG - Starting new HTTPS connection (1): www.googleapis.com:443
[2022-11-18 00:25:52,128] DEBUG - https://www.googleapis.com:443 "GET /youtube/v3/videos?key=AIzaSyDfv2ISoNjVh2oX2JRJUQ1loS-voHH3GlI&fields=items(snippet(description,tags))&part=snippet&id=intRcDJPVRs HTTP/1.1" 200 None
[2022-11-18 00:25:52,132] DEBUG - Starting new HTTPS connection (1): www.googleapis.com:443
[2022-11-18 00:25:52,179] DEBUG - https://www.googleapis.com:443 "GET /youtube/v3/videos?key=AIzaSyDfv2ISoNjVh2oX2JRJUQ1loS-voHH3GlI&fields=items(snippet(description,tags))&part=snippet&id=mDAwSrH4fqU HTTP/1.1" 200 None
[2022-11-18 00:25:52,183] DEBUG - Starting new HTTPS connection (1): www.googleapis.com:443
[2022-11-18 00:25:52,235] DEBUG - https://www.googleapis.com:443 "GET /youtube/v3/videos?key=AIzaSyDfv2ISoNjVh2oX2JRJUQ1loS-voHH3GlI&fields=items(snippet(description,tags))&part=snippet&id=VFIlYy9GuH0 HTTP/1.1" 200 None
[2022-11-18 00:25:52,237] DEBUG - Starting new HTTPS connection (1): www.googleapis.com:443
[2022-11-18 00:25:52,285] DEBUG - https://www.googleapis.com:443 "GET /youtube/v3/videos?key=AIzaSyDfv2ISoNjVh2oX2JRJUQ1loS-voHH3GlI&fields=items(snippet(description,tags))&part=snippet&id=QxOalPujk7E HTTP/1.1" 200 None
[2022-11-18 00:25:52,287] DEBUG - Starting new HTTPS connection (1): www.googleapis.com:443
[2022-11-18 00:25:52,344] DEBUG - https://www.googleapis.com:443 "GET /youtube/v3/videos?key=AIzaSyDfv2ISoNjVh2oX2JRJUQ1loS-voHH3GlI&fields=items(snippet(description,tags))&part=snippet&id=JdYiPSl0xpo HTTP/1.1" 200 None
[2022-11-18 00:25:52,347] DEBUG - Starting new HTTPS connection (1): www.googleapis.com:443
[2022-11-18 00:25:52,400] DEBUG - https://www.googleapis.com:443 "GET /youtube/v3/videos?key=AIzaSyDfv2ISoNjVh2oX2JRJUQ1loS-voHH3GlI&fields=items(snippet(description,tags))&part=snippet&id=5q87K1WaoFI HTTP/1.1" 200 None
[2022-11-18 00:25:52,403] DEBUG - Starting new HTTPS connection (1): www.googleapis.com:443
[2022-11-18 00:25:52,447] DEBUG - https://www.googleapis.com:443 "GET /youtube/v3/videos?key=AIzaSyDfv2ISoNjVh2oX2JRJUQ1loS-voHH3GlI&fields=items(snippet(description,tags))&part=snippet&id=9rWvE4Uyh2A HTTP/1.1" 200 None
[2022-11-18 00:25:52,450] DEBUG - Starting new HTTPS connection (1): www.googleapis.com:443
[2022-11-18 00:25:52,523] DEBUG - https://www.googleapis.com:443 "GET /youtube/v3/videos?key=AIzaSyDfv2ISoNjVh2oX2JRJUQ1loS-voHH3GlI&fields=items(snippet(description,tags))&part=snippet&id=2ge9bLHL_Oc HTTP/1.1" 200 None
[2022-11-18 00:25:52,526] DEBUG - Starting new HTTPS connection (1): www.googleapis.com:443
[2022-11-18 00:25:52,581] DEBUG - https://www.googleapis.com:443 "GET /youtube/v3/videos?key=AIzaSyDfv2ISoNjVh2oX2JRJUQ1loS-voHH3GlI&fields=items(snippet(description,tags))&part=snippet&id=K8BibA0-5_k HTTP/1.1" 200 None
[2022-11-18 00:25:52,583] DEBUG - Starting new HTTPS connection (1): www.googleapis.com:443
[2022-11-18 00:25:52,628] DEBUG - https://www.googleapis.com:443 "GET /youtube/v3/videos?key=AIzaSyDfv2ISoNjVh2oX2JRJUQ1loS-voHH3GlI&fields=items(snippet(description,tags))&part=snippet&id=o9aVjBHEEbU HTTP/1.1" 200 None
[2022-11-18 00:25:52,630] DEBUG - Starting new HTTPS connection (1): www.googleapis.com:443
[2022-11-18 00:25:52,691] DEBUG - https://www.googleapis.com:443 "GET /youtube/v3/videos?key=AIzaSyDfv2ISoNjVh2oX2JRJUQ1loS-voHH3GlI&fields=items(snippet(description,tags))&part=snippet&id=T7itLR31yhk HTTP/1.1" 200 None
[2022-11-18 00:25:52,693] DEBUG - Starting new HTTPS connection (1): www.googleapis.com:443
[2022-11-18 00:25:52,744] DEBUG - https://www.googleapis.com:443 "GET /youtube/v3/videos?key=AIzaSyDfv2ISoNjVh2oX2JRJUQ1loS-voHH3GlI&fields=items(snippet(description,tags))&part=snippet&id=jIYuzyKUnYY HTTP/1.1" 200 None
[2022-11-18 00:25:52,746] DEBUG - Starting new HTTPS connection (1): www.googleapis.com:443
[2022-11-18 00:25:52,812] DEBUG - https://www.googleapis.com:443 "GET /youtube/v3/videos?key=AIzaSyDfv2ISoNjVh2oX2JRJUQ1loS-voHH3GlI&fields=items(snippet(description,tags))&part=snippet&id=a2A5Ld-QWnU HTTP/1.1" 200 None
[2022-11-18 00:25:52,814] DEBUG - Starting new HTTPS connection (1): www.googleapis.com:443
[2022-11-18 00:25:52,883] DEBUG - https://www.googleapis.com:443 "GET /youtube/v3/videos?key=AIzaSyDfv2ISoNjVh2oX2JRJUQ1loS-voHH3GlI&fields=items(snippet(description,tags))&part=snippet&id=wZb9R2MJpH8 HTTP/1.1" 200 None
[2022-11-18 00:25:52,885] DEBUG - Starting new HTTPS connection (1): www.googleapis.com:443
[2022-11-18 00:25:52,939] DEBUG - https://www.googleapis.com:443 "GET /youtube/v3/videos?key=AIzaSyDfv2ISoNjVh2oX2JRJUQ1loS-voHH3GlI&fields=items(snippet(description,tags))&part=snippet&id=6NWIfiV1_XQ HTTP/1.1" 200 None
[2022-11-18 00:25:52,942] DEBUG - Starting new HTTPS connection (1): www.googleapis.com:443
[2022-11-18 00:25:53,000] DEBUG - https://www.googleapis.com:443 "GET /youtube/v3/videos?key=AIzaSyDfv2ISoNjVh2oX2JRJUQ1loS-voHH3GlI&fields=items(snippet(description,tags))&part=snippet&id=J-Xb_lxgdZg HTTP/1.1" 200 None
[2022-11-18 00:25:53,002] DEBUG - Starting new HTTPS connection (1): www.googleapis.com:443
[2022-11-18 00:25:53,049] DEBUG - https://www.googleapis.com:443 "GET /youtube/v3/videos?key=AIzaSyDfv2ISoNjVh2oX2JRJUQ1loS-voHH3GlI&fields=items(snippet(description,tags))&part=snippet&id=f1l6vk9dYr4 HTTP/1.1" 200 None
[2022-11-18 00:25:53,051] DEBUG - Starting new HTTPS connection (1): www.googleapis.com:443
[2022-11-18 00:25:53,110] DEBUG - https://www.googleapis.com:443 "GET /youtube/v3/videos?key=AIzaSyDfv2ISoNjVh2oX2JRJUQ1loS-voHH3GlI&fields=items(snippet(description,tags))&part=snippet&id=4-Sfa4Gfy6c HTTP/1.1" 200 None
[2022-11-18 00:25:53,112] DEBUG - Starting new HTTPS connection (1): www.googleapis.com:443
[2022-11-18 00:25:53,158] DEBUG - https://www.googleapis.com:443 "GET /youtube/v3/videos?key=AIzaSyDfv2ISoNjVh2oX2JRJUQ1loS-voHH3GlI&fields=items(snippet(description,tags))&part=snippet&id=PyiRm1TZ2v4 HTTP/1.1" 200 None
[2022-11-18 00:25:53,160] DEBUG - Hashtags ['#marvel', '#mcu', '#politics', '#bladerunner', '#adventuregame', '#westwood', '#scumm', '#scummvm', '#videoessay', '#cyberpunkgame', '#coledone', '#techhistory', '#linux', '#videoessay', '#coding', '#gaming', '#hacking', '#squidgame', '#netflix', '#shorts', '#qtk', '#startrek', '#picard', '#videoessay']
[2022-11-18 00:25:53,160] DEBUG - Top Hashtags ['#videoessay', '#marvel', '#mcu', '#politics', '#bladerunner']
[2022-11-18 00:25:53,160] DEBUG - Tags ['meritocracy', 'science', 'research', 'astronomy', 'bibliometrics', 'stem', 'scientific research', 'citations', 'astrophysics', 'higher education', 'cancel culture', 'cancelled', 'cancel', 'cancelation', 'cancellation', 'institutional bias', 'marvel', 'mcu', 'politics', 'video essay', 'augusto boal', 'aristotle', 'machiavelli', 'virtu', 'iron man', 'avengers', 'captain america', 'flagsmashers', 'karli', 'morgenthau', 'drama', 'shakespeare', 'capitalist', 'bourgeoisie', 'leftist', 'breadtube', 'explained', 'propaganda', 'falcon and the winter soldier', 'steve rogers', 'tragedy', 'tragic hero', 'catharsis', 'centrist', 'neoliberal', 'political', 'feige', 'phase 4', 'black panther', 'killmonger', 'winter soldier', 'brecht', 'analysis', 'breakdown', 'pillar of garbage', 'ideology', 'comic book', 'wandavision', 'black widow', "t'challa", 'parasocial relationships', 'lindsay ellis', 'mcelroy', 'david tennant', 'compression', 'video', 'bcu', 'jamie malone', 'blade runner', 'cyberpunk game', 'video essay', 'westwood studios', 'live overflow', 'liveoverflow', 'hacking tutorial', 'how to hack', 'exploit tutorial', 'phrack', 'youtube scene', 'hackers', 'hacker on youtube', 'creator', 'security creator', 'geohot', 'gamozo', 'stacksmashing', 'phrack issue', 'phrack.org', 'video essay', 'linux', 'gnu', 'tech', 'coding', 'programming', 'what is linux', 'hackers', 'hacker story', 'how to use linux', 'linux news', 'nier automata', 'nier automata review', 'nier automata analysis', 'nier automata critique', 'nier automata retrospective', 'nier automata masterpiece', 'nier automata why its good', 'nier automata story', 'nier review', 'nier analysis', 'vox.com', 'entertainment industry', 'explain', 'explainer', 'hollywood', 'movie studios', 'streaming companies', 'theatrical window', 'vox', 'theatrical window release', 'only in theaters', 'why movies come out in theaters first', 'movie theater', 'movie theater experience', 'streaming vs theaters', 'straight to dvd', 'streaming movies', 'amc theaters', 'movie theater opening', 'disney', 'netflix', 'hulu', 'amazon prime', 'disney plus', '5 levels', '5 levels machine learning', '5 levels of machine learning', 'computer science', 'computer scientist', 'explanation machine learning', 'hidden door', 'innovation', 'machine learned', 'machine learning computer scientist', 'machine learning explained', 'machine learning explanation', 'machine learning hidden door', 'machine learning wired', 'machine learning youtube', 'ott 5 levels', 'science & tech', 'science & technology', 'wired', 'wired 5 levels', 'wired computer science', 'wired machine learning', 'squid game age rating', 'squid game ali', 'squid game cast', 'squid game characters', 'squid game costume', 'squid game death', 'squid game deaths', "squid game don't move", 'squid game ending', 'squid game episode 1', 'squid game explained', 'squid game games', 'squid game interview', 'squid game mask', 'squid game netflix', 'squid game reaction', 'squid game red light green light', 'squid game season 2', 'squid game shot', 'squid game trailer', 'squid game trailer netflix', 'rugby', 'ngj rugby', 'ngj', 'world rugby', 'rugby video essay', 'rugby reaction', 'super rugby', 'super rugby 2021', 'all blacks', 'maro itoje', 'england rugby', 'courtney lawes', 'quade cooper', 'tom curry', 'six nations rugby', 'six nations 2021', 'wales rugby', 'ireland rugby', 'france rugby', 'wallabies rugby', 'australia rugby', 'springboks rugby', 'how to play rugby', 'changing position in rugby', 'lions rugby', 'positionless backline', 'how to play centre in rugby', 'how to play wing in rugby', 'joe cokanasiga', 'afghan', 'hospital_essay', 'video', 'essay', 'doctors', 'skills', 'associated press', 'ap', 'ap youtube', 'associated press youtube', 'ap online', 'ap associated press', 'ap news', 'associated press style', 'news', 'breaking news', 'latest news', 'business', 'finance', 'politics', 'local news', 'commentary', 'reports', 'breaking', 'current affairs', 'top news', 'headlines', 'news today', 'esl', 'vocabulary', 'grammar', 'ielts', 'toefl', 'english', 'learn english', 'english lessons', 'how to say', 'how to say in english', 'english grammar', 'slang', 'pronunciation', 'idioms', 'spelling', 'anglais', 'ingles', 'speaking', 'learn-english', 'engvid', 'educational', 'lessons', 'lesson', 'instructional', 'inglés', 'englisch', 'англи́йский', 'inglês', 'angielski', 'engleză', 'anglicky', 'αγγλικά', 'i̇ngilizce', 'إنجليزي', 'inggris', 'angol', 'how to', 'essay', 'essay writing', 'how to write', 'native speaker', 'essay introduction', 'tenses', 'ielts writing', 'ielts essay', 'paraphrasing', 'how to tell a story with video', 'tell a story with video', 'how to tell a great story', 'how to make a video essay', 'how to make a video game essay', 'how to story tell', 'how to write a script for explainer video', 'how to write a video essay', 'how to write a video essay script', 'music video', 'documentary filmmaking', 'taylor cut films', 'visual storytelling', 'film essay', 'how to tell a story', 'cnet', 'technology', 'tech', 'hackers', 'atm', 'financial hack', 'financial hacker', 'bank hack', 'bank hackers', 'crime', 'heist', 'robbery', 'money hack', 'atm hackers', 'atm hack 2019', 'hack pro', 'hacking', 'money', 'money heist', 'black hat 2019', 'black hat hacker', 'black hat hacking', 'black hat', 'professional hacker', 'jackpot', 'atm hacking', 'atm jackpotting', 'atm jackpotting video', 'black hat atm jackpotting', 'mba', 'education', 'gmat', 'vox.com', 'vox', 'explained', 'cults', 'netflix explained series', 'netflix full episode', 'netflix 2019', 'documentary', 'vox entertainment', 'vox doc', 'explainer', 'how to cults work', 'modern day cults', 'cod', 'ifocus', 'ifocus', 'ifocuz', 'history of mac os x', 'history of mac os x operating system', 'apple', 'history of apple', 'macbook', 'history of the mac', 'history of macos', 'history of mac os', 'mac os catalina', 'should i upgrade to catalina', 'catalina 32 bit apps', 'mac os x', 'new mac operating system', 'apple mac os', 'history of ios', 'mac operating system', 'macos mojave', 'macos high sierra', 'macos sierra', 'best video editing software for windows 10', 'best video editing software for linux', 'free video editing software no watermark', 'best video editing software for beginners', 'video editor for pc', 'best video editing tutorials', 'video editing tutorial youtube', 'video editing tutorials for beginners free', 'video editing training course', 'hide watermark', 'windows 10 free video editor', 'vsdc video editor tutorial', 'vsdc video editor tutorial cutting', 'nathan for you', 'video essay', 'comedy central', 'nathan fielder', 'revenge', 'star trek', 'star trek picard', 'picard', 'seven of nine', 'star trek voyager', 'tng', 'the next generation', 'tos', 'star trek discovery', 'micheal burnham', 'kyle thee scott', 'the doomsday machine', 'wrath of khan', 'khan', 'star trek first contact', 'first contact', 'star trek revenge', 'seven of nine revenge', 'icheb', 'star trek picard seven of nine', '7 of 9']
[2022-11-18 00:25:53,164] DEBUG - Top Tags ['video essay', 'hackers', 'politics', 'explained', 'video', 'tech', 'vox.com', 'explainer', 'vox', 'essay', 'ifocus', 'meritocracy', 'science', 'research', 'astronomy', 'bibliometrics', 'stem', 'scientific research', 'citations', 'astrophysics', 'higher education', 'cancel culture']
[2022-11-18 00:26:04,196] CRITICAL - Failed to generate audio
[2022-11-18 00:26:04,196] INFO - Getting video script.
[2022-11-18 00:26:04,197] INFO - message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
[2022-11-18 00:26:04,197] DEBUG - api_version=None data='{"model": "text-davinci-002", "prompt": "Write a list of unique and interesting keywords relating to basic computer science:\\n\\n-", "temperature": 1, "max_tokens": 128, "top_p": 1, "frequency_penalty": 0, "presence_penalty": 0, "n": 1, "stop": "", "echo": false}' message='Post details'
[2022-11-18 00:26:05,995] DEBUG - https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 429
[2022-11-18 00:26:05,996] INFO - message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1657 request_id=5c7b9ed50c1df937a3c48fe83aa91519 response_code=200
[2022-11-18 00:26:05,996] INFO - message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
[2022-11-18 00:26:05,996] DEBUG - api_version=None data='{"model": "text-curie-001", "prompt": "Write a list of 5 interesting beginner topics on where algorithms is used in the context of computer science:\\n-", "temperature": 0.7, "max_tokens": 256, "top_p": 1, "frequency_penalty": 0, "presence_penalty": 0, "n": 1, "stop": "", "echo": false}' message='Post details'
[2022-11-18 00:26:06,548] DEBUG - https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 428
[2022-11-18 00:26:06,548] INFO - message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=407 request_id=3483ac91f3722740753709daee23d21a response_code=200
[2022-11-18 00:26:06,548] INFO - message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
[2022-11-18 00:26:06,549] DEBUG - api_version=None data='{"model": "text-davinci-002", "prompt": "Write a short, unique and interesting title relating to the theory of Algorithms in computer graphics in the form of a video essay title without involving numbers:", "temperature": 1, "max_tokens": 20, "top_p": 1, "frequency_penalty": 0, "presence_penalty": 0, "n": 1, "stop": "", "echo": false}' message='Post details'
[2022-11-18 00:26:07,542] DEBUG - https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 299
[2022-11-18 00:26:07,542] INFO - message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=853 request_id=8db737561a45d0d7863c7f9604b6603c response_code=200
[2022-11-18 00:26:07,570] DEBUG - Keyword algorithms, Topics ['Algorithms in data analysis', 'Algorithms in machine learning', 'Algorithms in artificial intelligence', 'Algorithms in computer graphics', 'Algorithms in computer security'], Topic The Algorithmic Beauty of Graphics
[2022-11-18 00:26:07,570] INFO - message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
[2022-11-18 00:26:07,571] DEBUG - api_version=None data='{"model": "text-davinci-002", "prompt": "Write a list of beginner topics relating to what is The Algorithmic Beauty of Graphics in the context of computer science:\\n\\n", "temperature": 0, "max_tokens": 256, "top_p": 1, "frequency_penalty": 0, "presence_penalty": 0, "n": 1, "stop": "", "echo": false}' message='Post details'
[2022-11-18 00:26:11,518] DEBUG - https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 549
[2022-11-18 00:26:11,519] INFO - message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=3808 request_id=ef4f6aaefbadb56c921779467efa4d2e response_code=200
[2022-11-18 00:26:11,519] DEBUG - topic: The Algorithmic Beauty of Graphics, sub topics 
-What is The Algorithmic Beauty of Graphics?
-The history of The Algorithmic Beauty of Graphics
-How The Algorithmic Beauty of Graphics is used in computer science
-The benefits of using The Algorithmic Beauty of Graphics
-The challenges of using The Algorithmic Beauty of Graphics
[2022-11-18 00:26:11,519] DEBUG - getting summary for topic
[2022-11-18 00:26:11,519] INFO - message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
[2022-11-18 00:26:11,519] DEBUG - api_version=None data='{"model": "text-curie-001", "prompt": "Write a summary for the following topic in the form of a youtube description in the context of computer science:\\n\\ntopic: The Algorithmic Beauty of Graphics\\n\\nsummary:", "temperature": 0, "max_tokens": 256, "top_p": 1, "frequency_penalty": 0, "presence_penalty": 0, "n": 1, "stop": "", "echo": false}' message='Post details'
[2022-11-18 00:26:12,040] DEBUG - https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 424
[2022-11-18 00:26:12,040] INFO - message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=373 request_id=8991573e6baddd541e31b8733d7470d4 response_code=200
[2022-11-18 00:26:12,040] INFO - message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
[2022-11-18 00:26:12,040] DEBUG - api_version=None data='{"model": "text-davinci-002", "prompt": "Expand greatly upon the topic of The Algorithmic Beauty of Graphics in the context of computer science summarised for a 9th grader:\\n\\n1. What is The Algorithmic Beauty of Graphics?\\n\\n", "temperature": 1, "max_tokens": 128, "top_p": 1, "frequency_penalty": 0, "presence_penalty": 0, "n": 1, "stop": ["2.", "1."], "echo": false}' message='Post details'
[2022-11-18 00:26:14,859] DEBUG - https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 529
[2022-11-18 00:26:14,860] INFO - message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=2679 request_id=2fbbff70950d971e78e0117d9062897c response_code=200
[2022-11-18 00:26:14,860] INFO - message='Request to OpenAI API' method=post path=https://api.openai.com/v1/edits
[2022-11-18 00:26:14,860] DEBUG - api_version=None data='{"model": "text-davinci-edit-001", "input": "The Algorithmic Beauty of Graphics is a book written by computer scientist and mathematician Joel Spolsky. The book discusses the beauty of graphics from a computer science perspective, exploring the algorithms and processes that create stunning visual effects.", "instruction": "Replace all non-characters with their spoken counterpart. And fix grammar.", "temperature": 0, "top_p": 1}' message='Post details'
[2022-11-18 00:26:17,807] DEBUG - https://api.openai.com:443 "POST /v1/edits HTTP/1.1" 200 506
[2022-11-18 00:26:17,807] INFO - message='OpenAI API response' path=https://api.openai.com/v1/edits processing_ms=2809 request_id=3c6f6e56a38cb1d28dfd848bde7b41c4 response_code=200
[2022-11-18 00:26:17,808] INFO - message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
[2022-11-18 00:26:17,808] DEBUG - api_version=None data='{"model": "text-davinci-002", "prompt": "Expand greatly upon the topic of The Algorithmic Beauty of Graphics in the context of computer science summarised for a 9th grader:\\n\\n1. What is The Algorithmic Beauty of Graphics?\\n\\nThe Algorithmic Beauty of Graphics is a book written by computer scientist and mathematician Joel Spolsky.\\nThe book discusses the beauty of graphics from a computer science perspective, exploring the algorithms and processes that create stunning visual effects.\\nThe book is available for free download at http://www.joelonsoftware.com/items/2008/01/29.html.\\n\\n2. The history of The Algorithmic Beauty of Graphics\\n\\n", "temperature": 1, "max_tokens": 128, "top_p": 1, "frequency_penalty": 0, "presence_penalty": 0, "n": 1, "stop": ["3.", "2."], "echo": false}' message='Post details'
[2022-11-18 00:26:21,194] DEBUG - https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 581
[2022-11-18 00:26:21,195] INFO - message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=3231 request_id=535d7621614b82d793743d4f2a406ed1 response_code=200
[2022-11-18 00:26:21,196] INFO - message='Request to OpenAI API' method=post path=https://api.openai.com/v1/edits
[2022-11-18 00:26:21,196] DEBUG - api_version=None data='{"model": "text-davinci-edit-001", "input": "The Algorithmic Beauty of Graphics was first published in 2008. The book was inspired by the work of computer graphics pioneer John F. Cramer, who developed the field of computer-generated art. Spolsky was also influenced by the work of artist and architect Ben Fry, who is known for using code to generate art.", "instruction": "Replace all non-characters with their spoken counterpart. And fix grammar.", "temperature": 0, "top_p": 1}' message='Post details'
[2022-11-18 00:26:25,176] DEBUG - https://api.openai.com:443 "POST /v1/edits HTTP/1.1" 200 658
[2022-11-18 00:26:25,176] INFO - message='OpenAI API response' path=https://api.openai.com/v1/edits processing_ms=3842 request_id=c0f921b6d4ba64104014f0d4bc865dc0 response_code=200
[2022-11-18 00:26:25,177] INFO - message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
[2022-11-18 00:26:25,177] DEBUG - api_version=None data='{"model": "text-davinci-002", "prompt": "Expand greatly upon the topic of The Algorithmic Beauty of Graphics in the context of computer science summarised for a 9th grader:\\n\\n1. What is The Algorithmic Beauty of Graphics?\\n\\nThe Algorithmic Beauty of Graphics is a book written by computer scientist and mathematician Joel Spolsky.\\nThe book discusses the beauty of graphics from a computer science perspective, exploring the algorithms and processes that create stunning visual effects.\\nThe book is available for free download at http://www.joelonsoftware.com/items/2008/01/29.html.\\n\\n2. The history of The Algorithmic Beauty of Graphics\\n\\nThe Algorithmic Beauty of Graphics was first published in 2008. The book was inspired by the work of computer graphics pioneer John F. Cramer, who developed the field of computergenerated art. Spolsky was also influenced by the work of artist and architect Ben Fry, who is known for using code to generate art. \\n\\nThe book is divided into three parts.\\nThe first part is about the basics of computer graphics.\\nThe second part is about the basics of fractals.\\nThe third part is about the basics of Lsystems.\\n\\n3. How The Algorithmic Beauty of Graphics is used in computer science\\n\\n", "temperature": 1, "max_tokens": 128, "top_p": 1, "frequency_penalty": 0, "presence_penalty": 0, "n": 1, "stop": ["4.", "3."], "echo": false}' message='Post details'
[2022-11-18 00:26:29,146] DEBUG - https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 525
[2022-11-18 00:26:29,147] INFO - message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=3831 request_id=9ae32906069a750aa35b533678febc2e response_code=200
[2022-11-18 00:26:29,147] INFO - message='Request to OpenAI API' method=post path=https://api.openai.com/v1/edits
[2022-11-18 00:26:29,147] DEBUG - api_version=None data='{"model": "text-davinci-edit-001", "input": "The Algorithmic Beauty of Graphics is used in computer science to study the algorithms and processes that create stunning visual effects. The book is also used to teach computer science students about the basics of computer graphics, fractals, and Lsystems.", "instruction": "Replace all non-characters with their spoken counterpart. And fix grammar.", "temperature": 0, "top_p": 1}' message='Post details'
[2022-11-18 00:26:31,999] DEBUG - https://api.openai.com:443 "POST /v1/edits HTTP/1.1" 200 406
[2022-11-18 00:26:31,999] INFO - message='OpenAI API response' path=https://api.openai.com/v1/edits processing_ms=2713 request_id=d5d7b45a842b7364467da8b5861a5ea7 response_code=200
[2022-11-18 00:26:32,000] INFO - message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
[2022-11-18 00:26:32,000] DEBUG - api_version=None data='{"model": "text-davinci-002", "prompt": "Expand greatly upon the topic of The Algorithmic Beauty of Graphics in the context of computer science summarised for a 9th grader:\\n\\n1. What is The Algorithmic Beauty of Graphics?\\n\\nThe Algorithmic Beauty of Graphics is a book written by computer scientist and mathematician Joel Spolsky.\\nThe book discusses the beauty of graphics from a computer science perspective, exploring the algorithms and processes that create stunning visual effects.\\nThe book is available for free download at http://www.joelonsoftware.com/items/2008/01/29.html.\\n\\n2. The history of The Algorithmic Beauty of Graphics\\n\\nThe Algorithmic Beauty of Graphics was first published in 2008. The book was inspired by the work of computer graphics pioneer John F. Cramer, who developed the field of computergenerated art. Spolsky was also influenced by the work of artist and architect Ben Fry, who is known for using code to generate art. \\n\\nThe book is divided into three parts.\\nThe first part is about the basics of computer graphics.\\nThe second part is about the basics of fractals.\\nThe third part is about the basics of Lsystems.\\n\\n3. How The Algorithmic Beauty of Graphics is used in computer science\\n\\nThe Algorithmic Beauty of Graphics is used in computer science to study the algorithms and processes that create stunning visual effects.\\nThe book is also used to teach computer science students about the basics of computer graphics, fractals, and Lsystems.\\n\\n4. The benefits of using The Algorithmic Beauty of Graphics\\n\\n", "temperature": 1, "max_tokens": 128, "top_p": 1, "frequency_penalty": 0, "presence_penalty": 0, "n": 1, "stop": ["5.", "4."], "echo": false}' message='Post details'
[2022-11-18 00:26:36,105] DEBUG - https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 646
[2022-11-18 00:26:36,106] INFO - message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=3962 request_id=132e4e6b28e70f2d40b6fd37fe546c28 response_code=200
[2022-11-18 00:26:36,106] INFO - message='Request to OpenAI API' method=post path=https://api.openai.com/v1/edits
[2022-11-18 00:26:36,106] DEBUG - api_version=None data='{"model": "text-davinci-edit-001", "input": "The Algorithmic Beauty of Graphics is a valuable resource for computer science students and professionals interested in the field of computer graphics.\\nThe book provides a clear and concise explanation of the algorithms and processes used to create beautiful visual effects.\\nThe book is also available for free download, making it accessible to anyone with an internet connection.", "instruction": "Replace all non-characters with their spoken counterpart. And fix grammar.", "temperature": 0, "top_p": 1}' message='Post details'
[2022-11-18 00:26:38,640] DEBUG - https://api.openai.com:443 "POST /v1/edits HTTP/1.1" 200 530
[2022-11-18 00:26:38,640] INFO - message='OpenAI API response' path=https://api.openai.com/v1/edits processing_ms=2393 request_id=b7ef396e2f6b498e3f95ffe44fc52374 response_code=200
[2022-11-18 00:26:38,641] INFO - message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
[2022-11-18 00:26:38,641] DEBUG - api_version=None data='{"model": "text-davinci-002", "prompt": "Expand greatly upon the topic of The Algorithmic Beauty of Graphics in the context of computer science summarised for a 9th grader:\\n\\n1. What is The Algorithmic Beauty of Graphics?\\n\\nThe Algorithmic Beauty of Graphics is a book written by computer scientist and mathematician Joel Spolsky.\\nThe book discusses the beauty of graphics from a computer science perspective, exploring the algorithms and processes that create stunning visual effects.\\nThe book is available for free download at http://www.joelonsoftware.com/items/2008/01/29.html.\\n\\n2. The history of The Algorithmic Beauty of Graphics\\n\\nThe Algorithmic Beauty of Graphics was first published in 2008. The book was inspired by the work of computer graphics pioneer John F. Cramer, who developed the field of computergenerated art. Spolsky was also influenced by the work of artist and architect Ben Fry, who is known for using code to generate art. \\n\\nThe book is divided into three parts.\\nThe first part is about the basics of computer graphics.\\nThe second part is about the basics of fractals.\\nThe third part is about the basics of Lsystems.\\n\\n3. How The Algorithmic Beauty of Graphics is used in computer science\\n\\nThe Algorithmic Beauty of Graphics is used in computer science to study the algorithms and processes that create stunning visual effects.\\nThe book is also used to teach computer science students about the basics of computer graphics, fractals, and Lsystems.\\n\\n4. The benefits of using The Algorithmic Beauty of Graphics\\n\\nThe Algorithmic Beauty of Graphics is a valuable resource for computer science students and professionals interested in the field of computer graphics. \\nThe book provides a clear and concise explanation of the algorithms and processes used to create beautiful visual effects.\\nThe book is also available for free download, making it accessible to anyone with an Internet connection.\\n\\n5. The challenges of using The Algorithmic Beauty of Graphics\\n\\n", "temperature": 1, "max_tokens": 128, "top_p": 1, "frequency_penalty": 0, "presence_penalty": 0, "n": 1, "stop": ["6.", "5."], "echo": false}' message='Post details'
[2022-11-18 00:26:41,786] DEBUG - https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 591
[2022-11-18 00:26:41,787] INFO - message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=3007 request_id=696758981a7fbc57093fae5bfdfce4f4 response_code=200
[2022-11-18 00:26:41,787] INFO - message='Request to OpenAI API' method=post path=https://api.openai.com/v1/edits
[2022-11-18 00:26:41,787] DEBUG - api_version=None data='{"model": "text-davinci-edit-001", "input": "One challenge of using The Algorithmic Beauty of Graphics is that it is geared towards computer science students and professionals, and may be difficult for those without a background in the subject to understand. \\nAnother challenge is that the book is available for free download, so it is not possible to sell it for profit.", "instruction": "Replace all non-characters with their spoken counterpart. And fix grammar.", "temperature": 0, "top_p": 1}' message='Post details'
[2022-11-18 00:26:46,574] DEBUG - https://api.openai.com:443 "POST /v1/edits HTTP/1.1" 200 475
[2022-11-18 00:26:46,574] INFO - message='OpenAI API response' path=https://api.openai.com/v1/edits processing_ms=4650 request_id=6570fe2c6ef5557ee9caf2d28483ffe1 response_code=200
[2022-11-18 00:26:46,575] DEBUG - Starting new HTTPS connection (1): www.googleapis.com:443
[2022-11-18 00:26:46,717] DEBUG - https://www.googleapis.com:443 "GET /youtube/v3/playlists?part=id&id=UC_x5XG1OV2P6uZZ5FSM9Ttw&key=AIzaSyDfv2ISoNjVh2oX2JRJUQ1loS-voHH3GlI&maxResults=2 HTTP/1.1" 200 None
[2022-11-18 00:26:46,719] DEBUG - Starting new HTTPS connection (1): www.googleapis.com:443
[2022-11-18 00:26:47,148] DEBUG - https://www.googleapis.com:443 "GET /youtube/v3/search?part=snippet&type=video&maxResults=50&order=relevance&key=AIzaSyDfv2ISoNjVh2oX2JRJUQ1loS-voHH3GlI&q=The%20Algorithmic%20Beauty%20of%20Graphics&publishedAfter=2000-01-01T00:00:00Z&publishedBefore=3000-01-01T00:00:00Z HTTP/1.1" 200 None
[2022-11-18 00:26:47,154] DEBUG - Starting new HTTPS connection (1): www.googleapis.com:443
[2022-11-18 00:26:47,216] DEBUG - https://www.googleapis.com:443 "GET /youtube/v3/videos?key=AIzaSyDfv2ISoNjVh2oX2JRJUQ1loS-voHH3GlI&fields=items(snippet(description,tags))&part=snippet&id=Vzeyj3DCWGw HTTP/1.1" 200 None
[2022-11-18 00:26:47,219] DEBUG - Starting new HTTPS connection (1): www.googleapis.com:443
[2022-11-18 00:26:47,265] DEBUG - https://www.googleapis.com:443 "GET /youtube/v3/videos?key=AIzaSyDfv2ISoNjVh2oX2JRJUQ1loS-voHH3GlI&fields=items(snippet(description,tags))&part=snippet&id=I-EIVlHvHRM HTTP/1.1" 200 None
[2022-11-18 00:26:47,268] DEBUG - Starting new HTTPS connection (1): www.googleapis.com:443
[2022-11-18 00:26:47,338] DEBUG - https://www.googleapis.com:443 "GET /youtube/v3/videos?key=AIzaSyDfv2ISoNjVh2oX2JRJUQ1loS-voHH3GlI&fields=items(snippet(description,tags))&part=snippet&id=pNkz8wEJljc HTTP/1.1" 200 None
[2022-11-18 00:26:47,341] DEBUG - Starting new HTTPS connection (1): www.googleapis.com:443
[2022-11-18 00:26:47,409] DEBUG - https://www.googleapis.com:443 "GET /youtube/v3/videos?key=AIzaSyDfv2ISoNjVh2oX2JRJUQ1loS-voHH3GlI&fields=items(snippet(description,tags))&part=snippet&id=B1CT5pLKVSM HTTP/1.1" 200 None
[2022-11-18 00:26:47,412] DEBUG - Starting new HTTPS connection (1): www.googleapis.com:443
[2022-11-18 00:26:47,466] DEBUG - https://www.googleapis.com:443 "GET /youtube/v3/videos?key=AIzaSyDfv2ISoNjVh2oX2JRJUQ1loS-voHH3GlI&fields=items(snippet(description,tags))&part=snippet&id=p8u_k2LIZyo HTTP/1.1" 200 None
[2022-11-18 00:26:47,469] DEBUG - Starting new HTTPS connection (1): www.googleapis.com:443
[2022-11-18 00:26:47,517] DEBUG - https://www.googleapis.com:443 "GET /youtube/v3/videos?key=AIzaSyDfv2ISoNjVh2oX2JRJUQ1loS-voHH3GlI&fields=items(snippet(description,tags))&part=snippet&id=kPRA0W1kECg HTTP/1.1" 200 None
[2022-11-18 00:26:47,520] DEBUG - Starting new HTTPS connection (1): www.googleapis.com:443
[2022-11-18 00:26:47,585] DEBUG - https://www.googleapis.com:443 "GET /youtube/v3/videos?key=AIzaSyDfv2ISoNjVh2oX2JRJUQ1loS-voHH3GlI&fields=items(snippet(description,tags))&part=snippet&id=k2AqGongii0 HTTP/1.1" 200 None
[2022-11-18 00:26:47,588] DEBUG - Starting new HTTPS connection (1): www.googleapis.com:443
[2022-11-18 00:26:47,643] DEBUG - https://www.googleapis.com:443 "GET /youtube/v3/videos?key=AIzaSyDfv2ISoNjVh2oX2JRJUQ1loS-voHH3GlI&fields=items(snippet(description,tags))&part=snippet&id=vQ60rFwh2ig HTTP/1.1" 200 None
[2022-11-18 00:26:47,644] DEBUG - Starting new HTTPS connection (1): www.googleapis.com:443
[2022-11-18 00:26:47,697] DEBUG - https://www.googleapis.com:443 "GET /youtube/v3/videos?key=AIzaSyDfv2ISoNjVh2oX2JRJUQ1loS-voHH3GlI&fields=items(snippet(description,tags))&part=snippet&id=f6ra024-ASY HTTP/1.1" 200 None
[2022-11-18 00:26:47,699] DEBUG - Starting new HTTPS connection (1): www.googleapis.com:443
[2022-11-18 00:26:47,744] DEBUG - https://www.googleapis.com:443 "GET /youtube/v3/videos?key=AIzaSyDfv2ISoNjVh2oX2JRJUQ1loS-voHH3GlI&fields=items(snippet(description,tags))&part=snippet&id=qxEkY8OScYY HTTP/1.1" 200 None
[2022-11-18 00:26:47,746] DEBUG - Starting new HTTPS connection (1): www.googleapis.com:443
[2022-11-18 00:26:47,807] DEBUG - https://www.googleapis.com:443 "GET /youtube/v3/videos?key=AIzaSyDfv2ISoNjVh2oX2JRJUQ1loS-voHH3GlI&fields=items(snippet(description,tags))&part=snippet&id=OODzTMcGDD0 HTTP/1.1" 200 None
[2022-11-18 00:26:47,809] DEBUG - Starting new HTTPS connection (1): www.googleapis.com:443
[2022-11-18 00:26:47,866] DEBUG - https://www.googleapis.com:443 "GET /youtube/v3/videos?key=AIzaSyDfv2ISoNjVh2oX2JRJUQ1loS-voHH3GlI&fields=items(snippet(description,tags))&part=snippet&id=mKKZ3_Jqjho HTTP/1.1" 200 None
[2022-11-18 00:26:47,868] DEBUG - Starting new HTTPS connection (1): www.googleapis.com:443
[2022-11-18 00:26:47,921] DEBUG - https://www.googleapis.com:443 "GET /youtube/v3/videos?key=AIzaSyDfv2ISoNjVh2oX2JRJUQ1loS-voHH3GlI&fields=items(snippet(description,tags))&part=snippet&id=1VHsNcxA1Go HTTP/1.1" 200 None
[2022-11-18 00:26:47,923] DEBUG - Starting new HTTPS connection (1): www.googleapis.com:443
[2022-11-18 00:26:47,968] DEBUG - https://www.googleapis.com:443 "GET /youtube/v3/videos?key=AIzaSyDfv2ISoNjVh2oX2JRJUQ1loS-voHH3GlI&fields=items(snippet(description,tags))&part=snippet&id=Bo61vlZ3c9Q HTTP/1.1" 200 None
[2022-11-18 00:26:47,970] DEBUG - Starting new HTTPS connection (1): www.googleapis.com:443
[2022-11-18 00:26:48,028] DEBUG - https://www.googleapis.com:443 "GET /youtube/v3/videos?key=AIzaSyDfv2ISoNjVh2oX2JRJUQ1loS-voHH3GlI&fields=items(snippet(description,tags))&part=snippet&id=nfczi2cI6Cs HTTP/1.1" 200 None
[2022-11-18 00:26:48,032] DEBUG - Starting new HTTPS connection (1): www.googleapis.com:443
[2022-11-18 00:26:48,082] DEBUG - https://www.googleapis.com:443 "GET /youtube/v3/videos?key=AIzaSyDfv2ISoNjVh2oX2JRJUQ1loS-voHH3GlI&fields=items(snippet(description,tags))&part=snippet&id=SVcsDDABEkM HTTP/1.1" 200 None
[2022-11-18 00:26:48,085] DEBUG - Starting new HTTPS connection (1): www.googleapis.com:443
[2022-11-18 00:26:48,144] DEBUG - https://www.googleapis.com:443 "GET /youtube/v3/videos?key=AIzaSyDfv2ISoNjVh2oX2JRJUQ1loS-voHH3GlI&fields=items(snippet(description,tags))&part=snippet&id=4E9drlZ0Vns HTTP/1.1" 200 None
[2022-11-18 00:26:48,147] DEBUG - Starting new HTTPS connection (1): www.googleapis.com:443
[2022-11-18 00:26:48,196] DEBUG - https://www.googleapis.com:443 "GET /youtube/v3/videos?key=AIzaSyDfv2ISoNjVh2oX2JRJUQ1loS-voHH3GlI&fields=items(snippet(description,tags))&part=snippet&id=Y1bPsh1mFUI HTTP/1.1" 200 None
[2022-11-18 00:26:48,199] DEBUG - Starting new HTTPS connection (1): www.googleapis.com:443
[2022-11-18 00:26:48,268] DEBUG - https://www.googleapis.com:443 "GET /youtube/v3/videos?key=AIzaSyDfv2ISoNjVh2oX2JRJUQ1loS-voHH3GlI&fields=items(snippet(description,tags))&part=snippet&id=Baua8oB9L_A HTTP/1.1" 200 None
[2022-11-18 00:26:48,270] DEBUG - Starting new HTTPS connection (1): www.googleapis.com:443
[2022-11-18 00:26:48,329] DEBUG - https://www.googleapis.com:443 "GET /youtube/v3/videos?key=AIzaSyDfv2ISoNjVh2oX2JRJUQ1loS-voHH3GlI&fields=items(snippet(description,tags))&part=snippet&id=BpZX_yVMQvo HTTP/1.1" 200 None
[2022-11-18 00:26:48,331] DEBUG - Starting new HTTPS connection (1): www.googleapis.com:443
[2022-11-18 00:26:48,390] DEBUG - https://www.googleapis.com:443 "GET /youtube/v3/videos?key=AIzaSyDfv2ISoNjVh2oX2JRJUQ1loS-voHH3GlI&fields=items(snippet(description,tags))&part=snippet&id=V5eXfCYoyrc HTTP/1.1" 200 None
[2022-11-18 00:26:48,393] DEBUG - Starting new HTTPS connection (1): www.googleapis.com:443
[2022-11-18 00:26:48,446] DEBUG - https://www.googleapis.com:443 "GET /youtube/v3/videos?key=AIzaSyDfv2ISoNjVh2oX2JRJUQ1loS-voHH3GlI&fields=items(snippet(description,tags))&part=snippet&id=o2FFtPPM3iY HTTP/1.1" 200 None
[2022-11-18 00:26:48,448] DEBUG - Starting new HTTPS connection (1): www.googleapis.com:443
[2022-11-18 00:26:48,504] DEBUG - https://www.googleapis.com:443 "GET /youtube/v3/videos?key=AIzaSyDfv2ISoNjVh2oX2JRJUQ1loS-voHH3GlI&fields=items(snippet(description,tags))&part=snippet&id=KYoiUsV0b5o HTTP/1.1" 200 None
[2022-11-18 00:26:48,507] DEBUG - Starting new HTTPS connection (1): www.googleapis.com:443
[2022-11-18 00:26:48,562] DEBUG - https://www.googleapis.com:443 "GET /youtube/v3/videos?key=AIzaSyDfv2ISoNjVh2oX2JRJUQ1loS-voHH3GlI&fields=items(snippet(description,tags))&part=snippet&id=SjSHVDfXHQ4 HTTP/1.1" 200 None
[2022-11-18 00:26:48,564] DEBUG - Starting new HTTPS connection (1): www.googleapis.com:443
[2022-11-18 00:26:48,619] DEBUG - https://www.googleapis.com:443 "GET /youtube/v3/videos?key=AIzaSyDfv2ISoNjVh2oX2JRJUQ1loS-voHH3GlI&fields=items(snippet(description,tags))&part=snippet&id=6U6Y99GtGPo HTTP/1.1" 200 None
[2022-11-18 00:26:48,620] DEBUG - Hashtags ['#chapter08_section6', '#abop', '#wsj', '#tiktok', '#algorithm', '#chess', '#checkmate', '#shorts']
[2022-11-18 00:26:48,620] DEBUG - Top Hashtags ['#chapter08_section6', '#abop', '#wsj', '#tiktok', '#algorithm']
[2022-11-18 00:26:48,621] DEBUG - Tags ['refik anadol', 'machine intelligence', 'machine hallucination', 'artechouse', 'la philharmonic', 'walt disney concert hall', 'wdch dreams', 'refik anadol art', 'refik anadol installation', 'refik anadol ai', 'refik anadol data', 'ai art', 'data art', 'art with data', 'artist', 'obsessed', 'obsessed art', 'obsessed data', 'wired obsessed', 'obsessed wired', 'art ai', 'art artificial intelligence', 'wired algorithm', 'art algorithm', 'art algo', 'walt disney concert hall art', 'visual art', 'amazing art', 'cool art', 'wired', 'minha', 'yang', 'interview', 'meditation', 'fluid', 'motion', 'exclusive', 'illusion', 'innovation', 'creators project', 'creators', 'project', "creator's", 'intel', 'vice', 'technology', 'media', 'art', 'design', 'music', 'south', 'korea', 'korean', 'illumination', 'space', 'glow', 'glowing', 'south korea (country)', '21', 'dish', 'interactive', 'installation', 'computer science', 'education', 'mathematics', 'algorithms', 'sorting algorithms', 'sorting', 'algorithm', 'marcus du sautoy', 'bbc', 'documentary', 'computers', 'computerphile', 'computer graphics (images) (file format genre)', 'transformations', 'matrices', 'l system', 'lindenmayer systems', 'l sytem', 'how to program an l-system', 'lindenmayer system', 'l system tree', 'lsystem', 'l systems', 'l system tutorial', 'l-systems', 'l-system', 'fractal l-systems', 'l systems explained', 'algorithms in nature', 'processing l-system', 'processing l system', 'lsystem fractals', 'the algorithmic beauty of plants', 'nature of code', 'l-system tutorial', 'recursion', 'turtle graphics', 'processing fractal tree', 'processing tutorial', 'fractals', 'fractal trees', 'turtle graphics tutorial', 'majorprep', 'major prep', 'pagerank', 'pagerank algorithm', 'google algorithm', 'mathematics of google search', 'math of pagerank algorithm', 'applications of matrices', 'ranking algorithm', 'how does google rank websites', 'google', 'algorithm', 'computer science', 'graph theory', 'linear algebra', 'markov matrix', 'probability', 'math', 'applied math', 'math applications', 'how does google work', 'computers', 'computerphile', 'graphics', 'visibility problem', 'john chapman', 'computer science', 'hidden surfaces problem', 'cobra kai', 'editing', 'pro editor', 'video editor', 'cobra kai editing', 'cobra kai trialer', 'cobra kai bts', 'cobra kai behind the scenes', 'zack arnold', 'netflix', 'netflix editor', 'netflix analytics', 'cobra kai film editing', 'film editing', 'film editor', 'tv show editor', 'professional editor', 'the editing podcast', 'diana and roma', 'funny', 'kids video', 'funny videos', 'comedy', 'stories', 'for children', 'youtube', 'сompilation', 'kids diana show', 'big', 'mental outlaw', 'mental', 'outlaw', 'stable diffusion', 'bob ross', 'bot ross', 'ai art', 'ai', 'art work', 'ai generated artwork takes first place in art contest', 'ai artwork first place', 'ai first place', 'ai artwork', 'ai wins art contest', 'ai art contest', 'ai generated art', 'ai art contest colorado', 'tik tok', 'tiktok', 'tiktok algorithm', 'tik tok algo', 'tik tok algorithm', 'how tiktok works', 'how tik tok works', 'how the algorithm works', 'tiktok algorithm explained', 'tiktok algorithm update', 'tik tok algorithm explained', '2021 tiktok algorithm', 'new tiktok algorithm', 'tik tok algorithm update', 'newest tiktok algorithm', 'latest tiktok algorithm', 'new tik tok algorithm', 'tiktok algorithm 2021', 'wsj', 'wsj tik tok', 'wsj tiktok', 'techy', 'ai art', 'dall-e 2', 'midjourney', 'openai', 'vox.com', 'ai', 'deep learning', 'explain', 'explainer', 'generated art', 'multimodal learning', 'text-to-image', 'text2image', 'vox', 'ai art', 'robot art generator', 'ai art generator', 'art generator machine', 'tiktok art', 'open source', 'open source art', 'artificial intelligence art', 'robot art', 'ai generated art', 'deep learning ai', 'picture learning ai', 'how does ai learn', 'will robots replace art', 'chess', 'checkmate', 'checkmate chess', '2 move checkmate', 'how to play chess', 'how to win in chess', 'how to win chess in 2 moves', 'how to win chess every time', 'how to win chess fast', 'how to win chess game', 'how to win chess easily', 'checkmate in 2 moves', 'checkmate in two moves', 'two move checkmate', 'chess tutorial', 'chess lesson', 'chess for beginners lessons', 'how to play chess for beginners', 'how to play chess better', 'easy checkmates', 'easy checkmate for black', 'easy checkmate tricks', 'generative art', 'processing', 'processingjs', 'code', 'programming', 'art', 'algorithms', 'rutgers', 'university', 'computer', 'science', 'dimacs', 'algorithmic', 'art', 'workshop', 'mathematics', 'gunter', 'weiss', 'technical', 'dresden', 'germany', 'aesthetics', 'cgs1060', 'cgs1100', 'algorithmic', 'art', 'nasa', 'spacecraft', 'launch', 'rocket', 'satellite', 'algorithms', 'art', 'simulation', 'nature', 'tedtalk', 'tedtalks', 'ted talk', 'ted talks', 'ted', 'tedglobal', 'arthur benjamin', 'entertainment', 'magic', 'math']
[2022-11-18 00:26:48,623] DEBUG - Top Tags ['art', 'ai art', 'computer science', 'algorithms', 'mathematics', 'algorithm', 'computers', 'computerphile', 'math', 'ai', 'ai generated art', 'algorithmic', 'refik anadol', 'machine intelligence', 'machine hallucination', 'artechouse', 'la philharmonic']
[2022-11-18 00:26:59,486] DEBUG - processing 26 tts sections
[2022-11-18 00:26:59,486] DEBUG - Text-to-speech: What is The Algorithmic Beauty of Graphics?
[2022-11-18 00:26:59,487] DEBUG - [#1] Subsection: What is The Algorithmic Beauty of Graphics?
[2022-11-18 00:27:19,836] DEBUG - Text-to-speech: The Algorithmic Beauty of Graphics is a book written by computer scientist and mathematician Joel Spolsky.
The book discusses the beauty of graphics from a computer science perspective, exploring the algorithms and processes that create stunning visual effects.
The book is available for free download at http://www.joelonsoftware.com/items/2008/01/29.html.
[2022-11-18 00:27:19,837] DEBUG - [#1] Subsection: The Algorithmic Beauty of Graphics is a book written by computer scientist and mathematician Joel Spolsky.
The book discusses the beauty of graphics from a computer science perspective, exploring the algorithms and processes that create stunning visual effects.
The book is available for free download at http://www.joelonsoftware.com/items/2008/01/29.html.
[2022-11-18 00:27:52,555] DEBUG - [#2] Subsection: The Algorithmic Beauty of Graphics is a book written by computer scientist and mathematician Joel Spolsky.
The book discusses the beauty of graphics from a computer science perspective, exploring the algorithms and processes that create stunning visual effects.
The book is available for free download at http://www.joelonsoftware.com/items/2008/01/29.html.
[2022-11-18 00:28:37,253] DEBUG - [#3] Subsection: The Algorithmic Beauty of Graphics is a book written by computer scientist and mathematician Joel Spolsky.
The book discusses the beauty of graphics from a computer science perspective, exploring the algorithms and processes that create stunning visual effects.
The book is available for free download at http://www.joelonsoftware.com/items/2008/01/29.html.
[2022-11-18 00:28:57,977] DEBUG - [#4] Subsection: The Algorithmic Beauty of Graphics is a book written by computer scientist and mathematician Joel Spolsky.
The book discusses the beauty of graphics from a computer science perspective, exploring the algorithms and processes that create stunning visual effects.
The book is available for free download at http://www.joelonsoftware.com/items/2008/01/29.html.
[2022-11-18 00:29:11,164] DEBUG - [#5] Subsection: The Algorithmic Beauty of Graphics is a book written by computer scientist and mathematician Joel Spolsky.
The book discusses the beauty of graphics from a computer science perspective, exploring the algorithms and processes that create stunning visual effects.
The book is available for free download at http://www.joelonsoftware.com/items/2008/01/29.html.
[2022-11-18 00:29:29,314] DEBUG - [#6] Subsection: The Algorithmic Beauty of Graphics is a book written by computer scientist and mathematician Joel Spolsky.
The book discusses the beauty of graphics from a computer science perspective, exploring the algorithms and processes that create stunning visual effects.
The book is available for free download at http://www.joelonsoftware.com/items/2008/01/29.html.
[2022-11-18 00:29:43,550] DEBUG - Text-to-speech: The history of The Algorithmic Beauty of Graphics
[2022-11-18 00:29:43,550] DEBUG - [#1] Subsection: The history of The Algorithmic Beauty of Graphics
[2022-11-18 00:30:02,699] DEBUG - Text-to-speech: The Algorithmic Beauty of Graphics was first published in 2008. The book was inspired by the work of computer graphics pioneer John F. Cramer, who developed the field of computergenerated art. Spolsky was also influenced by the work of artist and architect Ben Fry, who is known for using code to generate art. 

The book is divided into three parts.
The first part is about the basics of computer graphics.
The second part is about the basics of fractals.
The third part is about the basics of Lsystems.
[2022-11-18 00:30:02,699] DEBUG - [#1] Subsection: The Algorithmic Beauty of Graphics was first published in 2008. The book was inspired by the work of computer graphics pioneer John F. Cramer, who developed the field of computergenerated art. Spolsky was also influenced by the work of artist and architect Ben Fry, who is known for using code to generate art. 

The book is divided into three parts.
The first part is about the basics of computer graphics.
The second part is about the basics of fractals.
The third part is about the basics of Lsystems.
[2022-11-18 00:30:26,546] DEBUG - [#2] Subsection: The Algorithmic Beauty of Graphics was first published in 2008. The book was inspired by the work of computer graphics pioneer John F. Cramer, who developed the field of computergenerated art. Spolsky was also influenced by the work of artist and architect Ben Fry, who is known for using code to generate art. 

The book is divided into three parts.
The first part is about the basics of computer graphics.
The second part is about the basics of fractals.
The third part is about the basics of Lsystems.
